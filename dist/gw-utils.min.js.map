{"version":3,"file":"gw-utils.min.js","sources":["../js/random.js","../js/utils/chain.js","../js/utils/index.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/color/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/canvas.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/effect/flags.js","../js/effect/make.js","../js/effect/effect.js","../js/effect/fire.js","../js/effect/message.js","../js/effect/emit.js","../js/effect/fn.js","../js/effect/activateMachine.js","../js/blob.js","../js/light/light.js","../js/light/system.js","../js/gameObject/flags.js","../js/gameObject/gameObject.js","../js/item/index.js","../js/actor/flags.js","../js/actor/index.js","../js/tile/flags.js","../js/tile/tile.js","../js/tile/tiles.js","../js/tile/index.js","../js/map/flags.js","../js/map/cell.js","../js/map/layers.js","../js/map/cellMemory.js","../js/map/fireLayer.js","../js/map/gasLayer.js","../js/map/map.js","../js/map/analyze.js","../js/map/effect.js","../js/map/index.js"],"sourcesContent":["import * as Utils from './utils';\n/**\n * The code in this function is extracted from ROT.JS.\n * Source: https://github.com/ondras/rot.js/blob/v2.2.0/src/rng.ts\n * Copyright (c) 2012-now(), Ondrej Zara\n * All rights reserved.\n * License: BSD 3-Clause \"New\" or \"Revised\" License\n * See: https://github.com/ondras/rot.js/blob/v2.2.0/license.txt\n */\nexport function Alea(seed) {\n    /**\n     * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baag√∏e.\n     * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n     */\n    const FRAC = 2.3283064365386963e-10; /* 2^-32 */\n    // let _seed = 0;\n    let _s0 = 0;\n    let _s1 = 0;\n    let _s2 = 0;\n    let _c = 0;\n    /**\n     * Seed the number generator\n     */\n    if (seed) {\n        seed = seed < 1 ? 1 / seed : seed;\n        // _seed = seed;\n        _s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        _s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        _s2 = seed * FRAC;\n        _c = 1;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    return () => {\n        let t = 2091639 * _s0 + _c * FRAC;\n        _s0 = _s1;\n        _s1 = _s2;\n        _c = t | 0;\n        _s2 = t - _c;\n        return _s2;\n    };\n}\nconst RANDOM_CONFIG = {\n    make: Alea,\n    // make: (seed?: number) => {\n    //     let rng = ROT.RNG.clone();\n    //     if (seed) {\n    //         rng.setSeed(seed);\n    //     }\n    //     return rng.getUniform.bind(rng);\n    // },\n};\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor() {\n        this._fn = RANDOM_CONFIG.make();\n    }\n    configure(config = {}) {\n        if (config.make) {\n            RANDOM_CONFIG.make = config.make;\n            random.seed();\n            cosmetic.seed();\n        }\n    }\n    seed(val) {\n        val = val || Date.now();\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max = Number.MAX_SAFE_INTEGER) {\n        if (max <= 0)\n            return 0;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        Utils.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\n//# sourceMappingURL=random.js.map","// CHAIN\nexport function chainLength(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function chainIncludes(chain, entry) {\n    while (chain && chain !== entry) {\n        chain = chain.next;\n    }\n    return chain === entry;\n}\nexport function eachChain(item, fn) {\n    let index = 0;\n    while (item) {\n        const next = item.next;\n        fn(item, index++);\n        item = next;\n    }\n    return index; // really count\n}\nexport function addToChain(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function removeFromChain(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function findInChain(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport class Chain {\n    constructor(sort, onchange) {\n        this.data = null;\n        this.sort = sort || (() => -1);\n        this.onchange = onchange || (() => { });\n    }\n    copy(other) {\n        this.data = other.data;\n        this.sort = other.sort;\n        this.onchange = other.onchange;\n    }\n    get length() {\n        let count = 0;\n        this.forEach(() => ++count);\n        return count;\n    }\n    add(obj) {\n        if (!this.data || this.sort(this.data, obj) < 0) {\n            obj.next = this.data;\n            this.data = obj;\n            return true;\n        }\n        let prev = this.data;\n        let current = this.data.next;\n        while (current && this.sort(current, obj) < 0) {\n            prev = current;\n            current = current.next;\n        }\n        obj.next = current;\n        prev.next = obj;\n        this.onchange();\n        return true;\n    }\n    has(obj) {\n        return this.find((o) => o === obj) !== null;\n    }\n    remove(obj) {\n        if (!removeFromChain(this, 'data', obj)) {\n            return false;\n        }\n        this.onchange();\n        return true;\n    }\n    find(cb) {\n        return findInChain(this.data, cb);\n    }\n    forEach(cb) {\n        return eachChain(this.data, cb);\n    }\n    reduce(cb, out) {\n        let current = this.data;\n        if (!current)\n            return out;\n        if (out === undefined) {\n            out = current;\n            current = current.next;\n        }\n        while (current) {\n            cb(out, current);\n            current = current.next;\n        }\n        return out;\n    }\n    some(cb) {\n        let current = this.data;\n        while (current) {\n            if (cb(current))\n                return true;\n            current = current.next;\n        }\n        return false;\n    }\n    every(cb) {\n        let current = this.data;\n        while (current) {\n            if (!cb(current))\n                return false;\n            current = current.next;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=chain.js.map","/**\n * GW.utils\n * @module utils\n */\nimport { Random, Alea } from '../random';\nexport { Random, Alea };\nexport * from './chain';\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    get top() {\n        return this.y;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    contains(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (typeof x !== 'number') {\n            y = y(x);\n            x = x(x);\n        }\n        return (this.x <= x &&\n            this.y <= y &&\n            this.x + this.width > x &&\n            this.y + this.height > y);\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport async function eachNeighborAsync(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        await fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothHiliteGradient(currentXValue, maxXValue) {\n    return Math.floor(100 * Math.sin((Math.PI * currentXValue) / maxXValue));\n}\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\n// LINES\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLine(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc)) {\n            break;\n        }\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n        return x == toX && y == toY;\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return true;\n        line.push([x, y]);\n        return false;\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n// ALGOS\nexport async function asyncForEach(iterable, fn) {\n    for (let t of iterable) {\n        await fn(t);\n    }\n}\n//# sourceMappingURL=index.js.map","import { random } from './random';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1, rng) {\n        this._rng = rng || null;\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value() {\n        const rng = this._rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    contains(value) {\n        return this.lo <= value && this.hi >= value;\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        this._rng = other._rng;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config, rng) {\n    if (!config)\n        return new Range(0, 0, 0, rng);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0, rng);\n    if (typeof config == 'number')\n        return new Range(config, config, 1, rng);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2], rng);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0, rng);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count, rng);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps, rng);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3, rng);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1, rng);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config, rng) {\n    const range = make(config, rng);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './random';\nimport * as Utils from './utils';\nconst DIRS = Utils.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        Utils.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        Utils.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        Utils.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    dump(fmtFn, log = console.log) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn, log);\n    }\n    dumpRect(left, top, width, height, fmtFn, log = console.log) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius, fmtFn, log = console.log) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius, fmtFn, log);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * Utils.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return Utils.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\nexport const stats = {\n    active: 0,\n    alloc: 0,\n    create: 0,\n    free: 0,\n};\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++stats.active;\n        ++stats.alloc;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++stats.create;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++stats.free;\n            --stats.active;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new Utils.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        let dir;\n        let newX, newY, numberOfCells = 1;\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        // Iterate through the four cardinal neighbors.\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (!this.hasXY(newX, newY)) {\n                continue;\n            }\n            if (matchFn(this[newX][newY], newX, newY, this)) {\n                // If the neighbor is an unmarked region cell,\n                numberOfCells += this.floodFill(newX, newY, matchFn, fillFn); // then recurse.\n            }\n        }\n        return numberOfCells;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\nexport function onkeydown(e) {\n    if (ignoreKeyEvent(e))\n        return;\n    if (e.code === 'Escape') {\n        loop.clearEvents(); // clear all current events, then push on the escape\n    }\n    const ev = makeKeyEvent(e);\n    loop.pushEvent(ev);\n    e.preventDefault();\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = false;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            console.warn('OVERWRITE HANDLER - nextEvent');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        const interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n        this.running = true;\n        while (this.running) {\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                this.running = false;\n            }\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                // @ts-ignore\n                keymap.draw();\n            }\n        }\n        clearInterval(interval);\n    }\n    stop() {\n        this.running = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"MONSTER_DETECTED\"] = Fl(8)] = \"MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"WAS_MONSTER_DETECTED\"] = Fl(9)] = \"WAS_MONSTER_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.MONSTER_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || Utils.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius = 10, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = Utils.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GW from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        this.site = site;\n        this.flags = Grid.make(site.width, site.height, FovFlags.VISIBLE);\n        this._changed = true;\n        this.viewportChanged = false;\n        this.fov = new FOV.FOV({\n            isBlocked(x, y) {\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return x >= 0 && y >= 0 && x < site.width && y < site.height;\n            },\n        });\n        // we want fov, so do not reveal the map initially\n        if (opts.fov === true) {\n            this.flags.fill(0);\n        }\n        if (opts.visible) {\n            this.makeAlwaysVisible();\n        }\n        else if (opts.visible === false) {\n            this.flags.fill(0);\n        }\n        else if (opts.revealed) {\n            this.revealAll();\n        }\n    }\n    get changed() {\n        return this._changed;\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |= FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED;\n    }\n    revealAll() {\n        this.flags.update((v) => v | FovFlags.REVEALED | FovFlags.VISIBLE);\n    }\n    revealCell(x, y) {\n        const flag = FovFlags.REVEALED;\n        this.flags[x][y] |= flag;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED | FovFlags.REVEALED);\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n    }\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            if (!(flag & FovFlags.REVEALED) /* && DATA.automationActive */) {\n                this.site.onCellRevealed(x, y);\n                // if (cell.item) {\n                //     const theItem: GW.types.ItemType = cell.item;\n                //     if (\n                //         theItem.hasLayerFlag(ObjectFlags.L_INTERRUPT_WHEN_SEEN)\n                //     ) {\n                //         GW.message.add(\n                //             '¬ßyou¬ß ¬ßsee¬ß Œ©itemMessageColorŒ©¬ßitem¬ß‚àÜ.',\n                //             {\n                //                 item: theItem,\n                //                 actor: DATA.player,\n                //             }\n                //         );\n                //     }\n                // }\n                // if (\n                //     !(flag & FovFlags.MAGIC_MAPPED) &&\n                //     this.site.hasObjectFlag(\n                //         x,\n                //         y,\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     )\n                // ) {\n                //     const tile = cell.tileWithLayerFlag(\n                //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n                //     );\n                //     if (tile) {\n                //         GW.message.add(\n                //             '¬ßyou¬ß ¬ßsee¬ß Œ©backgroundMessageColorŒ©¬ßitem¬ß‚àÜ.',\n                //             {\n                //                 actor: DATA.player,\n                //                 item: tile.name,\n                //             }\n                //         );\n                //     }\n                // }\n                this.flags[x][y] |= FovFlags.REVEALED;\n            }\n            // this.site.redrawCell(x, y);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            // this.site.storeMemory(x, y);\n            // this.site.redrawCell(x, y);\n        }\n        return isVisible;\n    }\n    updateCellClairyvoyance(flag, x, y) {\n        const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n        const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n        if (isClairy && wasClairy) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isClairy && wasClairy) {\n            // ceased being clairvoyantly visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasClairy && isClairy) {\n            // became clairvoyantly visible\n            this.site.redrawCell(x, y, true);\n        }\n        return isClairy;\n    }\n    updateCellTelepathy(flag, x, y) {\n        const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n        const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n        if (isTele && wasTele) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isTele && wasTele) {\n            // ceased being telepathically visible\n            this.site.storeMemory(x, y);\n            this.site.redrawCell(x, y);\n        }\n        else if (!wasTele && isTele) {\n            // became telepathically visible\n            // if (\n            //     !(flag & FovFlags.REVEALED) &&\n            //     !cell.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER)\n            // ) {\n            //     DATA.xpxpThisTurn++;\n            // }\n            this.site.redrawCell(x, y, true);\n        }\n        return isTele;\n    }\n    updateCellDetect(flag, x, y) {\n        const isMonst = !!(flag & FovFlags.MONSTER_DETECTED);\n        const wasMonst = !!(flag & FovFlags.WAS_MONSTER_DETECTED);\n        if (isMonst && wasMonst) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isMonst && wasMonst) {\n            // ceased being detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        else if (!wasMonst && isMonst) {\n            // became detected visible\n            this.site.redrawCell(x, y, true);\n            // cell.storeMemory();\n        }\n        return isMonst;\n    }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        if (this.updateCellClairyvoyance(flag, x, y))\n            return;\n        if (this.updateCellTelepathy(flag, x, y))\n            return;\n        if (this.updateCellDetect(flag, x, y))\n            return;\n    }\n    update(cx, cy, cr) {\n        // if (!this.site.usesFov()) return false;\n        if (!this.viewportChanged &&\n            cx === undefined &&\n            !this.site.lightingChanged()) {\n            return false;\n        }\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            const flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                throw new Error('Received invalid viewport type: ' + type);\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as Utils from './utils';\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = Utils.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + Utils.DIRS[dir][0];\n        newY = y + Utils.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return Utils.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, true);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//# sourceMappingURL=path.js.map","import * as Utils from './utils';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {Function} fn The listener function.\n     * @param {Object} [context=null] The context to invoke the listener with.\n     * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {Function} fn - The function\n     * @param {Object} [context] - The context Object.\n     * @param {Boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    Utils.addToChain(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    Utils.eachChain(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            Utils.removeFromChain(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            Utils.removeFromChain(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { cosmetic } from '../random';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (other instanceof Color) {\n            this.dances = other.dances;\n        }\n        else if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.from(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.from(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg.scale(multiplier);\n        if (bg)\n            this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Œ©',\n    colorEnd: '‚àÜ',\n    field: '¬ß',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    while (count > 0) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1);\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this.toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        const mixer = new Mixer();\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const data = this.get(x, y);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(x, y, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport function makeDataBuffer(width, height) {\n    return new DataBuffer(width, height);\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\nexport function makeBuffer(...args) {\n    if (args.length == 1) {\n        return new Buffer(args[0]);\n    }\n    return new DataBuffer(args[0], args[1]);\n}\n//# sourceMappingURL=buffer.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    // draw(x: number, y: number, glyph: number, fg: number, bg: number) {\n    //     glyph = glyph & 0xff;\n    //     bg = bg & 0xfff;\n    //     fg = fg & 0xfff;\n    //     const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n    //     this._set(x, y, style);\n    //     return this;\n    // }\n    // fill(bg: number): this;\n    // fill(glyph: number, fg: number, bg: number): this;\n    // fill(...args: number[]): this {\n    //     let g = 0,\n    //         fg = 0,\n    //         bg = 0;\n    //     if (args.length == 1) {\n    //         bg = args[0];\n    //     } else if (args.length == 3) {\n    //         [g, fg, bg] = args;\n    //     }\n    //     for (let x = 0; x < this._width; ++x) {\n    //         for (let y = 0; y < this._height; ++y) {\n    //             this.draw(x, y, g, fg, bg);\n    //         }\n    //     }\n    //     return this;\n    // }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     const current = this._data[index];\n    //     if (current !== style) {\n    //         this._data[index] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n    }\n    return canvas;\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import * as Color from '../color';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = opacity >= 0 ? opacity : 100;\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)}, opacity: ${this.opacity} }`;\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n    return template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\nexport const handlers = [];\nexport function add(msg, args) {\n    return addAt(-1, -1, msg, args);\n}\nexport function addAt(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addMessage(x, y, msg));\n}\nexport function addCombat(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addCombatMessage(x, y, msg));\n}\nexport class MessageCache {\n    constructor(opts = {}) {\n        this.ARCHIVE = [];\n        this.CONFIRMED = [];\n        this.ARCHIVE_LINES = 30;\n        this.MSG_WIDTH = 80;\n        this.NEXT_WRITE_INDEX = 0;\n        this.NEEDS_UPDATE = true;\n        this.COMBAT_MESSAGE = null;\n        this.ARCHIVE_LINES = opts.length || 30;\n        this.MSG_WIDTH = opts.width || 80;\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            this.ARCHIVE[i] = null;\n            this.CONFIRMED[i] = false;\n        }\n        handlers.push(this);\n    }\n    get needsUpdate() {\n        return this.NEEDS_UPDATE;\n    }\n    set needsUpdate(needs) {\n        if (needs) {\n            this.NEEDS_UPDATE = true;\n        }\n    }\n    // function messageWithoutCaps(msg, requireAcknowledgment) {\n    addMessageLine(msg) {\n        if (!Text.length(msg)) {\n            return;\n        }\n        // Add the message to the archive.\n        this.ARCHIVE[this.NEXT_WRITE_INDEX] = msg;\n        this.CONFIRMED[this.NEXT_WRITE_INDEX] = false;\n        this.NEXT_WRITE_INDEX =\n            (this.NEXT_WRITE_INDEX + 1) % this.ARCHIVE_LINES;\n    }\n    addMessage(_x, _y, msg) {\n        this._addMessage(msg);\n    }\n    _addMessage(msg) {\n        var _a;\n        this.commitCombatMessage();\n        msg = Text.capitalize(msg);\n        // // Implement the American quotation mark/period/comma ordering rule.\n        // for (i=0; text.text[i] && text.text[i+1]; i++) {\n        //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n        //         i += 4;\n        //     } else if (text.text[i] === '\"'\n        //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n        // \t\t{\n        // \t\t\tconst replace = text.text[i+1] + '\"';\n        // \t\t\ttext.spliceRaw(i, 2, replace);\n        //     }\n        // }\n        const lines = Text.splitIntoLines(msg, this.MSG_WIDTH);\n        if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n            lines.reverse();\n        }\n        lines.forEach((l) => this.addMessageLine(l));\n        // display the message:\n        this.NEEDS_UPDATE = true;\n        // if (GAME.playbackMode) {\n        // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n        // }\n    }\n    addCombatMessage(_x, _y, msg) {\n        this._addCombatMessage(msg);\n    }\n    _addCombatMessage(msg) {\n        if (!this.COMBAT_MESSAGE) {\n            this.COMBAT_MESSAGE = msg;\n        }\n        else {\n            this.COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    commitCombatMessage() {\n        if (!this.COMBAT_MESSAGE)\n            return false;\n        this._addMessage(this.COMBAT_MESSAGE + '.');\n        this.COMBAT_MESSAGE = null;\n        return true;\n    }\n    confirmAll() {\n        for (let i = 0; i < this.CONFIRMED.length; i++) {\n            this.CONFIRMED[i] = true;\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    forEach(fn) {\n        this.commitCombatMessage();\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            const n = (this.ARCHIVE_LINES - i + this.NEXT_WRITE_INDEX - 1) %\n                this.ARCHIVE_LINES;\n            const msg = this.ARCHIVE[n];\n            if (!msg)\n                return;\n            if (fn(msg, this.CONFIRMED[n], i) === false)\n                return;\n        }\n    }\n}\n//# sourceMappingURL=message.js.map","import { fl as Fl } from '../flag';\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Effect;\n(function (Effect) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    Effect[Effect[\"E_NEXT_ALWAYS\"] = Fl(0)] = \"E_NEXT_ALWAYS\";\n    Effect[Effect[\"E_NEXT_EVERYWHERE\"] = Fl(1)] = \"E_NEXT_EVERYWHERE\";\n    Effect[Effect[\"E_FIRED\"] = Fl(2)] = \"E_FIRED\";\n    Effect[Effect[\"E_NO_MARK_FIRED\"] = Fl(3)] = \"E_NO_MARK_FIRED\";\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    Effect[Effect[\"E_PROTECTED\"] = Fl(4)] = \"E_PROTECTED\";\n    // E_NO_REDRAW_CELL = Fl(),\n    Effect[Effect[\"E_TREAT_AS_BLOCKING\"] = Fl(5)] = \"E_TREAT_AS_BLOCKING\";\n    Effect[Effect[\"E_PERMIT_BLOCKING\"] = Fl(6)] = \"E_PERMIT_BLOCKING\";\n    Effect[Effect[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(7)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Effect[Effect[\"E_BLOCKED_BY_ITEMS\"] = Fl(8)] = \"E_BLOCKED_BY_ITEMS\";\n    Effect[Effect[\"E_BLOCKED_BY_ACTORS\"] = Fl(9)] = \"E_BLOCKED_BY_ACTORS\";\n    Effect[Effect[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(10)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Effect[Effect[\"E_SUPERPRIORITY\"] = Fl(11)] = \"E_SUPERPRIORITY\";\n    Effect[Effect[\"E_SPREAD_CIRCLE\"] = Fl(13)] = \"E_SPREAD_CIRCLE\";\n    Effect[Effect[\"E_SPREAD_LINE\"] = Fl(14)] = \"E_SPREAD_LINE\";\n    Effect[Effect[\"E_EVACUATE_CREATURES\"] = Fl(15)] = \"E_EVACUATE_CREATURES\";\n    Effect[Effect[\"E_EVACUATE_ITEMS\"] = Fl(16)] = \"E_EVACUATE_ITEMS\";\n    Effect[Effect[\"E_BUILD_IN_WALLS\"] = Fl(17)] = \"E_BUILD_IN_WALLS\";\n    Effect[Effect[\"E_MUST_TOUCH_WALLS\"] = Fl(18)] = \"E_MUST_TOUCH_WALLS\";\n    Effect[Effect[\"E_NO_TOUCH_WALLS\"] = Fl(19)] = \"E_NO_TOUCH_WALLS\";\n    Effect[Effect[\"E_CLEAR_GROUND\"] = Fl(21)] = \"E_CLEAR_GROUND\";\n    Effect[Effect[\"E_CLEAR_SURFACE\"] = Fl(22)] = \"E_CLEAR_SURFACE\";\n    Effect[Effect[\"E_CLEAR_LIQUID\"] = Fl(23)] = \"E_CLEAR_LIQUID\";\n    Effect[Effect[\"E_CLEAR_GAS\"] = Fl(24)] = \"E_CLEAR_GAS\";\n    Effect[Effect[\"E_CLEAR_TILE\"] = Fl(25)] = \"E_CLEAR_TILE\";\n    Effect[Effect[\"E_CLEAR_CELL\"] = Effect.E_CLEAR_GROUND |\n        Effect.E_CLEAR_SURFACE |\n        Effect.E_CLEAR_LIQUID |\n        Effect.E_CLEAR_GAS] = \"E_CLEAR_CELL\";\n    Effect[Effect[\"E_ONLY_IF_EMPTY\"] = Effect.E_BLOCKED_BY_ITEMS | Effect.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    Effect[Effect[\"E_ACTIVATE_DORMANT_MONSTER\"] = Fl(27)] = \"E_ACTIVATE_DORMANT_MONSTER\";\n    Effect[Effect[\"E_AGGRAVATES_MONSTERS\"] = Fl(28)] = \"E_AGGRAVATES_MONSTERS\";\n    Effect[Effect[\"E_RESURRECT_ALLY\"] = Fl(29)] = \"E_RESURRECT_ALLY\";\n})(Effect || (Effect = {}));\n//# sourceMappingURL=flags.js.map","import { from as fromFlag } from '../flag';\nimport { Effect as Flags } from './flags';\nimport { handlers, effects } from './effect';\nexport function make(opts) {\n    var _a;\n    if (!opts)\n        throw new Error('opts required to make effect.');\n    if (typeof opts === 'string') {\n        throw new Error('Cannot make effect from string: ' + opts);\n    }\n    if (typeof opts === 'function') {\n        opts = { fn: opts };\n    }\n    // now make base effect stuff\n    const info = {\n        flags: fromFlag(Flags, opts.flags),\n        chance: (_a = opts.chance) !== null && _a !== void 0 ? _a : 0,\n        next: null,\n        id: opts.id || 'n/a',\n    };\n    if (opts.next) {\n        if (typeof opts.next === 'string') {\n            info.next = opts.next;\n        }\n        else {\n            info.next = make(opts.next);\n        }\n    }\n    // and all the handlers\n    Object.values(handlers).forEach((v) => v.make(opts, info));\n    return info;\n}\nexport function from(opts) {\n    if (!opts)\n        throw new Error('Cannot make effect from null | undefined');\n    if (typeof opts === 'string') {\n        const effect = effects[opts];\n        if (effect)\n            return effect;\n        throw new Error('Unknown effect - ' + opts);\n    }\n    return make(opts);\n}\n//# sourceMappingURL=make.js.map","import { Effect as Flags } from './flags';\nimport { make } from './make';\n// resetMessageDisplayed\nexport function reset(effect) {\n    effect.flags &= ~Flags.E_FIRED;\n}\nexport function resetAll() {\n    Object.values(effects).forEach((e) => reset(e));\n}\nexport const effects = {};\nexport function install(id, config) {\n    const effect = make(config);\n    effects[id] = effect;\n    effect.id = id;\n    return effect;\n}\nexport function installAll(effects) {\n    Object.entries(effects).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport const handlers = {};\nexport function installHandler(id, handler) {\n    handlers[id] = handler;\n}\n//# sourceMappingURL=effect.js.map","import { data as DATA } from '../gw';\nimport * as Grid from '../grid';\nimport { random } from '../random';\nimport { Effect as Flags } from './flags';\nimport { handlers } from './effect';\nimport { from } from './make';\nexport async function fire(effect, map, x, y, ctx_ = {}) {\n    if (!effect)\n        return false;\n    if (typeof effect === 'string') {\n        const name = effect;\n        effect = from(name);\n        if (!effect)\n            throw new Error('Failed to find effect: ' + name);\n    }\n    const ctx = ctx_;\n    if (!ctx.force && effect.chance && !random.chance(effect.chance, 10000))\n        return false;\n    const grid = (ctx.grid = Grid.alloc(map.width, map.height));\n    let didSomething = true;\n    const allHandlers = Object.values(handlers);\n    for (let h of allHandlers) {\n        if (await h.fire(effect, map, x, y, ctx)) {\n            didSomething = true;\n        }\n    }\n    // bookkeeping\n    if (didSomething &&\n        map.isVisible(x, y) &&\n        !(effect.flags & Flags.E_NO_MARK_FIRED)) {\n        effect.flags |= Flags.E_FIRED;\n    }\n    // do the next effect - if applicable\n    if (effect.next &&\n        (didSomething || effect.flags & Flags.E_NEXT_ALWAYS) &&\n        !DATA.gameHasEnded) {\n        const nextInfo = typeof effect.next === 'string' ? from(effect.next) : effect.next;\n        if (effect.flags & Flags.E_NEXT_EVERYWHERE) {\n            await grid.forEachAsync(async (v, i, j) => {\n                if (!v)\n                    return;\n                // @ts-ignore\n                await fire(nextInfo, map, i, j, ctx);\n            });\n        }\n        else {\n            await fire(nextInfo, map, x, y, ctx);\n        }\n    }\n    Grid.free(grid);\n    return didSomething;\n}\nexport function fireSync(effect, map, x, y, ctx_ = {}) {\n    if (!effect)\n        return false;\n    if (typeof effect === 'string') {\n        const name = effect;\n        effect = from(name);\n        if (!effect)\n            throw new Error('Failed to find effect: ' + name);\n    }\n    const ctx = ctx_;\n    if (!ctx.force && effect.chance && !random.chance(effect.chance, 10000))\n        return false;\n    const grid = (ctx.grid = Grid.alloc(map.width, map.height));\n    let didSomething = true;\n    const allHandlers = Object.values(handlers);\n    for (let h of allHandlers) {\n        if (h.fireSync(effect, map, x, y, ctx)) {\n            didSomething = true;\n        }\n    }\n    // bookkeeping\n    if (didSomething &&\n        map.isVisible(x, y) &&\n        !(effect.flags & Flags.E_NO_MARK_FIRED)) {\n        effect.flags |= Flags.E_FIRED;\n    }\n    // do the next effect - if applicable\n    if (effect.next &&\n        (didSomething || effect.flags & Flags.E_NEXT_ALWAYS) &&\n        !DATA.gameHasEnded) {\n        const nextInfo = typeof effect.next === 'string' ? from(effect.next) : effect.next;\n        if (effect.flags & Flags.E_NEXT_EVERYWHERE) {\n            grid.forEach(async (v, i, j) => {\n                if (!v)\n                    return;\n                fireSync(nextInfo, map, i, j, ctx);\n            });\n        }\n        else {\n            fireSync(nextInfo, map, x, y, ctx);\n        }\n    }\n    Grid.free(grid);\n    return didSomething;\n}\n//# sourceMappingURL=fire.js.map","import * as EFFECT from './effect';\nimport { Effect as Flags } from './flags';\nimport * as Msg from '../message';\n//////////////////////////////////////////////\n// MESSAGE\nexport class MessageEffect {\n    make(src, dest) {\n        if (!src.message)\n            return true;\n        if (typeof src.message !== 'string') {\n            throw new Error('Emit must be configured with name of event to emit');\n        }\n        dest.message = src.message;\n        return true;\n    }\n    async fire(config, map, x, y, ctx) {\n        if (!config.message)\n            return false;\n        const fired = !!(config.flags & Flags.E_FIRED);\n        if (config.message &&\n            config.message.length &&\n            !fired &&\n            map.isVisible(x, y)) {\n            Msg.add(config.message, ctx);\n            return true;\n        }\n        return false;\n    }\n    fireSync(config, _map, _x, _y, _ctx) {\n        if (!config.message)\n            return false;\n        throw new Error('Cannot use \"message\" effects in build steps.');\n    }\n}\nEFFECT.installHandler('message', new MessageEffect());\n//# sourceMappingURL=message.js.map","import * as EFFECT from './effect';\nimport * as Events from '../events';\n//////////////////////////////////////////////\n// EMIT\nexport class EmitEffect {\n    make(src, dest) {\n        if (!src.emit)\n            return true;\n        if (typeof src.emit !== 'string') {\n            throw new Error('emit effects must be string name to emit: { emit: \"EVENT\" }');\n        }\n        dest.emit = src.emit;\n        return true;\n    }\n    async fire(config, _map, x, y, ctx) {\n        if (config.emit) {\n            return await Events.emit(config.emit, x, y, ctx);\n        }\n        return false;\n    }\n    fireSync(config, _map, _x, _y, _ctx) {\n        if (!config.emit)\n            return false;\n        throw new Error('Cannot use \"emit\" effects in build steps.');\n    }\n}\nEFFECT.installHandler('emit', new EmitEffect());\n//# sourceMappingURL=emit.js.map","import * as EFFECT from './effect';\n//////////////////////////////////////////////\n// FN\nexport class FnEffect {\n    make(src, dest) {\n        if (!src.fn)\n            return true;\n        if (typeof src.fn !== 'function') {\n            throw new Error('fn effects must be functions.');\n        }\n        dest.fn = src.fn;\n        return true;\n    }\n    async fire(config, map, x, y, ctx) {\n        if (config.fn) {\n            return await config.fn(config, map, x, y, ctx);\n        }\n        return false;\n    }\n    fireSync(config, map, x, y, ctx) {\n        if (config.fn) {\n            const result = config.fn(config, map, x, y, ctx);\n            if (result === true || result === false) {\n                return result;\n            }\n            throw new Error('Cannot use async function effects in build steps.');\n        }\n        return false;\n    }\n}\nEFFECT.installHandler('fn', new FnEffect());\n//# sourceMappingURL=fn.js.map","import * as EFFECT from './effect';\n//////////////////////////////////////////////\n// ActivateMachine\nexport class ActivateMachineEffect {\n    make(src, dest) {\n        if (!src.activateMachine)\n            return true;\n        dest.activateMachine = true;\n        return true;\n    }\n    async fire(config, map, x, y, ctx) {\n        if (config.activateMachine) {\n            const cell = map.cell(x, y);\n            const machine = cell.machineId;\n            if (!machine)\n                return false;\n            return await map.activateMachine(machine, x, y, ctx);\n        }\n        return false;\n    }\n    fireSync(config, map, x, y, ctx) {\n        if (config.activateMachine) {\n            const cell = map.cell(x, y);\n            const machine = cell.machineId;\n            if (!machine)\n                return false;\n            return map.activateMachineSync(machine, x, y, ctx);\n        }\n        return false;\n    }\n}\nEFFECT.installHandler('activateMachine', new ActivateMachineEffect());\n//# sourceMappingURL=activateMachine.js.map","import * as UTILS from './utils';\nimport * as GRID from './grid';\nimport { random } from './random';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new UTILS.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = random.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < UTILS.DIRS.length; dir++) {\n                    newX = i + UTILS.DIRS[dir][0];\n                    newY = j + UTILS.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, range, fadeTo, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color) || null; /* color */\n        this.radius = Range.make(range || 1);\n        this.fadeTo = fadeTo || 0;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(map, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!map)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(map.width, map.height, 0);\n        map.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (Utils.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS[k] * lightMultiplier) / 100);\n            }\n            map.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    return Math.max(light[0], light[1], light[2]);\n}\nexport function isDarkLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_DARK;\n    return intensity(light) <= (threshold || 20);\n}\nexport function isShadowLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_SHADOW;\n    return intensity(light) <= (threshold || 20);\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    if (source)\n        source.id = id;\n    return source;\n}\nexport function installAll(config = {}) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as Utils from '../utils';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this._changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    getAmbient() {\n        return this.ambient;\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get anyLightChanged() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    get changed() {\n        return this._changed;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        Utils.eachChain(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this._changed = false;\n        if (!force && !this.anyLightChanged)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT && PLAYERS_LIGHT.radius) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this._changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        Utils.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const map = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && map.hasActor(x, y))\n                    return false;\n                return map.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return map.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map","import { fl as Fl } from '../flag';\nexport var GameObject;\n(function (GameObject) {\n    // L_DYNAMIC = Fl(0), // for movable things like actors or items\n    GameObject[GameObject[\"L_SUPERPRIORITY\"] = Fl(1)] = \"L_SUPERPRIORITY\";\n    GameObject[GameObject[\"L_SECRETLY_PASSABLE\"] = Fl(2)] = \"L_SECRETLY_PASSABLE\";\n    GameObject[GameObject[\"L_BLOCKS_MOVE\"] = Fl(3)] = \"L_BLOCKS_MOVE\";\n    GameObject[GameObject[\"L_BLOCKS_VISION\"] = Fl(4)] = \"L_BLOCKS_VISION\";\n    GameObject[GameObject[\"L_BLOCKS_SURFACE\"] = Fl(6)] = \"L_BLOCKS_SURFACE\";\n    GameObject[GameObject[\"L_BLOCKS_LIQUID\"] = Fl(8)] = \"L_BLOCKS_LIQUID\";\n    GameObject[GameObject[\"L_BLOCKS_GAS\"] = Fl(7)] = \"L_BLOCKS_GAS\";\n    GameObject[GameObject[\"L_BLOCKS_ITEMS\"] = Fl(5)] = \"L_BLOCKS_ITEMS\";\n    GameObject[GameObject[\"L_BLOCKS_ACTORS\"] = Fl(11)] = \"L_BLOCKS_ACTORS\";\n    GameObject[GameObject[\"L_BLOCKS_EFFECTS\"] = Fl(9)] = \"L_BLOCKS_EFFECTS\";\n    GameObject[GameObject[\"L_BLOCKS_DIAGONAL\"] = Fl(10)] = \"L_BLOCKS_DIAGONAL\";\n    GameObject[GameObject[\"L_INTERRUPT_WHEN_SEEN\"] = Fl(12)] = \"L_INTERRUPT_WHEN_SEEN\";\n    GameObject[GameObject[\"L_LIST_IN_SIDEBAR\"] = Fl(13)] = \"L_LIST_IN_SIDEBAR\";\n    GameObject[GameObject[\"L_VISUALLY_DISTINCT\"] = Fl(14)] = \"L_VISUALLY_DISTINCT\";\n    GameObject[GameObject[\"L_BRIGHT_MEMORY\"] = Fl(15)] = \"L_BRIGHT_MEMORY\";\n    GameObject[GameObject[\"L_INVERT_WHEN_HIGHLIGHTED\"] = Fl(16)] = \"L_INVERT_WHEN_HIGHLIGHTED\";\n    GameObject[GameObject[\"L_BLOCKED_BY_STAIRS\"] = GameObject.L_BLOCKS_ITEMS |\n        GameObject.L_BLOCKS_SURFACE |\n        GameObject.L_BLOCKS_GAS |\n        GameObject.L_BLOCKS_LIQUID |\n        GameObject.L_BLOCKS_EFFECTS |\n        GameObject.L_BLOCKS_ACTORS] = \"L_BLOCKED_BY_STAIRS\";\n    GameObject[GameObject[\"L_BLOCKS_SCENT\"] = GameObject.L_BLOCKS_MOVE | GameObject.L_BLOCKS_VISION] = \"L_BLOCKS_SCENT\";\n    GameObject[GameObject[\"L_DIVIDES_LEVEL\"] = GameObject.L_BLOCKS_MOVE] = \"L_DIVIDES_LEVEL\";\n    GameObject[GameObject[\"L_WAYPOINT_BLOCKER\"] = GameObject.L_BLOCKS_MOVE] = \"L_WAYPOINT_BLOCKER\";\n    GameObject[GameObject[\"L_WALL_FLAGS\"] = GameObject.L_BLOCKS_MOVE |\n        GameObject.L_BLOCKS_VISION |\n        GameObject.L_BLOCKS_LIQUID |\n        GameObject.L_BLOCKS_GAS |\n        GameObject.L_BLOCKS_EFFECTS |\n        GameObject.L_BLOCKS_DIAGONAL] = \"L_WALL_FLAGS\";\n    GameObject[GameObject[\"L_BLOCKS_EVERYTHING\"] = GameObject.L_WALL_FLAGS |\n        GameObject.L_BLOCKS_ITEMS |\n        GameObject.L_BLOCKS_ACTORS |\n        GameObject.L_BLOCKS_SURFACE] = \"L_BLOCKS_EVERYTHING\";\n})(GameObject || (GameObject = {}));\nexport var Depth;\n(function (Depth) {\n    Depth[Depth[\"ALL_LAYERS\"] = -1] = \"ALL_LAYERS\";\n    Depth[Depth[\"GROUND\"] = 0] = \"GROUND\";\n    Depth[Depth[\"SURFACE\"] = 1] = \"SURFACE\";\n    Depth[Depth[\"ITEM\"] = 2] = \"ITEM\";\n    Depth[Depth[\"ACTOR\"] = 3] = \"ACTOR\";\n    Depth[Depth[\"LIQUID\"] = 4] = \"LIQUID\";\n    Depth[Depth[\"GAS\"] = 5] = \"GAS\";\n    Depth[Depth[\"FX\"] = 6] = \"FX\";\n    Depth[Depth[\"UI\"] = 7] = \"UI\";\n})(Depth || (Depth = {}));\n//# sourceMappingURL=flags.js.map","import { Sprite } from '../sprite';\nimport * as Flags from './flags';\nexport class GameObject {\n    constructor() {\n        this.sprite = new Sprite();\n        this.depth = 1; // default - TODO - enum/const\n        this.light = null;\n        this.flags = { object: 0 };\n        this.next = null;\n        this.x = -1;\n        this.y = -1;\n    }\n    hasObjectFlag(flag) {\n        return !!(this.flags.object & flag);\n    }\n    hasAllObjectFlags(flags) {\n        return (this.flags.object & flags) === flags;\n    }\n    blocksMove() {\n        return this.hasObjectFlag(Flags.GameObject.L_BLOCKS_MOVE);\n    }\n    blocksVision() {\n        return this.hasObjectFlag(Flags.GameObject.L_BLOCKS_VISION);\n    }\n    blocksPathing() {\n        return this.hasObjectFlag(Flags.GameObject.L_BLOCKS_MOVE);\n    }\n    blocksEffects() {\n        return this.hasObjectFlag(Flags.GameObject.L_BLOCKS_EFFECTS);\n    }\n    itemFlags() {\n        return 0;\n    }\n    actorFlags() {\n        return 0;\n    }\n}\n//# sourceMappingURL=gameObject.js.map","import { GameObject } from '../gameObject';\nimport { Depth } from '../gameObject/flags';\nexport class Item extends GameObject {\n    constructor() {\n        super();\n        this.quantity = 1;\n        this.next = null;\n        // @ts-ignore\n        this.flags = this.flags || {};\n        this.flags.item = 0;\n        this.depth = Depth.ITEM;\n    }\n    itemFlags() {\n        return this.flags.item;\n    }\n    hasItemFlag(flag) {\n        return !!(this.flags.item & flag);\n    }\n    hasAllItemFlags(flags) {\n        return (this.flags.item & flags) === flags;\n    }\n    forbidsCell(_cell) {\n        return false;\n    }\n}\n//# sourceMappingURL=index.js.map","import { fl as Fl } from '../flag';\nexport { GameObject, Depth } from '../gameObject/flags';\nexport var Actor;\n(function (Actor) {\n    Actor[Actor[\"IS_PLAYER\"] = Fl(0)] = \"IS_PLAYER\";\n})(Actor || (Actor = {}));\n//# sourceMappingURL=flags.js.map","import { GameObject } from '../gameObject';\nimport * as Flags from './flags';\nimport * as flags_1 from './flags';\nexport { flags_1 as flags };\nexport class Actor extends GameObject {\n    constructor() {\n        super();\n        this.next = null;\n        // @ts-ignore\n        this.flags = this.flags || {};\n        this.flags.actor = 0;\n        this.depth = Flags.Depth.ACTOR;\n    }\n    hasActorFlag(flag) {\n        return !!(this.flags.actor & flag);\n    }\n    hasAllActorFlags(flags) {\n        return (this.flags.actor & flags) === flags;\n    }\n    actorFlags() {\n        return this.flags.actor;\n    }\n    isPlayer() {\n        return this.hasActorFlag(Flags.Actor.IS_PLAYER);\n    }\n    isVisible() {\n        return true;\n    }\n    forbidsCell(_cell) {\n        return false;\n    }\n}\n//# sourceMappingURL=index.js.map","import { fl as Fl } from '../flag';\n///////////////////////////////////////////////////////\n// TILE\nexport var Tile;\n(function (Tile) {\n    Tile[Tile[\"T_BRIDGE\"] = Fl(0)] = \"T_BRIDGE\";\n    Tile[Tile[\"T_AUTO_DESCENT\"] = Fl(1)] = \"T_AUTO_DESCENT\";\n    Tile[Tile[\"T_LAVA\"] = Fl(2)] = \"T_LAVA\";\n    Tile[Tile[\"T_DEEP_WATER\"] = Fl(3)] = \"T_DEEP_WATER\";\n    Tile[Tile[\"T_IS_FLAMMABLE\"] = Fl(5)] = \"T_IS_FLAMMABLE\";\n    Tile[Tile[\"T_SPONTANEOUSLY_IGNITES\"] = Fl(6)] = \"T_SPONTANEOUSLY_IGNITES\";\n    Tile[Tile[\"T_IS_FIRE\"] = Fl(7)] = \"T_IS_FIRE\";\n    Tile[Tile[\"T_EXTINGUISHES_FIRE\"] = Fl(8)] = \"T_EXTINGUISHES_FIRE\";\n    Tile[Tile[\"T_IS_SECRET\"] = Fl(9)] = \"T_IS_SECRET\";\n    Tile[Tile[\"T_IS_TRAP\"] = Fl(10)] = \"T_IS_TRAP\";\n    Tile[Tile[\"T_SACRED\"] = Fl(11)] = \"T_SACRED\";\n    Tile[Tile[\"T_UP_STAIRS\"] = Fl(12)] = \"T_UP_STAIRS\";\n    Tile[Tile[\"T_DOWN_STAIRS\"] = Fl(13)] = \"T_DOWN_STAIRS\";\n    Tile[Tile[\"T_PORTAL\"] = Fl(14)] = \"T_PORTAL\";\n    Tile[Tile[\"T_IS_DOOR\"] = Fl(15)] = \"T_IS_DOOR\";\n    Tile[Tile[\"T_ALLOWS_SUBMERGING\"] = Fl(16)] = \"T_ALLOWS_SUBMERGING\";\n    Tile[Tile[\"T_ENTANGLES\"] = Fl(17)] = \"T_ENTANGLES\";\n    Tile[Tile[\"T_REFLECTS\"] = Fl(18)] = \"T_REFLECTS\";\n    Tile[Tile[\"T_STAND_IN_TILE\"] = Fl(19)] = \"T_STAND_IN_TILE\";\n    Tile[Tile[\"T_CONNECTS_LEVEL\"] = Fl(20)] = \"T_CONNECTS_LEVEL\";\n    Tile[Tile[\"T_BLOCKS_OTHER_LAYERS\"] = Fl(21)] = \"T_BLOCKS_OTHER_LAYERS\";\n    Tile[Tile[\"T_HAS_STAIRS\"] = Tile.T_UP_STAIRS | Tile.T_DOWN_STAIRS | Tile.T_PORTAL] = \"T_HAS_STAIRS\";\n    Tile[Tile[\"T_OBSTRUCTS_SCENT\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_HAS_STAIRS] = \"T_OBSTRUCTS_SCENT\";\n    Tile[Tile[\"T_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_IS_FIRE |\n        Tile.T_SPONTANEOUSLY_IGNITES |\n        Tile.T_ENTANGLES] = \"T_PATHING_BLOCKER\";\n    Tile[Tile[\"T_LAKE_PATHING_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_LAKE_PATHING_BLOCKER\";\n    Tile[Tile[\"T_WAYPOINT_BLOCKER\"] = Tile.T_AUTO_DESCENT |\n        Tile.T_IS_TRAP |\n        Tile.T_LAVA |\n        Tile.T_DEEP_WATER |\n        Tile.T_SPONTANEOUSLY_IGNITES] = \"T_WAYPOINT_BLOCKER\";\n    Tile[Tile[\"T_DIVIDES_LEVEL\"] = Tile.T_AUTO_DESCENT | Tile.T_IS_TRAP | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_DIVIDES_LEVEL\";\n    Tile[Tile[\"T_MOVES_ITEMS\"] = Tile.T_DEEP_WATER | Tile.T_LAVA] = \"T_MOVES_ITEMS\";\n    Tile[Tile[\"T_CAN_BE_BRIDGED\"] = Tile.T_AUTO_DESCENT | Tile.T_LAVA | Tile.T_DEEP_WATER] = \"T_CAN_BE_BRIDGED\";\n    // T_HARMFUL_TERRAIN = T_CAUSES_POISON |\n    //   T_IS_FIRE |\n    //   T_CAUSES_DAMAGE |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_EXPLOSIVE_DAMAGE,\n    // T_RESPIRATION_IMMUNITIES = T_CAUSES_DAMAGE |\n    //   T_CAUSES_CONFUSION |\n    //   T_CAUSES_PARALYSIS |\n    //   T_CAUSES_NAUSEA,\n    Tile[Tile[\"T_IS_DEEP_LIQUID\"] = Tile.T_LAVA | Tile.T_AUTO_DESCENT | Tile.T_DEEP_WATER] = \"T_IS_DEEP_LIQUID\";\n})(Tile || (Tile = {}));\n///////////////////////////////////////////////////////\n// TILE MECH\nexport var TileMech;\n(function (TileMech) {\n    // TM_PROMOTES_WITH_KEY = Fl(1), // promotes if the key is present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_WITHOUT_KEY = Fl(2), // promotes if the key is NOT present on the tile (in your pack, carried by monster, or lying on the ground)\n    // TM_PROMOTES_ON_STEP = Fl(3), // promotes when a creature, player or item is on the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ITEM_REMOVE = Fl(4), // promotes when an item is lifted from the tile (primarily for altars)\n    // TM_PROMOTES_ON_PLAYER_ENTRY = Fl(5), // promotes when the player enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_SACRIFICE_ENTRY = Fl(6), // promotes when the sacrifice target enters the tile (whether or not levitating)\n    // TM_PROMOTES_ON_ELECTRICITY = Fl(7), // promotes when hit by a lightning bolt\n    // T_CAUSES_POISON = Fl(18), // any non-levitating creature gets 10 poison\n    // T_CAUSES_DAMAGE = Fl(19), // anything on the tile takes max(1-2, 10%) damage per turn\n    // T_CAUSES_NAUSEA = Fl(20), // any creature on the tile becomes nauseous\n    // T_CAUSES_PARALYSIS = Fl(21), // anything caught on this tile is paralyzed\n    // T_CAUSES_CONFUSION = Fl(22), // causes creatures on this tile to become confused\n    // T_CAUSES_HEALING = Fl(23), // heals 20% max HP per turn for any player or non-inanimate monsters\n    // T_CAUSES_EXPLOSIVE_DAMAGE = Fl(25), // is an explosion; deals higher of 15-20 or 50% damage instantly, but not again for five turns\n    TileMech[TileMech[\"TM_IS_WIRED\"] = Fl(9)] = \"TM_IS_WIRED\";\n    TileMech[TileMech[\"TM_IS_CIRCUIT_BREAKER\"] = Fl(10)] = \"TM_IS_CIRCUIT_BREAKER\";\n    TileMech[TileMech[\"TM_VANISHES_UPON_PROMOTION\"] = Fl(15)] = \"TM_VANISHES_UPON_PROMOTION\";\n    TileMech[TileMech[\"TM_EXPLOSIVE_PROMOTE\"] = Fl(21)] = \"TM_EXPLOSIVE_PROMOTE\";\n    TileMech[TileMech[\"TM_SWAP_ENCHANTS_ACTIVATION\"] = Fl(25)] = \"TM_SWAP_ENCHANTS_ACTIVATION\";\n    // TM_PROMOTES = TM_PROMOTES_WITH_KEY |\n    //   TM_PROMOTES_WITHOUT_KEY |\n    //   TM_PROMOTES_ON_STEP |\n    //   TM_PROMOTES_ON_ITEM_REMOVE |\n    //   TM_PROMOTES_ON_SACRIFICE_ENTRY |\n    //   TM_PROMOTES_ON_ELECTRICITY |\n    //   TM_PROMOTES_ON_PLAYER_ENTRY,\n})(TileMech || (TileMech = {}));\n//# sourceMappingURL=flags.js.map","import { Depth, GameObject as ObjectFlags, } from '../gameObject/flags';\nimport * as Light from '../light';\nimport * as Sprite from '../sprite';\nimport * as Flag from '../flag';\nimport { make as makeEffect } from '../effect/make';\nimport * as Flags from './flags';\nimport * as Color from '../color';\nexport class Tile {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this.index = -1;\n        this.dissipate = 20 * 100; // 0%\n        this.effects = {};\n        this.priority = 50;\n        this.depth = 0;\n        this.light = null;\n        this.groundTile = null;\n        this.id = config.id || 'n/a';\n        this.dissipate = (_a = config.dissipate) !== null && _a !== void 0 ? _a : this.dissipate;\n        this.priority = (_b = config.priority) !== null && _b !== void 0 ? _b : this.priority;\n        this.depth = (_c = config.depth) !== null && _c !== void 0 ? _c : this.depth;\n        this.light = config.light || null;\n        this.groundTile = config.groundTile || null;\n        this.sprite = Sprite.make(config);\n        this.name = config.name || 'tile';\n        this.description = config.description || this.name;\n        this.flavor = config.flavor || this.name;\n        this.article = (_d = config.article) !== null && _d !== void 0 ? _d : null;\n        this.flags = config.flags || { object: 0, tile: 0, tileMech: 0 };\n        if (config.effects) {\n            Object.assign(this.effects, config.effects);\n        }\n    }\n    hasObjectFlag(flag) {\n        return !!(this.flags.object & flag);\n    }\n    hasTileFlag(flag) {\n        return !!(this.flags.tile & flag);\n    }\n    hasTileMechFlag(flag) {\n        return !!(this.flags.tileMech & flag);\n    }\n    hasAllObjectFlags(flag) {\n        return (this.flags.object & flag) === flag;\n    }\n    hasAllTileFlags(flag) {\n        return (this.flags.tile & flag) === flag;\n    }\n    hasAllTileMechFlags(flag) {\n        return (this.flags.tileMech & flag) === flag;\n    }\n    blocksVision() {\n        return !!(this.flags.object & ObjectFlags.L_BLOCKS_VISION);\n    }\n    blocksMove() {\n        return !!(this.flags.object & ObjectFlags.L_BLOCKS_MOVE);\n    }\n    blocksPathing() {\n        return (this.blocksMove() || this.hasTileFlag(Flags.Tile.T_PATHING_BLOCKER));\n    }\n    blocksEffects() {\n        return !!(this.flags.object & ObjectFlags.L_BLOCKS_EFFECTS);\n    }\n    hasEffect(name) {\n        return name in this.effects;\n    }\n    getName(arg) {\n        let opts = {};\n        if (arg === true || arg === false) {\n            opts.article = arg;\n        }\n        else if (typeof arg === 'string') {\n            opts.article = arg;\n        }\n        else if (arg) {\n            opts = arg;\n        }\n        if (!opts.article && !opts.color)\n            return this.name;\n        let result = this.name;\n        if (opts.color) {\n            let color = opts.color;\n            if (opts.color === true) {\n                color = this.sprite.fg || 'white';\n            }\n            if (typeof color !== 'string') {\n                color = Color.from(color).toString();\n            }\n            result = `Œ©${color}Œ©${this.name}‚àÜ`;\n        }\n        if (opts.article) {\n            let article = typeof opts.article === 'string'\n                ? opts.article\n                : this.article || 'a';\n            result = article + ' ' + result;\n        }\n        return result;\n    }\n    getDescription() {\n        return this.description || this.getName();\n    }\n    getFlavor() {\n        return this.flavor || this.getName();\n    }\n}\nexport function make(options) {\n    var _a, _b, _c, _d, _e, _f;\n    let base = { effects: {}, flags: {}, sprite: {}, priority: 50 };\n    if (options.extends) {\n        base = tiles[options.extends];\n        if (!base)\n            throw new Error('Failed to find base tile: ' + options.extends);\n    }\n    let priority = -1;\n    if (typeof options.priority === 'string') {\n        if (options.priority.startsWith('+') ||\n            options.priority.startsWith('-')) {\n            priority = base.priority + Number.parseInt(options.priority);\n        }\n        else {\n            priority = Number.parseInt(options.priority);\n        }\n    }\n    else if (options.priority !== undefined) {\n        priority = options.priority;\n    }\n    const effects = {};\n    Object.assign(effects, base.effects);\n    if (options.effects) {\n        Object.entries(options.effects).forEach(([key, value]) => {\n            if (value === null) {\n                delete effects[key];\n                return;\n            }\n            if (typeof value === 'string') {\n                effects[key] = value;\n                return;\n            }\n            effects[key] = makeEffect(value);\n        });\n    }\n    const flags = {\n        object: Flag.from(ObjectFlags, base.flags.object, options.flags),\n        tile: Flag.from(Flags.Tile, base.flags.tile, options.flags),\n        tileMech: Flag.from(Flags.TileMech, base.flags.tileMech, options.flags),\n    };\n    let depth = base.depth || 0;\n    if (options.depth) {\n        if (typeof options.depth === 'string') {\n            depth = Depth[options.depth];\n        }\n        else {\n            depth = options.depth;\n        }\n    }\n    let light = base.light;\n    if (options.light) {\n        light = Light.make(options.light);\n    }\n    else if (options.light === null) {\n        light = null;\n    }\n    const config = {\n        id: options.id,\n        flags,\n        dissipate: (_a = options.dissipate) !== null && _a !== void 0 ? _a : base.dissipate,\n        effects,\n        priority: priority != -1 ? priority : undefined,\n        depth: depth,\n        light,\n        groundTile: options.groundTile || null,\n        ch: (_b = options.ch) !== null && _b !== void 0 ? _b : base.sprite.ch,\n        fg: (_c = options.fg) !== null && _c !== void 0 ? _c : base.sprite.fg,\n        bg: (_d = options.bg) !== null && _d !== void 0 ? _d : base.sprite.bg,\n        opacity: (_e = options.opacity) !== null && _e !== void 0 ? _e : base.sprite.opacity,\n        name: options.name || base.name,\n        description: options.description || base.description,\n        flavor: options.flavor || base.flavor,\n        article: (_f = options.article) !== null && _f !== void 0 ? _f : base.article,\n    };\n    const tile = new Tile(config);\n    return tile;\n}\nexport const tiles = {};\nexport const all = [];\nexport function get(id) {\n    if (id instanceof Tile)\n        return id;\n    if (typeof id === 'string')\n        return tiles[id] || null;\n    return all[id] || null;\n}\nexport function install(id, ...args) {\n    let options = args[0];\n    if (args.length == 2) {\n        options = args[1];\n        options.extends = args[0];\n    }\n    options.id = id;\n    const tile = make(options);\n    tile.index = all.length;\n    all.push(tile);\n    tiles[id] = tile;\n    return tile;\n}\nexport function installAll(tiles) {\n    Object.entries(tiles).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\n//# sourceMappingURL=tile.js.map","import * as Tile from './tile';\n// These are the minimal set of tiles to make the diggers work\nTile.install('NULL', {\n    ch: '\\u2205',\n    fg: 'white',\n    bg: 'black',\n    flags: 'L_BLOCKS_MOVE',\n    name: 'eerie nothingness',\n    article: 'an',\n    priority: 0,\n});\nTile.install('FLOOR', {\n    ch: '\\u00b7',\n    fg: [30, 30, 30, 20, 0, 0, 0],\n    bg: [2, 2, 10, 0, 2, 2, 0],\n    priority: 10,\n    article: 'the',\n});\nTile.install('DOOR', {\n    ch: '+',\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 30,\n    flags: 'T_IS_DOOR, L_BLOCKS_EFFECTS, L_BLOCKS_ITEMS, L_BLOCKS_VISION, L_VISUALLY_DISTINCT',\n    article: 'a',\n    effects: {\n        enter: { tile: 'DOOR_OPEN' },\n        open: { tile: 'DOOR_OPEN_ALWAYS' },\n    },\n});\nTile.install('DOOR_OPEN', 'DOOR', {\n    ch: \"'\",\n    fg: [100, 40, 40],\n    bg: [30, 60, 60],\n    priority: 40,\n    flags: '!L_BLOCKS_ITEMS, !L_BLOCKS_VISION',\n    name: 'open door',\n    article: 'an',\n    effects: {\n        tick: {\n            chance: 100 * 100,\n            tile: 'DOOR',\n            flags: 'E_SUPERPRIORITY, E_ONLY_IF_EMPTY',\n        },\n        enter: null,\n        open: null,\n        close: { tile: 'DOOR', flags: 'E_SUPERPRIORITY, E_ONLY_IF_EMPTY' },\n    },\n});\nTile.install('DOOR_OPEN_ALWAYS', 'DOOR_OPEN', {\n    effects: {\n        tick: null,\n        close: { tile: 'DOOR', flags: 'E_SUPERPRIORITY, E_ONLY_IF_EMPTY' },\n    },\n});\nTile.install('UP_STAIRS', {\n    ch: '<',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_UP_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, L_LIST_IN_SIDEBAR',\n    name: 'upward staircase',\n    article: 'an',\n    effects: {\n        player: { emit: 'UP_STAIRS' },\n    },\n});\nTile.install('DOWN_STAIRS', {\n    ch: '>',\n    fg: [100, 50, 50],\n    bg: [40, 20, 20],\n    priority: 200,\n    flags: 'T_DOWN_STAIRS, L_BLOCKED_BY_STAIRS, L_VISUALLY_DISTINCT, L_LIST_IN_SIDEBAR',\n    name: 'downward staircase',\n    article: 'a',\n    effects: {\n        player: { emit: 'DOWN_STAIRS' },\n    },\n});\nTile.install('WALL', {\n    ch: '#',\n    fg: [7, 7, 7, 0, 3, 3, 3],\n    bg: [40, 40, 40, 10, 10, 0, 5],\n    priority: 100,\n    flags: 'L_WALL_FLAGS',\n    article: 'a',\n    name: 'stone wall',\n    description: 'A wall made from rough cut stone.',\n    flavor: 'a rough stone wall',\n});\nTile.install('IMPREGNABLE', {\n    ch: '#',\n    fg: [7, 7, 7, 0, 3, 3, 3],\n    bg: [40, 40, 40, 10, 10, 0, 5],\n    priority: 100,\n    flags: 'L_WALL_FLAGS, IMPREGNABLE',\n    article: 'a',\n    name: 'impregnable wall',\n    description: 'A wall made from very hard stone.',\n    flavor: 'an impregnable wall',\n});\nTile.install('LAKE', {\n    ch: '~',\n    fg: [5, 8, 20, 10, 0, 4, 15, true],\n    bg: [10, 15, 41, 6, 5, 5, 5, true],\n    priority: 50,\n    flags: 'T_DEEP_WATER',\n    name: 'deep water',\n    article: 'the',\n});\nTile.install('SHALLOW', {\n    ch: '\\u00b7',\n    fg: [5, 8, 10, 10, 0, 4, 15, true],\n    bg: [10, 30, 30, 6, 0, 10, 10, true],\n    priority: 20,\n    name: 'shallow water',\n    article: 'the',\n    depth: 'SURFACE', // 'LIQUID'?\n});\nTile.install('BRIDGE', {\n    ch: '=',\n    fg: [100, 40, 40],\n    priority: 40,\n    depth: 'SURFACE',\n    flags: 'T_BRIDGE, L_VISUALLY_DISTINCT',\n    article: 'a',\n    groundTile: 'LAKE',\n});\n//# sourceMappingURL=tiles.js.map","import { Tile, TileMech } from './flags';\nexport const flags = { Tile, TileMech };\nexport * from './types';\nexport * from './tile';\nimport './tiles';\n//# sourceMappingURL=index.js.map","import { fl as Fl } from '../flag';\nexport { GameObject, Depth } from '../gameObject/flags';\nexport { Tile, TileMech } from '../tile/flags';\n///////////////////////////////////////////////////////\n// CELL\nexport var Cell;\n(function (Cell) {\n    Cell[Cell[\"SEARCHED_FROM_HERE\"] = Fl(0)] = \"SEARCHED_FROM_HERE\";\n    Cell[Cell[\"PRESSURE_PLATE_DEPRESSED\"] = Fl(1)] = \"PRESSURE_PLATE_DEPRESSED\";\n    Cell[Cell[\"KNOWN_TO_BE_TRAP_FREE\"] = Fl(2)] = \"KNOWN_TO_BE_TRAP_FREE\";\n    Cell[Cell[\"CAUGHT_FIRE_THIS_TURN\"] = Fl(3)] = \"CAUGHT_FIRE_THIS_TURN\";\n    Cell[Cell[\"EVENT_FIRED_THIS_TURN\"] = Fl(4)] = \"EVENT_FIRED_THIS_TURN\";\n    Cell[Cell[\"EVENT_PROTECTED\"] = Fl(5)] = \"EVENT_PROTECTED\";\n    Cell[Cell[\"IS_IN_LOOP\"] = Fl(6)] = \"IS_IN_LOOP\";\n    Cell[Cell[\"IS_CHOKEPOINT\"] = Fl(7)] = \"IS_CHOKEPOINT\";\n    Cell[Cell[\"IS_GATE_SITE\"] = Fl(8)] = \"IS_GATE_SITE\";\n    Cell[Cell[\"IS_IN_ROOM_MACHINE\"] = Fl(9)] = \"IS_IN_ROOM_MACHINE\";\n    Cell[Cell[\"IS_IN_AREA_MACHINE\"] = Fl(10)] = \"IS_IN_AREA_MACHINE\";\n    Cell[Cell[\"IS_POWERED\"] = Fl(11)] = \"IS_POWERED\";\n    Cell[Cell[\"IMPREGNABLE\"] = Fl(12)] = \"IMPREGNABLE\";\n    // DARKENED = Fl(13), // magical blindness?\n    Cell[Cell[\"NEEDS_REDRAW\"] = Fl(14)] = \"NEEDS_REDRAW\";\n    Cell[Cell[\"CELL_CHANGED\"] = Fl(15)] = \"CELL_CHANGED\";\n    // These are to help memory\n    Cell[Cell[\"HAS_SURFACE\"] = Fl(16)] = \"HAS_SURFACE\";\n    Cell[Cell[\"HAS_LIQUID\"] = Fl(17)] = \"HAS_LIQUID\";\n    Cell[Cell[\"HAS_GAS\"] = Fl(18)] = \"HAS_GAS\";\n    Cell[Cell[\"HAS_PLAYER\"] = Fl(19)] = \"HAS_PLAYER\";\n    Cell[Cell[\"HAS_ACTOR\"] = Fl(20)] = \"HAS_ACTOR\";\n    Cell[Cell[\"HAS_DORMANT_MONSTER\"] = Fl(21)] = \"HAS_DORMANT_MONSTER\";\n    Cell[Cell[\"HAS_ITEM\"] = Fl(22)] = \"HAS_ITEM\";\n    Cell[Cell[\"IS_IN_PATH\"] = Fl(23)] = \"IS_IN_PATH\";\n    Cell[Cell[\"IS_CURSOR\"] = Fl(24)] = \"IS_CURSOR\";\n    Cell[Cell[\"STABLE_MEMORY\"] = Fl(25)] = \"STABLE_MEMORY\";\n    Cell[Cell[\"IS_WIRED\"] = Fl(26)] = \"IS_WIRED\";\n    Cell[Cell[\"IS_CIRCUIT_BREAKER\"] = Fl(27)] = \"IS_CIRCUIT_BREAKER\";\n    Cell[Cell[\"COLORS_DANCE\"] = Fl(30)] = \"COLORS_DANCE\";\n    Cell[Cell[\"IS_IN_MACHINE\"] = Cell.IS_IN_ROOM_MACHINE | Cell.IS_IN_AREA_MACHINE] = \"IS_IN_MACHINE\";\n    Cell[Cell[\"PERMANENT_CELL_FLAGS\"] = Cell.HAS_ITEM |\n        Cell.HAS_DORMANT_MONSTER |\n        Cell.STABLE_MEMORY |\n        Cell.SEARCHED_FROM_HERE |\n        Cell.PRESSURE_PLATE_DEPRESSED |\n        Cell.KNOWN_TO_BE_TRAP_FREE |\n        Cell.IS_IN_LOOP |\n        Cell.IS_CHOKEPOINT |\n        Cell.IS_GATE_SITE |\n        Cell.IS_IN_MACHINE |\n        Cell.IMPREGNABLE] = \"PERMANENT_CELL_FLAGS\";\n    Cell[Cell[\"HAS_ANY_ACTOR\"] = Cell.HAS_PLAYER | Cell.HAS_ACTOR] = \"HAS_ANY_ACTOR\";\n    Cell[Cell[\"HAS_ANY_OBJECT\"] = Cell.HAS_ITEM | Cell.HAS_ANY_ACTOR] = \"HAS_ANY_OBJECT\";\n    Cell[Cell[\"CELL_DEFAULT\"] = Cell.NEEDS_REDRAW | Cell.CELL_CHANGED] = \"CELL_DEFAULT\";\n})(Cell || (Cell = {}));\n///////////////////////////////////////////////////////\n// MAP\nexport var Map;\n(function (Map) {\n    Map[Map[\"MAP_CHANGED\"] = Fl(0)] = \"MAP_CHANGED\";\n    Map[Map[\"MAP_ALWAYS_LIT\"] = Fl(3)] = \"MAP_ALWAYS_LIT\";\n    Map[Map[\"MAP_SAW_WELCOME\"] = Fl(4)] = \"MAP_SAW_WELCOME\";\n    Map[Map[\"MAP_NO_LIQUID\"] = Fl(5)] = \"MAP_NO_LIQUID\";\n    Map[Map[\"MAP_NO_GAS\"] = Fl(6)] = \"MAP_NO_GAS\";\n    Map[Map[\"MAP_CALC_FOV\"] = Fl(7)] = \"MAP_CALC_FOV\";\n    Map[Map[\"MAP_FOV_CHANGED\"] = Fl(8)] = \"MAP_FOV_CHANGED\";\n    Map[Map[\"MAP_DANCES\"] = Fl(9)] = \"MAP_DANCES\";\n    Map[Map[\"MAP_DEFAULT\"] = 0] = \"MAP_DEFAULT\";\n})(Map || (Map = {}));\n//# sourceMappingURL=flags.js.map","import { Cell as Flags, GameObject as ObjectFlags, Tile as TileFlags, } from './flags';\nimport * as TILE from '../tile';\nimport * as Effect from '../effect';\nclass CellObjects {\n    constructor(cell) {\n        this.cell = cell;\n    }\n    forEach(cb) {\n        let object = this.cell._item;\n        while (object) {\n            cb(object);\n            object = object.next;\n        }\n        object = this.cell._actor;\n        while (object) {\n            cb(object);\n            object = object.next;\n        }\n    }\n    some(cb) {\n        let object = this.cell._item;\n        while (object) {\n            if (cb(object))\n                return true;\n            object = object.next;\n        }\n        object = this.cell._actor;\n        while (object) {\n            if (cb(object))\n                return true;\n            object = object.next;\n        }\n        return false;\n    }\n    reduce(cb, start) {\n        let object = this.cell._item;\n        while (object) {\n            if (start === undefined) {\n                start = object;\n            }\n            else {\n                start = cb(start, object);\n            }\n            object = object.next;\n        }\n        object = this.cell._actor;\n        while (object) {\n            if (start === undefined) {\n                start = object;\n            }\n            else {\n                start = cb(start, object);\n            }\n            object = object.next;\n        }\n        return start;\n    }\n}\nexport class Cell {\n    constructor(groundTile) {\n        this.chokeCount = 0;\n        this.machineId = 0;\n        // gasVolume: number = 0;\n        // liquidVolume: number = 0;\n        this._actor = null;\n        this._item = null;\n        this._objects = new CellObjects(this);\n        this.flags = { cell: 0 };\n        this.tiles = [TILE.tiles.NULL];\n        if (groundTile) {\n            const tile = TILE.get(groundTile);\n            this.setTile(tile);\n        }\n    }\n    copy(other) {\n        Object.assign(this.flags, other.flags);\n        this.chokeCount = other.chokeCount;\n        this.tiles = other.tiles.slice();\n        this._actor = other._actor;\n        this._item = other._item;\n    }\n    hasCellFlag(flag) {\n        return !!(this.flags.cell & flag);\n    }\n    setCellFlag(flag) {\n        this.flags.cell |= flag;\n    }\n    clearCellFlag(flag) {\n        this.flags.cell &= ~flag;\n    }\n    hasObjectFlag(flag) {\n        return (this.tiles.some((t) => t && t.flags.object & flag) ||\n            this._objects.some((o) => !!(o.flags.object & flag)));\n    }\n    hasAllObjectFlags(flags) {\n        return (this.objectFlags() & flags) == flags;\n    }\n    hasTileFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tile & flag);\n    }\n    hasAllTileFlags(flags) {\n        return (this.tileFlags() & flags) == flags;\n    }\n    hasTileMechFlag(flag) {\n        return this.tiles.some((t) => t && t.flags.tileMech & flag);\n    }\n    hasAllTileMechFlags(flags) {\n        return (this.tileMechFlags() & flags) == flags;\n    }\n    cellFlags() {\n        return this.flags.cell;\n    }\n    objectFlags() {\n        return (this.tiles.reduce((out, t) => out | (t ? t.flags.object : 0), 0) |\n            this._objects.reduce((out, o) => out | o.flags.object, 0));\n    }\n    tileFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tile : 0), 0);\n    }\n    tileMechFlags() {\n        return this.tiles.reduce((out, t) => out | (t ? t.flags.tileMech : 0), 0);\n    }\n    itemFlags() {\n        return this._objects.reduce((out, o) => out | o.itemFlags(), 0);\n    }\n    actorFlags() {\n        return this._objects.reduce((out, o) => out | o.actorFlags(), 0);\n    }\n    get needsRedraw() {\n        return !!(this.flags.cell & Flags.NEEDS_REDRAW);\n    }\n    set needsRedraw(v) {\n        if (v) {\n            this.flags.cell |= Flags.NEEDS_REDRAW;\n        }\n        else {\n            this.flags.cell &= ~Flags.NEEDS_REDRAW;\n        }\n    }\n    depthPriority(depth) {\n        const tile = this.tiles[depth];\n        return tile ? tile.priority : TILE.tiles.NULL.priority;\n    }\n    highestPriority() {\n        return this.tiles.reduce((out, t) => Math.max(out, t ? t.priority : 0), TILE.tiles.NULL.priority);\n    }\n    depthTile(depth) {\n        return this.tiles[depth] || null;\n    }\n    hasTile(tile) {\n        if (!tile)\n            return this.tiles.some((t) => t);\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n        }\n        return this.tiles.includes(tile);\n    }\n    hasDepthTile(depth) {\n        const t = this.tiles[depth];\n        return !!t && t !== TILE.tiles.NULL;\n    }\n    highestPriorityTile() {\n        return this.tiles.reduce((out, tile) => {\n            if (!tile)\n                return out;\n            if (tile.priority >= out.priority)\n                return tile; // higher depth will get picked with >=\n            return out;\n        }, TILE.tiles.NULL);\n    }\n    get tile() {\n        return this.highestPriorityTile();\n    }\n    eachTile(cb) {\n        this.tiles.forEach((t) => t && cb(t));\n    }\n    tileWithObjectFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.object & flag) || null;\n    }\n    tileWithFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tile & flag) || null;\n    }\n    tileWithMechFlag(flag) {\n        return this.tiles.find((t) => t && t.flags.tileMech & flag) || null;\n    }\n    blocksVision() {\n        return (this.tiles.some((t) => t && t.blocksVision()) ||\n            this._objects.some((o) => o.blocksVision()));\n    }\n    blocksPathing() {\n        return (this.tiles.some((t) => t && t.blocksPathing()) ||\n            this._objects.some((o) => o.blocksPathing()));\n    }\n    blocksMove() {\n        return (this.tiles.some((t) => t && t.blocksMove()) ||\n            this._objects.some((o) => o.blocksMove()));\n    }\n    blocksEffects() {\n        return (this.tiles.some((t) => t && t.blocksEffects()) ||\n            this._objects.some((o) => o.blocksEffects()));\n    }\n    blocksLayer(depth) {\n        return this.tiles.some((t) => t &&\n            !!(t.flags.tile & TILE.flags.Tile.T_BLOCKS_OTHER_LAYERS) &&\n            t.depth != depth);\n    }\n    // Tests\n    isEmpty() {\n        return (this.tiles.every((t) => !t || t === TILE.tiles.NULL) &&\n            this._actor == null &&\n            this._item == null);\n    }\n    isPassable() {\n        return !this.blocksMove();\n    }\n    isWall() {\n        return this.hasAllObjectFlags(ObjectFlags.L_WALL_FLAGS);\n    }\n    isStairs() {\n        return this.hasTileFlag(TileFlags.T_HAS_STAIRS);\n    }\n    hasKey() {\n        return false;\n    }\n    // @returns - whether or not the change results in a change to the cell lighting.\n    setTile(tile) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n            if (!tile)\n                return false;\n        }\n        // const current = this.tiles[tile.depth] || TILE.tiles.NULL;\n        // if (current !== tile) {\n        //     this.gasVolume = 0;\n        //     this.liquidVolume = 0;\n        // }\n        // Check priority, etc...\n        this.tiles[tile.depth] = tile;\n        this.needsRedraw = true;\n        // if (volume) {\n        //     if (tile.depth === Depth.GAS) {\n        //         this.gasVolume = volume;\n        //     }\n        //     if (tile.depth === Depth.LIQUID) {\n        //         this.liquidVolume = volume;\n        //     }\n        // }\n        return true;\n    }\n    clear() {\n        this.tiles = [TILE.tiles.NULL];\n        this.needsRedraw = true;\n        this.flags.cell = 0;\n        this.chokeCount = 0;\n        this._actor = null;\n        this._item = null;\n    }\n    clearDepth(depth) {\n        if (depth == 0) {\n            this.tiles[0] = TILE.tiles.NULL;\n            this.needsRedraw = true;\n            return true;\n        }\n        else if (this.tiles[depth] !== null) {\n            this.tiles[depth] = null;\n            this.needsRedraw = true;\n            return true;\n        }\n        return false;\n    }\n    clearDepthsWithFlags(tileFlag, tileMechFlag = 0) {\n        for (let i = 0; i < this.tiles.length; ++i) {\n            const tile = this.tiles[i];\n            if (!tile)\n                continue;\n            if (!tile.hasTileFlag(tileFlag))\n                continue;\n            if (tileMechFlag && !tile.hasTileMechFlag(tileMechFlag))\n                continue;\n            this.clearDepth(i);\n        }\n    }\n    // Lights\n    eachGlowLight(cb) {\n        this.tiles.forEach((tile) => {\n            if (tile && tile.light)\n                cb(tile.light);\n        });\n    }\n    // Effects\n    async activate(event, map, x, y, ctx = {}) {\n        ctx.cell = this;\n        let didSomething = false;\n        if (ctx.depth !== undefined) {\n            const tile = (ctx.tile = this.depthTile(ctx.depth));\n            if (tile && tile.effects) {\n                const ev = tile.effects[event];\n                didSomething = await this._fire(ev, map, x, y, ctx);\n            }\n        }\n        else {\n            // console.log('fire event - %s', event);\n            for (ctx.tile of this.tiles) {\n                if (!ctx.tile || !ctx.tile.effects)\n                    continue;\n                const ev = ctx.tile.effects[event];\n                // console.log(' - ', ev);\n                if (await this._fire(ev, map, x, y, ctx)) {\n                    didSomething = true;\n                    break;\n                }\n                // }\n            }\n        }\n        return didSomething;\n    }\n    activateSync(event, map, x, y, ctx = {}) {\n        ctx.cell = this;\n        let didSomething = false;\n        if (ctx.depth !== undefined) {\n            const tile = (ctx.tile = this.depthTile(ctx.depth));\n            if (tile && tile.effects) {\n                const ev = tile.effects[event];\n                didSomething = this._fireSync(ev, map, x, y, ctx);\n            }\n        }\n        else {\n            // console.log('fire event - %s', event);\n            for (ctx.tile of this.tiles) {\n                if (!ctx.tile || !ctx.tile.effects)\n                    continue;\n                const ev = ctx.tile.effects[event];\n                // console.log(' - ', ev);\n                if (this._fireSync(ev, map, x, y, ctx)) {\n                    didSomething = true;\n                    break;\n                }\n                // }\n            }\n        }\n        return didSomething;\n    }\n    async _fire(effect, map, x, y, ctx) {\n        if (typeof effect === 'string') {\n            effect = Effect.effects[effect];\n        }\n        let didSomething = false;\n        if (effect) {\n            // console.log(' - spawn event @%d,%d - %s', x, y, name);\n            didSomething = await Effect.fire(effect, map, x, y, ctx);\n            // cell.debug(\" - spawned\");\n        }\n        return didSomething;\n    }\n    _fireSync(effect, map, x, y, ctx) {\n        if (typeof effect === 'string') {\n            effect = Effect.effects[effect];\n        }\n        let didSomething = false;\n        if (effect) {\n            // console.log(' - spawn event @%d,%d - %s', x, y, name);\n            didSomething = Effect.fireSync(effect, map, x, y, ctx);\n            // cell.debug(\" - spawned\");\n        }\n        return didSomething;\n    }\n    hasEffect(name) {\n        for (let tile of this.tiles) {\n            if (tile && tile.hasEffect(name))\n                return true;\n        }\n        return false;\n    }\n    // // Items\n    hasItem() {\n        return this.hasCellFlag(Flags.HAS_ITEM);\n    }\n    get item() {\n        return this._item;\n    }\n    set item(val) {\n        this._item = val;\n        if (val) {\n            this.setCellFlag(Flags.HAS_ITEM);\n        }\n        else {\n            this.clearCellFlag(Flags.HAS_ITEM);\n        }\n        this.needsRedraw = true;\n    }\n    // // Actors\n    hasActor() {\n        return this.hasCellFlag(Flags.HAS_ACTOR);\n    }\n    hasPlayer() {\n        return this.hasCellFlag(Flags.HAS_PLAYER);\n    }\n    get actor() {\n        return this._actor;\n    }\n    set actor(val) {\n        this._actor = val;\n        if (val) {\n            this.setCellFlag(Flags.HAS_ACTOR);\n        }\n        else {\n            this.clearCellFlag(Flags.HAS_ACTOR);\n        }\n        this.needsRedraw = true;\n    }\n    getDescription() {\n        return this.highestPriorityTile().description;\n    }\n    getFlavor() {\n        return this.highestPriorityTile().flavor;\n    }\n    getName(opts = {}) {\n        return this.highestPriorityTile().getName(opts);\n    }\n    dump() {\n        var _a, _b, _c, _d;\n        if ((_b = (_a = this._actor) === null || _a === void 0 ? void 0 : _a.sprite) === null || _b === void 0 ? void 0 : _b.ch)\n            return this._actor.sprite.ch;\n        if ((_d = (_c = this._item) === null || _c === void 0 ? void 0 : _c.sprite) === null || _d === void 0 ? void 0 : _d.ch)\n            return this._item.sprite.ch;\n        return this.highestPriorityTile().sprite.ch || ' ';\n    }\n}\n//# sourceMappingURL=cell.js.map","import * as Tile from '../tile';\nimport * as Flags from './flags';\nimport * as Utils from '../utils';\nimport { Depth } from '../gameObject/flags';\nexport class MapLayer {\n    constructor(map, name = 'layer') {\n        this.map = map;\n        this.depth = -1;\n        this.properties = {};\n        this.name = name;\n    }\n    copy(_other) { }\n    async tick(_dt) {\n        return false;\n    }\n}\nexport class ActorLayer extends MapLayer {\n    constructor(map, name = 'actor') {\n        super(map, name);\n    }\n    add(x, y, obj, _opts) {\n        const cell = this.map.cell(x, y);\n        const actor = obj;\n        if (actor.forbidsCell(cell))\n            return false;\n        if (!Utils.addToChain(cell, 'actor', obj))\n            return false;\n        if (obj.isPlayer()) {\n            cell.setCellFlag(Flags.Cell.HAS_PLAYER);\n        }\n        obj.x = x;\n        obj.y = y;\n        return true;\n    }\n    remove(obj) {\n        const cell = this.map.cell(obj.x, obj.y);\n        if (!Utils.removeFromChain(cell, 'actor', obj))\n            return false;\n        if (obj.isPlayer()) {\n            cell.clearCellFlag(Flags.Cell.HAS_PLAYER);\n        }\n        return true;\n    }\n    putAppearance(dest, x, y) {\n        const cell = this.map.cell(x, y);\n        if (!cell.actor)\n            return;\n        dest.drawSprite(cell.actor.sprite);\n    }\n}\nexport class ItemLayer extends MapLayer {\n    constructor(map, name = 'item') {\n        super(map, name);\n    }\n    add(x, y, obj, _opts) {\n        const cell = this.map.cell(x, y);\n        const item = obj;\n        if (item.forbidsCell(cell))\n            return false;\n        if (!Utils.addToChain(cell, 'item', obj))\n            return false;\n        obj.x = x;\n        obj.y = y;\n        return true;\n    }\n    remove(obj) {\n        const cell = this.map.cell(obj.x, obj.y);\n        if (!Utils.removeFromChain(cell, 'item', obj))\n            return false;\n        return true;\n    }\n    putAppearance(dest, x, y) {\n        const cell = this.map.cell(x, y);\n        if (!cell.item)\n            return;\n        dest.drawSprite(cell.item.sprite);\n    }\n}\nexport class TileLayer extends MapLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    set(x, y, tile, opts = {}) {\n        const cell = this.map.cell(x, y);\n        const current = cell.depthTile(tile.depth) || Tile.tiles.NULL;\n        if (!opts.superpriority) {\n            // if (current !== tile) {\n            //     this.gasVolume = 0;\n            //     this.liquidVolume = 0;\n            // }\n            // Check priority, etc...\n            if (current.priority > tile.priority) {\n                return false;\n            }\n        }\n        if (cell.blocksLayer(tile.depth))\n            return false;\n        if (opts.blockedByItems && cell.hasItem())\n            return false;\n        if (opts.blockedByActors && cell.hasActor())\n            return false;\n        if (opts.blockedByOtherLayers && cell.highestPriority() > tile.priority)\n            return false;\n        if (tile.depth > Depth.GROUND && tile.groundTile) {\n            const ground = cell.depthTile(Depth.GROUND);\n            if (!ground || ground === Tile.tiles.NULL) {\n                this.set(x, y, Tile.get(tile.groundTile));\n            }\n        }\n        if (!cell.setTile(tile))\n            return false;\n        if (opts.machine) {\n            cell.machineId = opts.machine;\n        }\n        if (current.light !== tile.light) {\n            this.map.light.glowLightChanged = true;\n        }\n        if (tile.hasTileFlag(Flags.Tile.T_IS_FIRE)) {\n            cell.setCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN);\n        }\n        // if (volume) {\n        //     if (tile.depth === Depth.GAS) {\n        //         this.gasVolume = volume;\n        //     }\n        //     if (tile.depth === Depth.LIQUID) {\n        //         this.liquidVolume = volume;\n        //     }\n        // }\n        return true;\n    }\n    clear(x, y) {\n        const cell = this.map.cell(x, y);\n        return cell.clearDepth(this.depth);\n    }\n    async tick(_dt) {\n        // Run any tick effects\n        // Bookkeeping for fire, pressure plates and key-activated tiles.\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                if (!cell.hasCellFlag(Flags.Cell.HAS_ANY_ACTOR | Flags.Cell.HAS_ITEM) &&\n                    cell.hasCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED)) {\n                    cell.clearCellFlag(Flags.Cell.PRESSURE_PLATE_DEPRESSED);\n                }\n                if (cell.hasEffect('noKey') && !cell.hasKey()) {\n                    await cell.activate('noKey', this.map, x, y);\n                }\n            }\n        }\n        return true;\n    }\n    putAppearance(dest, x, y) {\n        const cell = this.map.cell(x, y);\n        const tile = cell.depthTile(this.depth);\n        if (tile && tile !== Tile.tiles.NULL) {\n            dest.drawSprite(tile.sprite);\n        }\n    }\n}\n//# sourceMappingURL=layers.js.map","import { Cell as CellFlags, Tile as TileFlags } from './flags';\nimport { Mixer } from '../sprite';\nimport * as TILE from '../tile';\nexport class CellMemory {\n    constructor() {\n        this.chokeCount = 0;\n        this.machineId = 0;\n        this.flags = {\n            cell: 0,\n            item: 0,\n            actor: 0,\n            tile: 0,\n            tileMech: 0,\n            object: 0,\n        };\n        this.blocks = {\n            vision: false,\n            effects: false,\n            move: false,\n            pathing: false,\n        };\n        this._tile = TILE.tiles.NULL;\n        this._item = null;\n        this._actor = null;\n        this._hasKey = false;\n        this.snapshot = new Mixer();\n    }\n    clear() {\n        this.snapshot.blackOut();\n        this._item = null;\n        this._actor = null;\n        this._tile = TILE.tiles.NULL;\n        this.flags.cell = 0;\n        this.flags.object = 0;\n        this.flags.tile = 0;\n        this.flags.tileMech = 0;\n        this.blocks.effects = false;\n        this.blocks.move = false;\n        this.blocks.pathing = false;\n        this.blocks.vision = false;\n        this._hasKey = false;\n        this.machineId = 0;\n        this.chokeCount = 0;\n    }\n    store(cell) {\n        this._item = null;\n        if (cell.hasItem()) {\n            this._item = cell.item;\n        }\n        this._actor = null;\n        if (cell.hasActor()) {\n            this._actor = cell.actor;\n        }\n        this._tile = cell.tile;\n        this.flags.cell = cell.cellFlags();\n        this.flags.tile = cell.tileFlags();\n        this.flags.tileMech = cell.tileMechFlags();\n        this.flags.object = cell.objectFlags();\n        this.flags.item = cell.itemFlags();\n        this.flags.actor = cell.actorFlags();\n        this.blocks.effects = cell.blocksEffects();\n        this.blocks.move = cell.blocksMove();\n        this.blocks.pathing = cell.blocksPathing();\n        this.blocks.vision = cell.blocksVision();\n        this._hasKey = cell.hasKey();\n        this.chokeCount = cell.chokeCount;\n        this.machineId = cell.machineId;\n    }\n    getSnapshot(dest) {\n        dest.copy(this.snapshot);\n    }\n    putSnapshot(src) {\n        this.snapshot.copy(src);\n    }\n    hasCellFlag(flag) {\n        return !!(this.flags.cell & flag);\n    }\n    hasTileFlag(flag) {\n        return !!(this.flags.tile & flag);\n    }\n    hasAllTileFlags(flags) {\n        return (this.flags.tile & flags) == flags;\n    }\n    hasObjectFlag(flag) {\n        return !!(this.flags.object & flag);\n    }\n    hasAllObjectFlags(flags) {\n        return (this.flags.object & flags) == flags;\n    }\n    hasTileMechFlag(flag) {\n        return !!(this.flags.tileMech & flag);\n    }\n    cellFlags() {\n        return this.flags.cell;\n    }\n    objectFlags() {\n        return this.flags.object;\n    }\n    tileFlags() {\n        return this.flags.tile;\n    }\n    tileMechFlags() {\n        return this.flags.tileMech;\n    }\n    itemFlags() {\n        return this.flags.item;\n    }\n    actorFlags() {\n        return this.flags.actor;\n    }\n    blocksVision() {\n        return this.blocks.vision;\n    }\n    blocksPathing() {\n        return this.blocks.pathing;\n    }\n    blocksMove() {\n        return this.blocks.move;\n    }\n    blocksEffects() {\n        return this.blocks.effects;\n    }\n    isWall() {\n        return this.blocksVision() && this.blocksMove();\n    }\n    isStairs() {\n        return this.hasTileFlag(TileFlags.T_HAS_STAIRS);\n    }\n    hasKey() {\n        return this._hasKey;\n    }\n    get tile() {\n        return this._tile;\n    }\n    hasTile(tile) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n        }\n        return this._tile === tile;\n    }\n    hasItem() {\n        return !!this._item;\n    }\n    get item() {\n        return this._item;\n    }\n    hasActor() {\n        return !!this._actor;\n    }\n    hasPlayer() {\n        return !!(this.flags.cell & CellFlags.HAS_PLAYER);\n    }\n    get actor() {\n        return this._actor;\n    }\n    getDescription() {\n        throw new Error('Method not implemented.');\n    }\n    getFlavor() {\n        throw new Error('Method not implemented.');\n    }\n    getName(_opts) {\n        throw new Error('Method not implemented.');\n    }\n}\n//# sourceMappingURL=cellMemory.js.map","import * as Flags from './flags';\nimport { TileLayer } from './layers';\nimport * as Utils from '../utils';\nimport * as Effect from '../effect';\nimport { random } from '../random';\nconst Depth = Flags.Depth;\nconst ObjectFlags = Flags.GameObject;\nconst TileFlags = Flags.Tile;\nconst TileMechFlags = Flags.TileMech;\nconst CellFlags = Flags.Cell;\nexport class FireLayer extends TileLayer {\n    constructor(map, name = 'tile') {\n        super(map, name);\n    }\n    async tick(_dt) {\n        // Run any tick effects\n        // Bookkeeping for fire\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                cell.clearCellFlag(CellFlags.CAUGHT_FIRE_THIS_TURN);\n            }\n        }\n        // now spread the fire...\n        for (let x = 0; x < this.map.width; ++x) {\n            for (let y = 0; y < this.map.height; ++y) {\n                const cell = this.map.cell(x, y);\n                if (cell.hasTileFlag(TileFlags.T_IS_FIRE) &&\n                    !(cell.flags.cell & CellFlags.CAUGHT_FIRE_THIS_TURN)) {\n                    await this.exposeToFire(x, y, false);\n                    for (let d = 0; d < 4; ++d) {\n                        const dir = Utils.DIRS[d];\n                        await this.exposeToFire(x + dir[0], y + dir[1]);\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    async exposeToFire(x, y, alwaysIgnite = false) {\n        let ignitionChance = 0, bestExtinguishingPriority = 0, explosiveNeighborCount = 0;\n        let fireIgnited = false, explosivePromotion = false;\n        const cell = this.map.cell(x, y);\n        if (!cell.hasTileFlag(TileFlags.T_IS_FLAMMABLE)) {\n            return false;\n        }\n        // Pick the extinguishing layer with the best priority.\n        cell.eachTile((tile) => {\n            if (tile.hasTileFlag(TileFlags.T_EXTINGUISHES_FIRE) &&\n                tile.priority > bestExtinguishingPriority) {\n                bestExtinguishingPriority = tile.priority;\n            }\n        });\n        // Pick the fire type of the most flammable layer that is either gas or equal-or-better priority than the best extinguishing layer.\n        cell.eachTile((tile) => {\n            if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE &&\n                (tile.depth === Depth.GAS ||\n                    tile.priority >= bestExtinguishingPriority)) {\n                const effect = Effect.from(tile.effects.fire);\n                if (effect && effect.chance > ignitionChance) {\n                    ignitionChance = effect.chance;\n                }\n            }\n        });\n        if (alwaysIgnite ||\n            (ignitionChance && random.chance(ignitionChance, 10000))) {\n            // If it ignites...\n            fireIgnited = true;\n            // Count explosive neighbors.\n            if (cell.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                Utils.eachNeighbor(x, y, (x0, y0) => {\n                    const n = this.map.cell(x0, y0);\n                    if (n.hasObjectFlag(ObjectFlags.L_BLOCKS_GAS) ||\n                        n.hasTileFlag(TileFlags.T_IS_FIRE) ||\n                        n.hasTileMechFlag(TileMechFlags.TM_EXPLOSIVE_PROMOTE)) {\n                        ++explosiveNeighborCount;\n                    }\n                });\n                if (explosiveNeighborCount >= 8) {\n                    explosivePromotion = true;\n                }\n            }\n            let event = 'fire';\n            if (explosivePromotion && cell.hasEffect('explode')) {\n                event = 'explode';\n            }\n            // cell.eachTile( (tile) => {\n            //     if (tile.flags.tile & TileFlags.T_IS_FLAMMABLE) {\n            //         if (tile.depth === Depth.GAS) {\n            //             cell.gasVolume = 0;\n            //         } else if (tile.depth === Depth.LIQUID) {\n            //             cell.liquidVolume = 0;\n            //         }\n            //     }\n            // });\n            await cell.activate(event, this.map, x, y, {\n                force: true,\n            });\n            cell.needsRedraw = true;\n        }\n        return fireIgnited;\n    }\n}\n//# sourceMappingURL=fireLayer.js.map","import * as Flags from './flags';\nimport { TileLayer } from './layers';\nimport * as Grid from '../grid';\nconst ObjectFlags = Flags.GameObject;\nexport class GasLayer extends TileLayer {\n    constructor(map, name = 'gas') {\n        super(map, name);\n        this.needsUpdate = false;\n        this.volume = Grid.alloc(map.width, map.height, 0);\n    }\n    set(x, y, tile, opts = {}) {\n        if (!opts.volume)\n            return false;\n        const cell = this.map.cell(x, y);\n        if (cell.depthTile(tile.depth) === tile) {\n            this.volume[x][y] += opts.volume;\n            return true;\n        }\n        if (!super.set(x, y, tile, opts)) {\n            return false;\n        }\n        this.volume[x][y] = opts.volume;\n        this.needsUpdate = true;\n        return true;\n    }\n    clear(x, y) {\n        const cell = this.map.cell(x, y);\n        if (cell.clearDepth(this.depth)) {\n            this.volume[x][y] = 0;\n            return true;\n        }\n        return false;\n    }\n    copy(other) {\n        this.volume.copy(other.volume);\n    }\n    async tick(_dt) {\n        if (!this.needsUpdate)\n            return false;\n        this.needsUpdate = false;\n        const startingVolume = this.volume;\n        this.volume = Grid.alloc(this.map.width, this.map.height);\n        // dissipate the gas...\n        this.dissipate(startingVolume);\n        // spread the gas...\n        this.spread(startingVolume);\n        Grid.free(startingVolume);\n        return true;\n    }\n    dissipate(volume) {\n        volume.update((v, x, y) => {\n            if (!v)\n                return 0;\n            const tile = this.map.cell(x, y).depthTile(this.depth);\n            if (tile && tile.dissipate) {\n                let d = Math.max(0.5, (v * tile.dissipate) / 10000); // 1000 = 10%\n                v = Math.max(0, v - d);\n            }\n            if (v) {\n                this.needsUpdate = true;\n            }\n            else {\n                this.clear(x, y);\n            }\n            return v;\n        });\n    }\n    calcOpacity(volume) {\n        return Math.floor(Math.min(volume, 10) * 10);\n    }\n    updateCellVolume(x, y, startingVolume) {\n        let total = 0;\n        let count = 0;\n        let highestVolume = 0;\n        const cell = this.map.cell(x, y);\n        let startingTile = cell.depthTile(this.depth);\n        let highestTile = startingTile;\n        if (cell.hasObjectFlag(ObjectFlags.L_BLOCKS_GAS)) {\n            this.volume[x][y] = 0;\n            if (startingVolume[x][y]) {\n                this.clear(x, y);\n            }\n            return;\n        }\n        for (let i = Math.max(0, x - 1); i < Math.min(x + 2, startingVolume.width); ++i) {\n            for (let j = Math.max(0, y - 1); j < Math.min(y + 2, startingVolume.height); ++j) {\n                const v = startingVolume[i][j];\n                if (!cell.hasObjectFlag(ObjectFlags.L_BLOCKS_GAS)) {\n                    ++count;\n                    if (v > highestVolume) {\n                        highestVolume = v;\n                        highestTile = this.map.cell(i, j).depthTile(this.depth);\n                    }\n                }\n                total += v;\n            }\n        }\n        const v = Math.floor((total * 10) / count) / 10;\n        this.volume[x][y] = v;\n        if (v > 0 && highestTile) {\n            if (!startingTile || startingTile !== highestTile) {\n                cell.setTile(highestTile);\n            }\n        }\n        if (v > 0) {\n            cell.needsRedraw = true;\n        }\n    }\n    spread(startingVolume) {\n        for (let x = 0; x < startingVolume.width; ++x) {\n            for (let y = 0; y < startingVolume.height; ++y) {\n                this.updateCellVolume(x, y, startingVolume);\n            }\n        }\n    }\n    putAppearance(dest, x, y) {\n        const volume = this.volume[x][y];\n        if (!volume)\n            return;\n        const cell = this.map.cell(x, y);\n        const tile = cell.depthTile(this.depth);\n        if (tile) {\n            const opacity = this.calcOpacity(volume);\n            dest.drawSprite(tile.sprite, opacity);\n        }\n    }\n}\n//# sourceMappingURL=gasLayer.js.map","import * as Grid from '../grid';\nimport { LightSystem, } from '../light';\nimport { fl as Fl } from '../flag';\nimport * as Flags from './flags';\nimport { Cell } from './cell';\nimport * as FOV from '../fov';\nimport * as TILE from '../tile';\nimport { TileLayer, ActorLayer, ItemLayer } from './layers';\nimport { Mixer } from '../sprite';\nimport * as Utils from '../utils';\nimport * as Canvas from '../canvas';\nimport { Depth } from '../gameObject/flags';\nimport * as Color from '../color';\nimport { CellMemory } from './cellMemory';\nimport { FireLayer } from './fireLayer';\nimport { GasLayer } from './gasLayer';\nimport * as Effect from '../effect';\nimport { random } from '../random';\nexport class Map {\n    constructor(width, height, opts = {}) {\n        this.width = width;\n        this.height = height;\n        this.flags = { map: 0 };\n        this.layers = [];\n        this.cells = Grid.make(width, height, () => new Cell());\n        this.memory = Grid.make(width, height, () => new CellMemory());\n        this.light = new LightSystem(this, opts);\n        this.fov = new FOV.FovSystem(this, opts);\n        this.properties = {};\n        this.initLayers();\n    }\n    cellInfo(x, y, useMemory = false) {\n        if (useMemory)\n            return this.memory[x][y];\n        return this.cell(x, y);\n    }\n    // LAYERS\n    initLayers() {\n        this.addLayer(Depth.GROUND, new TileLayer(this, 'ground'));\n        this.addLayer(Depth.SURFACE, new FireLayer(this, 'surface'));\n        this.addLayer(Depth.GAS, new GasLayer(this, 'gas'));\n        this.addLayer(Depth.ITEM, new ItemLayer(this, 'item'));\n        this.addLayer(Depth.ACTOR, new ActorLayer(this, 'actor'));\n    }\n    addLayer(depth, layer) {\n        if (typeof depth !== 'number') {\n            depth = Depth[depth];\n        }\n        layer.depth = depth;\n        this.layers[depth] = layer;\n    }\n    removeLayer(depth) {\n        if (typeof depth !== 'number') {\n            depth = Depth[depth];\n        }\n        if (!depth)\n            throw new Error('Cannot remove layer with depth=0.');\n        delete this.layers[depth];\n    }\n    getLayer(depth) {\n        if (typeof depth !== 'number') {\n            depth = Depth[depth];\n        }\n        return this.layers[depth] || null;\n    }\n    hasXY(x, y) {\n        return this.cells.hasXY(x, y);\n    }\n    isBoundaryXY(x, y) {\n        return x == 0 || y == 0 || x == this.width - 1 || y == this.height - 1;\n    }\n    cell(x, y) {\n        return this.cells[x][y];\n    }\n    get(x, y) {\n        return this.cells.get(x, y);\n    }\n    eachCell(cb) {\n        this.cells.forEach((cell, x, y) => cb(cell, x, y, this));\n    }\n    // DRAW\n    drawInto(dest, opts = {}) {\n        const buffer = dest instanceof Canvas.Canvas ? dest.buffer : dest;\n        if (typeof opts === 'boolean')\n            opts = { force: opts };\n        const mixer = new Mixer();\n        for (let x = 0; x < buffer.width; ++x) {\n            for (let y = 0; y < buffer.height; ++y) {\n                this.getAppearanceAt(x, y, mixer);\n                buffer.drawSprite(x, y, mixer);\n            }\n        }\n    }\n    // items\n    itemAt(x, y) {\n        return this.cell(x, y).item;\n    }\n    eachItem(cb) {\n        this.cells.forEach((cell) => {\n            Utils.eachChain(cell.item, cb);\n        });\n    }\n    addItem(x, y, item) {\n        const layer = this.layers[item.depth];\n        return layer.add(x, y, item);\n    }\n    removeItem(item) {\n        const layer = this.layers[item.depth];\n        return layer.remove(item);\n    }\n    moveItem(item, x, y) {\n        const layer = this.layers[item.depth];\n        if (!layer.remove(item))\n            return false;\n        return layer.add(x, y, item);\n    }\n    // Actors\n    hasPlayer(x, y) {\n        return this.cell(x, y).hasPlayer();\n    }\n    actorAt(x, y) {\n        return this.cell(x, y).actor;\n    }\n    eachActor(cb) {\n        this.cells.forEach((cell) => {\n            Utils.eachChain(cell.actor, cb);\n        });\n    }\n    addActor(x, y, item) {\n        const layer = this.layers[item.depth];\n        return layer.add(x, y, item);\n    }\n    removeActor(item) {\n        const layer = this.layers[item.depth];\n        return layer.remove(item);\n    }\n    moveActor(item, x, y) {\n        const layer = this.layers[item.depth];\n        if (!layer.remove(item))\n            return false;\n        return layer.add(x, y, item);\n    }\n    // Information\n    isVisible(x, y) {\n        return this.fov.isAnyKindOfVisible(x, y);\n    }\n    count(cb) {\n        return this.cells.count((cell, x, y) => cb(cell, x, y, this));\n    }\n    dump(fmt, log = console.log) {\n        this.cells.dump(fmt || ((c) => c.dump()), log);\n    }\n    // flags\n    hasMapFlag(flag) {\n        return !!(this.flags.map & flag);\n    }\n    setMapFlag(flag) {\n        this.flags.map |= flag;\n    }\n    clearMapFlag(flag) {\n        this.flags.map &= ~flag;\n    }\n    setCellFlag(x, y, flag) {\n        this.cell(x, y).setCellFlag(flag);\n    }\n    clearCellFlag(x, y, flag) {\n        this.cell(x, y).clearCellFlag(flag);\n    }\n    // Skips all the logic checks and just forces a clean cell with the given tile\n    fill(tile, boundary) {\n        tile = TILE.get(tile);\n        boundary = TILE.get(boundary || tile);\n        let i, j;\n        for (i = 0; i < this.width; ++i) {\n            for (j = 0; j < this.height; ++j) {\n                const cell = this.cell(i, j);\n                cell.clear();\n                cell.setTile(this.isBoundaryXY(i, j) ? boundary : tile);\n            }\n        }\n    }\n    hasTile(x, y, tile, useMemory = false) {\n        return this.cellInfo(x, y, useMemory).hasTile(tile);\n    }\n    setTile(x, y, tile, opts) {\n        if (!(tile instanceof TILE.Tile)) {\n            tile = TILE.get(tile);\n            if (!tile)\n                return false;\n        }\n        if (opts === true) {\n            opts = { superpriority: true };\n        }\n        const depth = tile.depth || 0;\n        const layer = this.layers[depth] || this.layers[0];\n        if (!(layer instanceof TileLayer))\n            return false;\n        return layer.set(x, y, tile, opts);\n    }\n    async tick(dt) {\n        let didSomething = await this.fireAll('tick');\n        for (let layer of this.layers) {\n            if (layer && (await layer.tick(dt))) {\n                didSomething = true;\n            }\n        }\n        return didSomething;\n    }\n    copy(src) {\n        if (this.constructor !== src.constructor)\n            throw new Error('Maps must be same type to copy.');\n        if (this.width !== src.width || this.height !== src.height)\n            throw new Error('Maps must be same size to copy');\n        this.cells.forEach((c, x, y) => {\n            c.copy(src.cells[x][y]);\n        });\n        this.layers.forEach((l, depth) => {\n            l.copy(src.layers[depth]);\n        });\n        this.flags.map = src.flags.map;\n        this.light.setAmbient(src.light.getAmbient());\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        return other;\n    }\n    async fire(event, x, y, ctx = {}) {\n        const cell = this.cell(x, y);\n        return cell.activate(event, this, x, y, ctx);\n    }\n    fireSync(event, x, y, ctx = {}) {\n        const cell = this.cell(x, y);\n        return cell.activateSync(event, this, x, y, ctx);\n    }\n    async fireAll(event, ctx = {}) {\n        let didSomething = false;\n        const willFire = Grid.alloc(this.width, this.height);\n        // Figure out which tiles will fire - before we change everything...\n        this.cells.forEach((cell, x, y) => {\n            cell.clearCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN | Flags.Cell.EVENT_PROTECTED);\n            cell.eachTile((tile) => {\n                const ev = tile.effects[event];\n                if (!ev)\n                    return;\n                const effect = Effect.from(ev);\n                if (!effect)\n                    return;\n                let promoteChance = 0;\n                // < 0 means try to fire my neighbors...\n                if (effect.chance < 0) {\n                    promoteChance = 0;\n                    Utils.eachNeighbor(x, y, (i, j) => {\n                        const n = this.cell(i, j);\n                        if (!n.hasObjectFlag(Flags.GameObject.L_BLOCKS_EFFECTS) &&\n                            n.depthTile(tile.depth) !=\n                                cell.depthTile(tile.depth) &&\n                            !n.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN)) {\n                            // TODO - Should this break from the loop after doing this once or keep going?\n                            promoteChance += -1 * effect.chance;\n                        }\n                    }, true);\n                }\n                else {\n                    promoteChance = effect.chance || 100 * 100; // 100%\n                }\n                if (!cell.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN) &&\n                    random.chance(promoteChance, 10000)) {\n                    willFire[x][y] |= Fl(tile.depth);\n                    // cell.flags.cellMech |= Cell.MechFlags.EVENT_FIRED_THIS_TURN;\n                }\n            });\n        });\n        // Then activate them - so that we don't activate the next generation as part of the forEach\n        ctx.force = true;\n        await willFire.forEachAsync(async (w, x, y) => {\n            if (!w)\n                return;\n            const cell = this.cell(x, y);\n            if (cell.hasCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN))\n                return;\n            for (let depth = 0; depth <= Flags.Depth.GAS; ++depth) {\n                if (w & Fl(depth)) {\n                    await cell.activate(event, this, x, y, {\n                        force: true,\n                        depth,\n                    });\n                }\n            }\n        });\n        Grid.free(willFire);\n        return didSomething;\n    }\n    fireAllSync(event, ctx = {}) {\n        let didSomething = false;\n        const willFire = Grid.alloc(this.width, this.height);\n        // Figure out which tiles will fire - before we change everything...\n        this.cells.forEach((cell, x, y) => {\n            cell.clearCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN | Flags.Cell.EVENT_PROTECTED);\n            cell.eachTile((tile) => {\n                const ev = tile.effects[event];\n                if (!ev)\n                    return;\n                const effect = Effect.from(ev);\n                if (!effect)\n                    return;\n                let promoteChance = 0;\n                // < 0 means try to fire my neighbors...\n                if (effect.chance < 0) {\n                    promoteChance = 0;\n                    Utils.eachNeighbor(x, y, (i, j) => {\n                        const n = this.cell(i, j);\n                        if (!n.hasObjectFlag(Flags.GameObject.L_BLOCKS_EFFECTS) &&\n                            n.depthTile(tile.depth) !=\n                                cell.depthTile(tile.depth) &&\n                            !n.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN)) {\n                            // TODO - Should this break from the loop after doing this once or keep going?\n                            promoteChance += -1 * effect.chance;\n                        }\n                    }, true);\n                }\n                else {\n                    promoteChance = effect.chance || 100 * 100; // 100%\n                }\n                if (!cell.hasCellFlag(Flags.Cell.CAUGHT_FIRE_THIS_TURN) &&\n                    random.chance(promoteChance, 10000)) {\n                    willFire[x][y] |= Fl(tile.depth);\n                    // cell.flags.cellMech |= Cell.MechFlags.EVENT_FIRED_THIS_TURN;\n                }\n            });\n        });\n        // Then activate them - so that we don't activate the next generation as part of the forEach\n        ctx.force = true;\n        willFire.forEach((w, x, y) => {\n            if (!w)\n                return;\n            const cell = this.cell(x, y);\n            if (cell.hasCellFlag(Flags.Cell.EVENT_FIRED_THIS_TURN))\n                return;\n            for (let depth = 0; depth <= Flags.Depth.GAS; ++depth) {\n                if (w & Fl(depth)) {\n                    cell.activate(event, this, x, y, {\n                        force: true,\n                        depth,\n                    });\n                }\n            }\n        });\n        Grid.free(willFire);\n        return didSomething;\n    }\n    async activateMachine(machineId, originX, originY, ctx = {}) {\n        let didSomething = false;\n        ctx.originX = originX;\n        ctx.originY = originY;\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const cell = this.cells[x][y];\n                if (cell.machineId !== machineId)\n                    continue;\n                if (cell.hasEffect('machine')) {\n                    didSomething =\n                        (await cell.activate('machine', this, x, y, ctx)) ||\n                            didSomething;\n                }\n            }\n        }\n        return didSomething;\n    }\n    activateMachineSync(machineId, originX, originY, ctx = {}) {\n        let didSomething = false;\n        ctx.originX = originX;\n        ctx.originY = originY;\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const cell = this.cells[x][y];\n                if (cell.machineId !== machineId)\n                    continue;\n                if (cell.hasEffect('machine')) {\n                    didSomething =\n                        cell.activateSync('machine', this, x, y, ctx) ||\n                            didSomething;\n                }\n            }\n        }\n        return didSomething;\n    }\n    getAppearanceAt(x, y, dest) {\n        dest.blackOut();\n        const cell = this.cell(x, y);\n        const isVisible = this.fov.isAnyKindOfVisible(x, y);\n        if (cell.needsRedraw && isVisible) {\n            this.layers.forEach((layer) => layer.putAppearance(dest, x, y));\n            if (dest.dances) {\n                cell.setCellFlag(Flags.Cell.COLORS_DANCE);\n            }\n            else {\n                cell.clearCellFlag(Flags.Cell.COLORS_DANCE);\n            }\n            dest.bake();\n            this.memory[x][y].putSnapshot(dest);\n            cell.needsRedraw = false;\n        }\n        else {\n            this.memory[x][y].getSnapshot(dest);\n        }\n        if (isVisible) {\n            const light = this.light.getLight(x, y);\n            dest.multiply(light);\n        }\n        else if (this.fov.isRevealed(x, y)) {\n            dest.scale(50);\n        }\n        else {\n            dest.blackOut();\n        }\n        if (cell.hasObjectFlag(Flags.GameObject.L_VISUALLY_DISTINCT)) {\n            Color.separate(dest.fg, dest.bg);\n        }\n    }\n    // // LightSystemSite\n    hasActor(x, y) {\n        return this.cell(x, y).hasActor();\n    }\n    eachGlowLight(cb) {\n        this.cells.forEach((cell, x, y) => {\n            cell.eachGlowLight((light) => cb(x, y, light));\n        });\n    }\n    eachDynamicLight(_cb) { }\n    // FOV System Site\n    eachViewport(_cb) {\n        // TODO !!\n    }\n    lightingChanged() {\n        return this.light.changed;\n    }\n    hasVisibleLight(x, y) {\n        return !this.light.isDark(x, y);\n    }\n    blocksVision(x, y) {\n        return this.cell(x, y).blocksVision();\n    }\n    onCellRevealed(_x, _y) {\n        // if (DATA.automationActive) {\n        // if (cell.item) {\n        //     const theItem: GW.types.ItemType = cell.item;\n        //     if (\n        //         theItem.hasObjectFlag(ObjectFlags.L_INTERRUPT_WHEN_SEEN)\n        //     ) {\n        //         GW.message.add(\n        //             '¬ßyou¬ß ¬ßsee¬ß Œ©itemMessageColorŒ©¬ßitem¬ß‚àÜ.',\n        //             {\n        //                 item: theItem,\n        //                 actor: DATA.player,\n        //             }\n        //         );\n        //     }\n        // }\n        // if (\n        //     !(this.fov.isMagicMapped(x, y)) &&\n        //     this.site.hasObjectFlag(\n        //         x,\n        //         y,\n        //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n        //     )\n        // ) {\n        //     const tile = cell.tileWithLayerFlag(\n        //         ObjectFlags.L_INTERRUPT_WHEN_SEEN\n        //     );\n        //     if (tile) {\n        //         GW.message.add(\n        //             '¬ßyou¬ß ¬ßsee¬ß Œ©backgroundMessageColorŒ©¬ßitem¬ß‚àÜ.',\n        //             {\n        //                 actor: DATA.player,\n        //                 item: tile.name,\n        //             }\n        //         );\n        //     }\n        // }\n    }\n    redrawCell(x, y, clearMemory) {\n        if (clearMemory) {\n            this.clearMemory(x, y);\n        }\n        this.cells[x][y].needsRedraw = true;\n    }\n    clearMemory(x, y) {\n        this.memory[x][y].clear();\n    }\n    storeMemory(x, y) {\n        const cell = this.cell(x, y);\n        this.memory[x][y].store(cell);\n    }\n}\nexport function make(w, h, opts = {}, boundary) {\n    if (typeof opts === 'string') {\n        opts = { tile: opts };\n    }\n    if (boundary) {\n        opts.boundary = boundary;\n    }\n    if (opts.tile === true) {\n        opts.tile = 'FLOOR';\n    }\n    if (opts.boundary === true) {\n        opts.boundary = 'WALL';\n    }\n    const map = new Map(w, h, opts);\n    if (opts.tile) {\n        map.fill(opts.tile, opts.boundary);\n    }\n    map.light.update();\n    // if (!DATA.map) {\n    //     DATA.map = map;\n    // }\n    return map;\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && typeof value[0] === 'string';\n}\nexport function from(prefab, charToTile, opts = {}) {\n    let height = 0;\n    let width = 0;\n    let map;\n    if (isString(prefab)) {\n        prefab = prefab.split('\\n');\n    }\n    if (isStringArray(prefab)) {\n        height = prefab.length;\n        width = prefab.reduce((len, line) => Math.max(len, line.length), 0);\n        map = make(width, height, opts);\n        prefab.forEach((line, y) => {\n            for (let x = 0; x < width; ++x) {\n                const ch = line[x] || '.';\n                const tile = charToTile[ch] || 'FLOOR';\n                map.setTile(x, y, tile);\n            }\n        });\n    }\n    else {\n        height = prefab.height;\n        width = prefab.width;\n        map = make(width, height, opts);\n        prefab.forEach((v, x, y) => {\n            const tile = charToTile[v] || 'FLOOR';\n            map.setTile(x, y, tile);\n        });\n    }\n    map.light.update();\n    return map;\n}\n//# sourceMappingURL=map.js.map","import * as Grid from '../grid';\nimport * as Utils from '../utils';\nimport { GameObject as ObjectFlags } from '../gameObject/flags';\nimport { Cell as CellFlags } from './flags';\nexport function analyze(map, updateChokeCounts = true) {\n    updateLoopiness(map);\n    updateChokepoints(map, updateChokeCounts);\n}\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n// TODO - Move to Map?\nexport function updateChokepoints(map, updateCounts) {\n    const passMap = Grid.alloc(map.width, map.height);\n    const grid = Grid.alloc(map.width, map.height);\n    for (let i = 0; i < map.width; i++) {\n        for (let j = 0; j < map.height; j++) {\n            const cell = map.cell(i, j);\n            if ((cell.blocksPathing() || cell.blocksMove()) &&\n                !cell.hasObjectFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n                // cell.flags &= ~CellFlags.IS_IN_LOOP;\n                passMap[i][j] = 0;\n            }\n            else {\n                // cell.flags |= CellFlags.IS_IN_LOOP;\n                passMap[i][j] = 1;\n            }\n        }\n    }\n    let passableArcCount;\n    // done finding loops; now flag chokepoints\n    for (let i = 1; i < passMap.width - 1; i++) {\n        for (let j = 1; j < passMap.height - 1; j++) {\n            map.cell(i, j).flags.cell &= ~CellFlags.IS_CHOKEPOINT;\n            if (passMap[i][j] &&\n                !(map.cell(i, j).flags.cell & CellFlags.IS_IN_LOOP)) {\n                passableArcCount = 0;\n                for (let dir = 0; dir < 8; dir++) {\n                    const oldX = i + Utils.CLOCK_DIRS[(dir + 7) % 8][0];\n                    const oldY = j + Utils.CLOCK_DIRS[(dir + 7) % 8][1];\n                    const newX = i + Utils.CLOCK_DIRS[dir][0];\n                    const newY = j + Utils.CLOCK_DIRS[dir][1];\n                    if ((map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                        passMap[newX][newY]) !=\n                        (map.hasXY(oldX, oldY) && // RUT.Map.makeValidXy(map, oldXy) &&\n                            passMap[oldX][oldY])) {\n                        if (++passableArcCount > 2) {\n                            if ((!passMap[i - 1][j] && !passMap[i + 1][j]) ||\n                                (!passMap[i][j - 1] && !passMap[i][j + 1])) {\n                                map.cell(i, j).flags.cell |=\n                                    CellFlags.IS_CHOKEPOINT;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (updateCounts) {\n        // Done finding chokepoints; now create a chokepoint map.\n        // The chokepoint map is a number for each passable tile. If the tile is a chokepoint,\n        // then the number indicates the number of tiles that would be rendered unreachable if the\n        // chokepoint were blocked. If the tile is not a chokepoint, then the number indicates\n        // the number of tiles that would be rendered unreachable if the nearest exit chokepoint\n        // were blocked.\n        // The cost of all of this is one depth-first flood-fill per open point that is adjacent to a chokepoint.\n        // Start by setting the chokepoint values really high, and roping off room machines.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                map.cell(i, j).chokeCount = 30000;\n                // Not sure why this was done in Brogue\n                // if (map.cell(i, j).flags.cell & CellFlags.IS_IN_ROOM_MACHINE) {\n                //     passMap[i][j] = 0;\n                // }\n            }\n        }\n        // Scan through and find a chokepoint next to an open point.\n        for (let i = 0; i < map.width; i++) {\n            for (let j = 0; j < map.height; j++) {\n                const cell = map.cell(i, j);\n                if (passMap[i][j] &&\n                    cell.flags.cell & CellFlags.IS_CHOKEPOINT) {\n                    for (let dir = 0; dir < 4; dir++) {\n                        const newX = i + Utils.DIRS[dir][0];\n                        const newY = j + Utils.DIRS[dir][1];\n                        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n                            passMap[newX][newY] &&\n                            !(map.cell(newX, newY).flags.cell &\n                                CellFlags.IS_CHOKEPOINT)) {\n                            // OK, (newX, newY) is an open point and (i, j) is a chokepoint.\n                            // Pretend (i, j) is blocked by changing passMap, and run a flood-fill cell count starting on (newX, newY).\n                            // Keep track of the flooded region in grid[][].\n                            grid.fill(0);\n                            passMap[i][j] = 0;\n                            let cellCount = floodFillCount(map, grid, passMap, newX, newY);\n                            passMap[i][j] = 1;\n                            // CellCount is the size of the region that would be obstructed if the chokepoint were blocked.\n                            // CellCounts less than 4 are not useful, so we skip those cases.\n                            if (cellCount >= 4) {\n                                // Now, on the chokemap, all of those flooded cells should take the lesser of their current value or this resultant number.\n                                for (let i2 = 0; i2 < grid.width; i2++) {\n                                    for (let j2 = 0; j2 < grid.height; j2++) {\n                                        if (grid[i2][j2] &&\n                                            cellCount <\n                                                map.cell(i2, j2).chokeCount) {\n                                            map.cell(i2, j2).chokeCount = cellCount;\n                                            map.cell(i2, j2).flags.cell &= ~CellFlags.IS_GATE_SITE;\n                                        }\n                                    }\n                                }\n                                // The chokepoint itself should also take the lesser of its current value or the flood count.\n                                if (cellCount < cell.chokeCount) {\n                                    cell.chokeCount = cellCount;\n                                    cell.flags.cell |= CellFlags.IS_GATE_SITE;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    Grid.free(passMap);\n    Grid.free(grid);\n}\n// Assumes it is called with respect to a passable (startX, startY), and that the same is not already included in results.\n// Returns 10000 if the area included an area machine.\nexport function floodFillCount(map, results, passMap, startX, startY) {\n    let count = passMap[startX][startY] == 2 ? 5000 : 1;\n    if (map.cell(startX, startY).flags.cell & CellFlags.IS_IN_AREA_MACHINE) {\n        count = 10000;\n    }\n    results[startX][startY] = 1;\n    for (let dir = 0; dir < 4; dir++) {\n        const newX = startX + Utils.DIRS[dir][0];\n        const newY = startY + Utils.DIRS[dir][1];\n        if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, newXy) &&\n            passMap[newX][newY] &&\n            !results[newX][newY]) {\n            count += floodFillCount(map, results, passMap, newX, newY);\n        }\n    }\n    return Math.min(count, 10000);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n// TODO = Move loopiness to Map\nexport function updateLoopiness(map) {\n    map.eachCell(resetLoopiness);\n    map.eachCell(checkLoopiness);\n    cleanLoopiness(map);\n}\nexport function resetLoopiness(cell, _x, _y, _map) {\n    if ((cell.blocksPathing() || cell.blocksMove()) &&\n        !cell.hasObjectFlag(ObjectFlags.L_SECRETLY_PASSABLE)) {\n        cell.flags.cell &= ~CellFlags.IS_IN_LOOP;\n        // passMap[i][j] = false;\n    }\n    else {\n        cell.flags.cell |= CellFlags.IS_IN_LOOP;\n        // passMap[i][j] = true;\n    }\n}\nexport function checkLoopiness(cell, x, y, map) {\n    let inString;\n    let newX, newY, dir, sdir;\n    let numStrings, maxStringLength, currentStringLength;\n    if (!cell || !(cell.flags.cell & CellFlags.IS_IN_LOOP)) {\n        return false;\n    }\n    // find an unloopy neighbor to start on\n    for (sdir = 0; sdir < 8; sdir++) {\n        newX = x + Utils.CLOCK_DIRS[sdir][0];\n        newY = y + Utils.CLOCK_DIRS[sdir][1];\n        if (!map.hasXY(newX, newY))\n            continue;\n        const cell = map.get(newX, newY);\n        if (!cell || !(cell.flags.cell & CellFlags.IS_IN_LOOP)) {\n            break;\n        }\n    }\n    if (sdir == 8) {\n        // no unloopy neighbors\n        return false; // leave cell loopy\n    }\n    // starting on this unloopy neighbor,\n    // work clockwise and count up:\n    // (a) the number of strings of loopy neighbors, and\n    // (b) the length of the longest such string.\n    numStrings = maxStringLength = currentStringLength = 0;\n    inString = false;\n    for (dir = sdir; dir < sdir + 8; dir++) {\n        newX = x + Utils.CLOCK_DIRS[dir % 8][0];\n        newY = y + Utils.CLOCK_DIRS[dir % 8][1];\n        if (!map.hasXY(newX, newY))\n            continue;\n        const newCell = map.get(newX, newY);\n        if (newCell && newCell.flags.cell & CellFlags.IS_IN_LOOP) {\n            currentStringLength++;\n            if (!inString) {\n                if (numStrings > 0) {\n                    return false; // more than one string here; leave loopy\n                }\n                numStrings++;\n                inString = true;\n            }\n        }\n        else if (inString) {\n            if (currentStringLength > maxStringLength) {\n                maxStringLength = currentStringLength;\n            }\n            currentStringLength = 0;\n            inString = false;\n        }\n    }\n    if (inString && currentStringLength > maxStringLength) {\n        maxStringLength = currentStringLength;\n    }\n    if (numStrings == 1 && maxStringLength <= 4) {\n        cell.flags.cell &= ~CellFlags.IS_IN_LOOP;\n        for (dir = 0; dir < 8; dir++) {\n            const newX = x + Utils.CLOCK_DIRS[dir][0];\n            const newY = y + Utils.CLOCK_DIRS[dir][1];\n            if (map.hasXY(newX, newY)) {\n                const newCell = map.cell(newX, newY);\n                checkLoopiness(newCell, newX, newY, map);\n            }\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function fillInnerLoopGrid(map, grid) {\n    for (let x = 0; x < map.width; ++x) {\n        for (let y = 0; y < map.height; ++y) {\n            const cell = map.cell(x, y);\n            if (cell.flags.cell & CellFlags.IS_IN_LOOP) {\n                grid[x][y] = 1;\n            }\n            else if (x > 0 && y > 0) {\n                const up = map.cell(x, y - 1);\n                const left = map.cell(x - 1, y);\n                if (up.flags.cell & CellFlags.IS_IN_LOOP &&\n                    left.flags.cell & CellFlags.IS_IN_LOOP) {\n                    grid[x][y] = 1;\n                }\n            }\n        }\n    }\n}\nexport function cleanLoopiness(map) {\n    // remove extraneous loop markings\n    const grid = Grid.alloc(map.width, map.height);\n    fillInnerLoopGrid(map, grid);\n    // const xy = { x: 0, y: 0 };\n    let designationSurvives;\n    for (let i = 0; i < grid.width; i++) {\n        for (let j = 0; j < grid.height; j++) {\n            const cell = map.cell(i, j);\n            if (cell.flags.cell & CellFlags.IS_IN_LOOP) {\n                designationSurvives = false;\n                for (let dir = 0; dir < 8; dir++) {\n                    let newX = i + Utils.CLOCK_DIRS[dir][0];\n                    let newY = j + Utils.CLOCK_DIRS[dir][1];\n                    if (map.hasXY(newX, newY) && // RUT.Map.makeValidXy(map, xy, newX, newY) &&\n                        !grid[newX][newY] &&\n                        !(map.cell(newX, newY).flags.cell &\n                            CellFlags.IS_IN_LOOP)) {\n                        designationSurvives = true;\n                        break;\n                    }\n                }\n                if (!designationSurvives) {\n                    grid[i][j] = 1;\n                    map.cell(i, j).flags.cell &= ~CellFlags.IS_IN_LOOP;\n                }\n            }\n        }\n    }\n    Grid.free(grid);\n}\n////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////\n//# sourceMappingURL=analyze.js.map","import * as Flags from './flags';\nimport * as Tile from '../tile';\nimport * as Entity from '../gameObject';\nimport * as Effect from '../effect';\nimport * as Flag from '../flag';\nimport * as Grid from '../grid';\nimport * as Utils from '../utils';\nimport { random } from '../random';\nimport { Actor } from '../actor';\nimport { Item } from '../item';\nexport class SpawnEffect {\n    make(src, dest) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (!src.tile)\n            return true; // no error\n        let config = src.tile;\n        if (typeof config === 'string') {\n            const parts = config.split(/[,|]/).map((p) => p.trim());\n            config = {\n                tile: parts[0],\n                grow: Number.parseInt(parts[1] || '0'),\n                decrement: Number.parseInt(parts[2] || '0'),\n            };\n        }\n        const info = {\n            grow: (_b = (_a = config.grow) !== null && _a !== void 0 ? _a : config.spread) !== null && _b !== void 0 ? _b : 0,\n            decrement: (_c = config.decrement) !== null && _c !== void 0 ? _c : 0,\n            flags: Flag.from(Effect.Flags, config.flags),\n            volume: (_d = config.volume) !== null && _d !== void 0 ? _d : 0,\n            next: (_e = config.next) !== null && _e !== void 0 ? _e : null,\n        };\n        const id = (_f = config.tile) !== null && _f !== void 0 ? _f : config.id;\n        if (typeof id === 'string') {\n            info.tile = id;\n        }\n        else {\n            throw new Error('Invalid tile spawn config: ' + id);\n        }\n        if (!info.tile) {\n            throw new Error('Must have tile.');\n        }\n        const match = (_g = config.matchTile) !== null && _g !== void 0 ? _g : config.match;\n        if (typeof match === 'string') {\n            info.matchTile = match;\n        }\n        else if (match) {\n            throw new Error('Invalid tile spawn match tile: ' + config.matchTile);\n        }\n        dest.tile = info;\n        return true;\n    }\n    async fire(effect, map, x, y, ctx) {\n        let didSomething = false;\n        const spawned = this.fireSync(effect, map, x, y, ctx);\n        if (spawned) {\n            didSomething = true;\n            // await spawnMap.forEachAsync( (v, x, y) => {\n            //     if (!v) return;\n            //     await map.applyInstantEffects(x, y);\n            // });\n            // if (applyEffects) {\n            // if (PLAYER.xLoc == i && PLAYER.yLoc == j && !PLAYER.status.levitating && refresh) {\n            // \tflavorMessage(tileFlavor(PLAYER.xLoc, PLAYER.yLoc));\n            // }\n            // if (cell.actor || cell.item) {\n            // \tfor(let t of cell.tiles()) {\n            // \t\tawait t.applyInstantEffects(map, i, j, cell);\n            // \t\tif (Data.gameHasEnded) {\n            // \t\t\treturn true;\n            // \t\t}\n            // \t}\n            // }\n            // if (tile.flags & TileFlags.T_IS_FIRE) {\n            // \tif (cell.flags & CellFlags.HAS_ITEM) {\n            // \t\ttheItem = map.itemAt(i, j);\n            // \t\tif (theItem.flags & Flags.Item.ITEM_FLAMMABLE) {\n            // \t\t\tawait burnItem(theItem);\n            // \t\t}\n            // \t}\n            // }\n            // }\n        }\n        // Grid.free(spawnMap);\n        return didSomething;\n    }\n    fireSync(effect, map, x, y, ctx) {\n        if (!effect.tile)\n            return false; // did nothing\n        const id = effect.tile.tile;\n        const tile = Tile.tiles[id] || null;\n        if (!tile) {\n            throw new Error('Failed to find tile for effect: ' + id);\n        }\n        const abortIfBlocking = !!(effect.flags & Effect.Flags.E_ABORT_IF_BLOCKS_MAP);\n        const isBlocking = !!(abortIfBlocking &&\n            !(effect.flags & Effect.Flags.E_PERMIT_BLOCKING) &&\n            (tile.blocksPathing() ||\n                effect.flags & Effect.Flags.E_TREAT_AS_BLOCKING));\n        let didSomething = false;\n        didSomething = computeSpawnMap(effect, map, x, y, ctx);\n        if (!didSomething) {\n            return false;\n        }\n        if (abortIfBlocking &&\n            isBlocking &&\n            this.mapDisruptedBy(map, effect.grid)) {\n            // Grid.free(spawnMap);\n            return false;\n        }\n        if (effect.flags & Effect.Flags.E_EVACUATE_CREATURES) {\n            // first, evacuate creatures, so that they do not re-trigger the tile.\n            if (evacuateCreatures(map, ctx.grid)) {\n                didSomething = true;\n            }\n        }\n        if (effect.flags & Effect.Flags.E_EVACUATE_ITEMS) {\n            // first, evacuate items, so that they do not re-trigger the tile.\n            if (evacuateItems(map, ctx.grid)) {\n                didSomething = true;\n            }\n        }\n        if (effect.flags & Effect.Flags.E_CLEAR_CELL) {\n            // first, clear other tiles (not base/ground)\n            if (clearCells(map, ctx.grid, effect.flags)) {\n                didSomething = true;\n            }\n        }\n        const spawned = spawnTiles(effect.flags, ctx.grid, map, tile, effect.tile.volume);\n        return spawned;\n    }\n    mapDisruptedBy(map, blockingGrid, blockingToMapX = 0, blockingToMapY = 0) {\n        const walkableGrid = Grid.alloc(map.width, map.height);\n        let disrupts = false;\n        // Get all walkable locations after lake added\n        Utils.forRect(map.width, map.height, (i, j) => {\n            const lakeX = i + blockingToMapX;\n            const lakeY = j + blockingToMapY;\n            if (blockingGrid.get(lakeX, lakeY)) {\n                if (map.cellInfo(i, j).isStairs()) {\n                    disrupts = true;\n                }\n            }\n            else if (!map.cellInfo(i, j).blocksMove()) {\n                walkableGrid[i][j] = 1;\n            }\n        });\n        let first = true;\n        for (let i = 0; i < walkableGrid.width && !disrupts; ++i) {\n            for (let j = 0; j < walkableGrid.height && !disrupts; ++j) {\n                if (walkableGrid[i][j] == 1) {\n                    if (first) {\n                        walkableGrid.floodFill(i, j, 1, 2);\n                        first = false;\n                    }\n                    else {\n                        disrupts = true;\n                    }\n                }\n            }\n        }\n        // console.log('WALKABLE GRID');\n        // walkableGrid.dump();\n        Grid.free(walkableGrid);\n        return disrupts;\n    }\n}\nEffect.installHandler('tile', new SpawnEffect());\n// tick\n// Spawn\nexport function spawnTiles(flags, spawnMap, map, tile, volume = 0) {\n    let i, j;\n    let accomplishedSomething;\n    accomplishedSomething = false;\n    const blockedByOtherLayers = !!(flags & Effect.Flags.E_BLOCKED_BY_OTHER_LAYERS);\n    const superpriority = !!(flags & Effect.Flags.E_SUPERPRIORITY);\n    const blockedByActors = !!(flags & Effect.Flags.E_BLOCKED_BY_ACTORS);\n    const blockedByItems = !!(flags & Effect.Flags.E_BLOCKED_BY_ITEMS);\n    // const applyEffects = ctx.refreshCell;\n    volume = volume || 0; // (tile ? tile.volume : 0);\n    for (i = 0; i < spawnMap.width; i++) {\n        for (j = 0; j < spawnMap.height; j++) {\n            if (!spawnMap[i][j])\n                continue; // If it's not flagged for building in the spawn map,\n            // const isRoot = spawnMap[i][j] === 1;\n            spawnMap[i][j] = 0; // so that the spawnmap reflects what actually got built\n            const cell = map.cell(i, j);\n            if (cell.hasTile(tile)) {\n                // If the new cell already contains the fill terrain,\n                // if (tile.depth == Entity.flags.Depth.GAS) {\n                //     spawnMap[i][j] = 1;\n                //     cell.gasVolume += volume;\n                // } else if (tile.depth == Entity.flags.Depth.LIQUID) {\n                //     spawnMap[i][j] = 1;\n                //     cell.liquidVolume += volume;\n                // }\n            }\n            else if (map.setTile(i, j, tile, {\n                volume,\n                superpriority,\n                blockedByOtherLayers,\n                blockedByActors,\n                blockedByItems,\n            })) {\n                // if the fill won't violate the priority of the most important terrain in this cell:\n                spawnMap[i][j] = 1; // so that the spawnmap reflects what actually got built\n                // map.redrawCell(cell);\n                // if (volume && cell.gas) {\n                //     cell.volume += (feat.volume || 0);\n                // }\n                cell.flags.cell |= Flags.Cell.EVENT_FIRED_THIS_TURN;\n                if (flags & Effect.Flags.E_PROTECTED) {\n                    cell.flags.cell |= Flags.Cell.EVENT_PROTECTED;\n                }\n                accomplishedSomething = true;\n                // debug('- tile', i, j, 'tile=', tile.id);\n            }\n        }\n    }\n    if (accomplishedSomething) {\n        map.setMapFlag(Flags.Map.MAP_CHANGED);\n    }\n    return accomplishedSomething;\n}\n// Spread\nfunction cellIsOk(effect, map, x, y, isStart) {\n    if (!map.hasXY(x, y))\n        return false;\n    const cell = map.cell(x, y);\n    if (cell.hasCellFlag(Flags.Cell.EVENT_PROTECTED))\n        return false;\n    if (cell.blocksEffects() && !effect.tile.matchTile && !isStart) {\n        return false;\n    }\n    if (effect.flags & Effect.Flags.E_BUILD_IN_WALLS) {\n        if (!map.cellInfo(x, y).isWall())\n            return false;\n    }\n    else if (effect.flags & Effect.Flags.E_MUST_TOUCH_WALLS) {\n        let ok = false;\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (map.cellInfo(i, j).isWall()) {\n                ok = true;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    else if (effect.flags & Effect.Flags.E_NO_TOUCH_WALLS) {\n        let ok = true;\n        if (map.cellInfo(x, y).isWall())\n            return false; // or on wall\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (map.cellInfo(i, j).isWall()) {\n                ok = false;\n            }\n        }, true);\n        if (!ok)\n            return false;\n    }\n    // if (ctx.bounds && !ctx.bounds.containsXY(x, y)) return false;\n    if (effect.tile.matchTile &&\n        !isStart &&\n        !cell.hasTile(effect.tile.matchTile)) {\n        return false;\n    }\n    return true;\n}\nexport function computeSpawnMap(effect, map, x, y, ctx) {\n    let i, j, dir, t, x2, y2;\n    let madeChange;\n    // const bounds = ctx.bounds || null;\n    // if (bounds) {\n    //   // Activation.debug('- bounds', bounds);\n    // }\n    const config = effect.tile;\n    let startProb = config.grow || 0;\n    let probDec = config.decrement || 0;\n    const spawnMap = ctx.grid;\n    spawnMap.fill(0);\n    if (!cellIsOk(effect, map, x, y, true)) {\n        return false;\n    }\n    spawnMap[x][y] = t = 1; // incremented before anything else happens\n    let count = 1;\n    if (startProb) {\n        madeChange = true;\n        if (startProb >= 100) {\n            probDec = probDec || 100;\n        }\n        if (probDec <= 0) {\n            probDec = startProb;\n        }\n        while (madeChange && startProb > 0) {\n            madeChange = false;\n            t++;\n            for (i = 0; i < map.width; i++) {\n                for (j = 0; j < map.height; j++) {\n                    if (spawnMap[i][j] == t - 1) {\n                        for (dir = 0; dir < 4; dir++) {\n                            x2 = i + Utils.DIRS[dir][0];\n                            y2 = j + Utils.DIRS[dir][1];\n                            if (spawnMap.hasXY(x2, y2) &&\n                                !spawnMap[x2][y2] &&\n                                random.chance(startProb) &&\n                                cellIsOk(effect, map, x2, y2, false)) {\n                                spawnMap[x2][y2] = t;\n                                madeChange = true;\n                                ++count;\n                            }\n                        }\n                    }\n                }\n            }\n            startProb -= probDec;\n        }\n    }\n    return count > 0;\n}\n// export function spreadCircle(\n//     this: any,\n//     ctx: Effect.EffectCtx,\n//     spawnMap: Grid.NumGrid\n// ) {\n//     const x = ctx.x;\n//     const y = ctx.y;\n//     let startProb = this.spread || 0;\n//     let probDec = this.decrement || 0;\n//     spawnMap.fill(0);\n//     spawnMap[x][y] = 1; // incremented before anything else happens\n//     let radius = 0;\n//     startProb = startProb || 100;\n//     if (startProb >= 100) {\n//         probDec = probDec || 100;\n//     }\n//     while (GW.random.chance(startProb)) {\n//         startProb -= probDec;\n//         ++radius;\n//     }\n//     // startProb = 100;\n//     // probDec = 0;\n//     spawnMap.updateCircle(x, y, radius, (_v, i, j) => {\n//         if (!cellIsOk(this, i, j, ctx)) return 0;\n//         // const dist = Math.floor(Utils.distanceBetween(x, y, i, j));\n//         // const prob = startProb - dist * probDec;\n//         // if (!random.chance(prob)) return 0;\n//         return 1;\n//     });\n//     // spawnMap[x][y] = 1;\n//     // if (!isOk(flags, x, y, ctx)) {\n//     //     spawnMap[x][y] = 0;\n//     // }\n//     return true;\n// }\n// export function spreadLine(\n//     this: any,\n//     ctx: Effect.EffectCtx,\n//     spawnMap: Grid.NumGrid\n// ) {\n//     let x2, y2;\n//     let madeChange;\n//     const x = ctx.x;\n//     const y = ctx.y;\n//     let startProb = this.spread || 0;\n//     let probDec = this.decrement || 0;\n//     spawnMap.fill(0);\n//     spawnMap[x][y] = 1; // incremented before anything else happens\n//     if (startProb) {\n//         madeChange = true;\n//         if (startProb >= 100) {\n//             probDec = probDec || 100;\n//         }\n//         x2 = x;\n//         y2 = y;\n//         const dir = Utils.DIRS[GW.random.number(4)];\n//         while (madeChange) {\n//             madeChange = false;\n//             x2 = x2 + dir[0];\n//             y2 = y2 + dir[1];\n//             if (\n//                 spawnMap.hasXY(x2, y2) &&\n//                 !spawnMap[x2][y2] &&\n//                 cellIsOk(this, x2, y2, ctx) &&\n//                 GW.random.chance(startProb)\n//             ) {\n//                 spawnMap[x2][y2] = 1;\n//                 madeChange = true;\n//                 startProb -= probDec;\n//             }\n//         }\n//     }\n//     if (!cellIsOk(this, x, y, ctx)) {\n//         spawnMap[x][y] = 0;\n//     }\n//     return true;\n// }\nexport function clearCells(map, spawnMap, flags = 0) {\n    let didSomething = false;\n    const clearAll = (flags & Effect.Flags.E_CLEAR_CELL) === Effect.Flags.E_CLEAR_CELL;\n    spawnMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        const cell = map.cell(i, j);\n        if (clearAll) {\n            cell.clear();\n        }\n        else {\n            if (flags & Effect.Flags.E_CLEAR_GAS) {\n                cell.clearDepth(Entity.flags.Depth.GAS);\n            }\n            if (flags & Effect.Flags.E_CLEAR_LIQUID) {\n                cell.clearDepth(Entity.flags.Depth.LIQUID);\n            }\n            if (flags & Effect.Flags.E_CLEAR_SURFACE) {\n                cell.clearDepth(Entity.flags.Depth.SURFACE);\n            }\n            if (flags & Effect.Flags.E_CLEAR_GROUND) {\n                cell.clearDepth(Entity.flags.Depth.GROUND);\n            }\n        }\n        didSomething = true;\n    });\n    return didSomething;\n}\nexport function evacuateCreatures(map, blockingMap) {\n    let i = 0, j = 0;\n    let didSomething = false;\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            if (!blockingMap[i][j])\n                continue;\n            const cell = map.cell(i, j);\n            if (!cell.hasActor())\n                continue;\n            Utils.eachChain(cell.actor, (obj) => {\n                if (!(obj instanceof Actor))\n                    return;\n                const monst = obj;\n                const loc = random.matchingLocNear(i, j, (x, y) => {\n                    if (!map.hasXY(x, y))\n                        return false;\n                    if (blockingMap[x][y])\n                        return false;\n                    const c = map.cell(x, y);\n                    return !monst.forbidsCell(c);\n                });\n                if (loc && loc[0] >= 0 && loc[1] >= 0) {\n                    map.moveActor(monst, loc[0], loc[1]);\n                    // map.redrawXY(loc[0], loc[1]);\n                    didSomething = true;\n                }\n            });\n        }\n    }\n    return didSomething;\n}\nexport function evacuateItems(map, blockingMap) {\n    let didSomething = false;\n    blockingMap.forEach((v, i, j) => {\n        if (!v)\n            return;\n        const cell = map.cell(i, j);\n        if (!cell.hasItem())\n            return;\n        Utils.eachChain(cell.item, (obj) => {\n            if (!(obj instanceof Item))\n                return;\n            const item = obj;\n            const loc = random.matchingLocNear(i, j, (x, y) => {\n                if (!map.hasXY(x, y))\n                    return false;\n                if (blockingMap[x][y])\n                    return false;\n                const dest = map.cell(x, y);\n                return !item.forbidsCell(dest);\n            });\n            if (loc && loc[0] >= 0 && loc[1] >= 0) {\n                map.moveItem(item, loc[0], loc[1]);\n                // map.redrawXY(loc[0], loc[1]);\n                didSomething = true;\n            }\n        });\n    });\n    return didSomething;\n}\nclass ClearTileEffect {\n    make(src, dest) {\n        if (!src.clear)\n            return true;\n        let config = src.clear;\n        let layers = 0;\n        if (typeof config === 'string') {\n            config = config.split(/[,|]/).map((t) => t.trim());\n        }\n        if (config === true) {\n            layers = Entity.flags.Depth.ALL_LAYERS;\n        }\n        else if (typeof config === 'number') {\n            layers = config;\n        }\n        else if (Array.isArray(config)) {\n            layers = config.reduce((out, v) => {\n                if (typeof v === 'number')\n                    return out | v;\n                const depth = Entity.flags.Depth[v] ||\n                    0;\n                return out | depth;\n            }, 0);\n        }\n        else {\n            throw new Error('clear effect must have number or string config.');\n        }\n        dest.clear = layers;\n        return layers > 0;\n    }\n    fire(config, map, x, y, ctx) {\n        return this.fireSync(config, map, x, y, ctx);\n    }\n    fireSync(config, map, x, y, _ctx) {\n        if (!config.clear)\n            return false;\n        if (!map)\n            return false;\n        const cell = map.cell(x, y);\n        return cell.clearDepth(config.clear);\n    }\n}\nEffect.installHandler('clear', new ClearTileEffect());\n//# sourceMappingURL=effect.js.map","import { Cell, Map, GameObject, Depth, Tile } from './flags';\nexport const flags = { Cell, Map, GameObject, Depth, Tile };\nexport * from './types';\nexport * from './cell';\nexport * from './map';\nexport * from './analyze';\nexport * from './effect';\nexport * from './cellMemory';\nexport * from './layers';\nexport * from './gasLayer';\nexport * from './fireLayer';\n//# sourceMappingURL=index.js.map"],"names":["Alea","seed","FRAC","_s0","_s1","_s2","_c","t","RANDOM_CONFIG","make","lotteryDrawArray","rand","frequencies","i","maxFreq","randIndex","length","range","console","warn","Random","[object Object]","this","_fn","config","random","cosmetic","val","Date","now","value","max","Number","MAX_SAFE_INTEGER","Math","floor","number","lo","hi","diff","count","sides","addend","total","mult","weights","Array","isArray","entries","Object","map","_","weight","lotteryDrawObject","list","values","obj","item","keys","fromIndex","toIndex","r","buf","arguments","n","shuffle","percent","outOf","clumps","numSides","width","height","matchFn","j","index","locationCount","Utils.forRect","x","y","k","candidateLocs","loc","eachChain","fn","next","addToChain","name","entry","removeFromChain","root","prev","current","findInChain","cb","DIRS","CLOCK_DIRS","NOOP","TRUE","clamp","v","min","src","Bounds","w","h","left","right","top","bottom","args","eachNeighbor","only4dirs","dir","distanceBetween","x1","y1","x2","y2","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","assignField","dest","key","updated","copy","clear","nullify","clone","slice","setDefaults","def","custom","forEach","origKey","defValue","parts","split","shift","undefined","ERROR","message","Error","WARN","first","find","FP_FACTOR","forLine","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","forCircle","radius","forRect","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","a","b","pct","dx","dy","async","maxIndex","d","x0","y0","findIndex","result","push","steps","c","last","step","currentXValue","maxXValue","sin","PI","omit","trim","includes","field","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","some","av","arr","reduce","line","iterable","chain","sort","onchange","other","o","out","Range","lower","upper","rng","_rng","clumped","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","from","fl","N","u","startsWith","substring","flagObj","inverse","join","Utils.DIRS","makeArray","l","fill","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","_width","_height","hasXY","Utils.eachNeighbor","sequence","constructor","update","col","Utils.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","log","dumpRect","Utils.clamp","output","padStart","bestLoc","bestDistance","dist","Utils.distanceBetween","chance","get","matchingLoc","matchingLocNear","Utils.arcCount","GRID_CACHE","stats","active","alloc","create","free","NumGrid","bind","grid","pop","_resize","indexOf","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","Utils.Bounds","matchValue","numberOfCells","fillFn","floodFill","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","makeKeyEvent","e","toLowerCase","toUpperCase","clientX","clientY","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","unshift","ms","Utils.TRUE","done","elapsed","Promise","resolve","keymap","interval","setInterval","pushEvent","nextEvent","draw","clearInterval","setTimeout","nextKeyOrClick","pause","loop","FovFlags","id","clearEvents","preventDefault","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","ITEM_DETECTED","MONSTER_DETECTED","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","Utils.calcRadius","_hasXY","_debug","debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","FovSystem","site","flags","Grid.make","_changed","viewportChanged","fov","FOV.FOV","blocksVision","visible","makeAlwaysVisible","revealed","revealAll","changed","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","REVEALED","ALWAYS_VISIBLE","flag","WAS_ANY_KIND_OF_VISIBLE","WAS_IN_FOV","isVisible","wasVisible","onCellRevealed","isClairy","wasClairy","storeMemory","redrawCell","isTele","wasTele","isMonst","wasMonst","WAS_MONSTER_DETECTED","hasVisibleLight","updateCellVisibility","updateCellClairyvoyance","updateCellTelepathy","updateCellDetect","cx","cy","cr","lightingChanged","demoteCellVisibility","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","Utils.addToChain","removeListener","success","Utils.eachChain","matches","Utils.removeFromChain","clearEvent","emit","apply","p","level","funcs","levels","frequency","start","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","toColorInt","g","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","set","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","assign","separate","A","hDiff","mix","WHITE","BLACK","install","info","installSpread","lighten","darken","NONE","temp","Mixer","Utils.first","fg","Color.from","bg","equals","opacity","color","multiply","multiplier","scale","add","Color.separate","bake","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","remove","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","_data","Uint32Array","orig","style","toGlyph","sprite","Text.eachChar","Text.wordWrap","xi","strength","mixer","drawSprite","header","Buffer","canvas","_target","copyTo","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","_requestRender","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","Color.make","templates","msg","Text.compile","GW.config","handlers","addAt","Text.apply","addMessage","Effect","addCombatMessage","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","needs","Text.length","_x","_y","_addMessage","_a","commitCombatMessage","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","addMessageLine","_addCombatMessage","fromFlag","Flags","effect","effects","reset","E_FIRED","E_CLEAR_GROUND","E_CLEAR_SURFACE","E_CLEAR_LIQUID","E_CLEAR_GAS","E_BLOCKED_BY_ITEMS","E_BLOCKED_BY_ACTORS","installHandler","handler","fire","ctx_","force","Grid.alloc","didSomething","allHandlers","E_NO_MARK_FIRED","E_NEXT_ALWAYS","DATA","gameHasEnded","nextInfo","E_NEXT_EVERYWHERE","forEachAsync","Grid.free","fireSync","MessageEffect","fired","Msg.add","EmitEffect","Events.emit","FnEffect","ActivateMachineEffect","activateMachine","machine","cell","machineId","activateMachineSync","Blob","rounds","minWidth","minHeight","maxWidth","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","UTILS.Bounds","GRID.alloc","tries","_cellularAutomataRound","valueBounds","GRID.free","nbCount","buffer2","UTILS.DIRS","carve","CONFIG","light","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","calcFov","lightValue","addCellLight","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","LightSystem","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","anyLightChanged","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor","GameObject","Depth","L_BLOCKS_ITEMS","L_BLOCKS_SURFACE","L_BLOCKS_GAS","L_BLOCKS_LIQUID","L_BLOCKS_EFFECTS","L_BLOCKS_ACTORS","L_BLOCKS_MOVE","L_BLOCKS_VISION","L_BLOCKS_DIAGONAL","L_WALL_FLAGS","depth","object","hasObjectFlag","Flags.GameObject","Item","quantity","ITEM","_cell","Actor","actor","Flags.Depth","ACTOR","hasActorFlag","Flags.Actor","IS_PLAYER","Tile","TileMech","T_UP_STAIRS","T_DOWN_STAIRS","T_PORTAL","T_AUTO_DESCENT","T_LAVA","T_DEEP_WATER","T_SPONTANEOUSLY_IGNITES","T_HAS_STAIRS","T_IS_TRAP","T_IS_FIRE","T_ENTANGLES","dissipate","priority","groundTile","Sprite.make","description","flavor","article","tile","tileMech","ObjectFlags","blocksMove","hasTileFlag","Flags.Tile","T_PATHING_BLOCKER","getName","_e","_f","extends","tiles","makeEffect","Flag.from","Flags.TileMech","Light.make","all","enter","open","tick","close","Cell","Map","IS_IN_ROOM_MACHINE","IS_IN_AREA_MACHINE","HAS_ITEM","HAS_DORMANT_MONSTER","STABLE_MEMORY","SEARCHED_FROM_HERE","PRESSURE_PLATE_DEPRESSED","KNOWN_TO_BE_TRAP_FREE","IS_IN_LOOP","IS_CHOKEPOINT","IS_GATE_SITE","IS_IN_MACHINE","IMPREGNABLE","HAS_PLAYER","HAS_ACTOR","HAS_ANY_ACTOR","NEEDS_REDRAW","CELL_CHANGED","CellObjects","_item","_actor","chokeCount","_objects","TILE.tiles","NULL","TILE.get","setTile","objectFlags","tileFlags","tileMechFlags","itemFlags","actorFlags","needsRedraw","TILE.Tile","highestPriorityTile","blocksPathing","blocksEffects","TILE.flags","T_BLOCKS_OTHER_LAYERS","hasAllObjectFlags","TileFlags","tileFlag","tileMechFlag","hasTileMechFlag","clearDepth","depthTile","_fire","_fireSync","Effect.effects","Effect.fire","Effect.fireSync","hasEffect","hasCellFlag","setCellFlag","clearCellFlag","MapLayer","properties","_other","_dt","ActorLayer","_opts","forbidsCell","isPlayer","Flags.Cell","ItemLayer","TileLayer","Tile.tiles","superpriority","blocksLayer","blockedByItems","hasItem","blockedByActors","blockedByOtherLayers","highestPriority","GROUND","ground","Tile.get","CAUGHT_FIRE_THIS_TURN","hasKey","activate","CellMemory","blocks","vision","move","pathing","_tile","_hasKey","snapshot","cellFlags","CellFlags","TileMechFlags","FireLayer","exposeToFire","alwaysIgnite","ignitionChance","bestExtinguishingPriority","explosiveNeighborCount","fireIgnited","explosivePromotion","T_IS_FLAMMABLE","eachTile","T_EXTINGUISHES_FIRE","GAS","Effect.from","TM_EXPLOSIVE_PROMOTE","GasLayer","volume","startingVolume","spread","highestVolume","startingTile","highestTile","updateCellVolume","calcOpacity","layers","cells","memory","FOV.FovSystem","initLayers","useMemory","addLayer","SURFACE","layer","Canvas.Canvas","getAppearanceAt","hasPlayer","isAnyKindOfVisible","fmt","dump","boundary","cellInfo","hasTile","fireAll","setAmbient","getAmbient","activateSync","willFire","EVENT_FIRED_THIS_TURN","EVENT_PROTECTED","promoteChance","putAppearance","COLORS_DANCE","putSnapshot","getSnapshot","getLight","isRevealed","L_VISUALLY_DISTINCT","_cb","isDark","clearMemory","store","updateChokepoints","updateCounts","passMap","L_SECRETLY_PASSABLE","passableArcCount","Utils.CLOCK_DIRS","cellCount","floodFillCount","i2","j2","startX","startY","updateLoopiness","eachCell","resetLoopiness","checkLoopiness","cleanLoopiness","inString","sdir","numStrings","maxStringLength","currentStringLength","newCell","fillInnerLoopGrid","up","designationSurvives","SpawnEffect","grow","decrement","Effect.Flags","matchTile","abortIfBlocking","E_ABORT_IF_BLOCKS_MAP","isBlocking","E_PERMIT_BLOCKING","E_TREAT_AS_BLOCKING","computeSpawnMap","mapDisruptedBy","E_EVACUATE_CREATURES","evacuateCreatures","E_EVACUATE_ITEMS","evacuateItems","E_CLEAR_CELL","clearCells","spawnTiles","blockingGrid","blockingToMapX","blockingToMapY","walkableGrid","disrupts","lakeX","lakeY","isStairs","spawnMap","accomplishedSomething","E_BLOCKED_BY_OTHER_LAYERS","E_SUPERPRIORITY","E_PROTECTED","setMapFlag","Flags.Map","MAP_CHANGED","cellIsOk","isStart","E_BUILD_IN_WALLS","isWall","E_MUST_TOUCH_WALLS","E_NO_TOUCH_WALLS","madeChange","startProb","probDec","clearAll","Entity.flags.Depth","LIQUID","blockingMap","monst","moveActor","moveItem","ALL_LAYERS","prefab","charToTile","isStringArray","updateChokeCounts"],"mappings":"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"}