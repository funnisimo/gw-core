{"version":3,"file":"gw-utils.min.js","sources":["../js/utils.js","../js/xy.js","../js/list.js","../js/object.js","../js/rng.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/color/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/canvas.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/blob.js","../js/light/light.js","../js/light/system.js"],"sourcesContent":["/**\n * GW.utils\n * @module utils\n */\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function arrayDelete(a, b) {\n    const index = a.indexOf(b);\n    if (index < 0)\n        return false;\n    a.splice(index, 1);\n    return true;\n}\nexport function arrayFindRight(a, fn) {\n    for (let i = a.length - 1; i >= 0; --i) {\n        const e = a[i];\n        if (fn(e))\n            return e;\n    }\n    return undefined;\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\nexport function arrayNext(a, current, fn, wrap = true, forward = true) {\n    const len = a.length;\n    if (len <= 1)\n        return undefined;\n    const startIndex = a.indexOf(current);\n    if (startIndex < 0)\n        return undefined;\n    const dx = forward ? 1 : -1;\n    let startI = wrap ? (startIndex + dx) % len : startIndex + dx;\n    let endI = wrap ? startIndex : forward ? len : -1;\n    for (let index = startI; index !== endI; index = wrap ? (len + index + dx) % len : index + dx) {\n        const e = a[index];\n        if (fn(e))\n            return e;\n    }\n    return undefined;\n}\nexport function arrayPrev(a, current, fn, wrap = true) {\n    return arrayNext(a, current, fn, wrap, false);\n}\n//# sourceMappingURL=utils.js.map","import { clamp } from './utils';\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport function contains(size, x, y) {\n    return x >= 0 && y >= 0 && x < size.width && y < size.height;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    get top() {\n        return this.y;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    clone() {\n        return new Bounds(this.x, this.y, this.width, this.height);\n    }\n    contains(...args) {\n        let i = args[0];\n        let j = args[1];\n        if (typeof i !== 'number') {\n            j = y(i);\n            i = x(i);\n        }\n        return (this.x <= i &&\n            this.y <= j &&\n            this.x + this.width > i &&\n            this.y + this.height > j);\n    }\n    toString() {\n        return `[${this.x},${this.y} -> ${this.right},${this.bottom}]`;\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport async function eachNeighborAsync(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        await fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function straightDistanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    return x + y;\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// LINES\nexport function forLine(x, y, dir, length, fn) {\n    for (let l = 0; l < length; ++l) {\n        fn(x + l * dir[0], y + l * dir[1]);\n    }\n}\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLineBetween(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return true;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc) === false) {\n            return false;\n        }\n        if (currentLoc[0] === toX && currentLoc[1] === toY)\n            return true;\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return false;\n        line.push([x, y]);\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n//# sourceMappingURL=xy.js.map","// CHAIN\nexport function length(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function includes(root, entry) {\n    while (root && root !== entry) {\n        root = root.next;\n    }\n    return root === entry;\n}\nexport function forEach(root, fn) {\n    let index = 0;\n    while (root) {\n        const next = root.next;\n        fn(root, index++);\n        root = next;\n    }\n    return index; // really count\n}\nexport function push(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function remove(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function find(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport function insert(obj, name, entry, sort) {\n    let root = obj[name];\n    sort = sort || (() => -1); // always insert first\n    if (!root || sort(root, entry) < 0) {\n        obj.next = root;\n        obj[name] = entry;\n        return true;\n    }\n    let prev = root;\n    let current = root.next;\n    while (current && sort(current, entry) < 0) {\n        prev = current;\n        current = current.next;\n    }\n    entry.next = current;\n    prev.next = entry;\n    return true;\n}\nexport function reduce(root, cb, out) {\n    let current = root;\n    if (!current)\n        return out;\n    if (out === undefined) {\n        out = current;\n        current = current.next;\n    }\n    while (current) {\n        out = cb(out, current);\n        current = current.next;\n    }\n    return out;\n}\nexport function some(root, cb) {\n    let current = root;\n    while (current) {\n        if (cb(current))\n            return true;\n        current = current.next;\n    }\n    return false;\n}\nexport function every(root, cb) {\n    let current = root;\n    while (current) {\n        if (!cb(current))\n            return false;\n        current = current.next;\n    }\n    return true;\n}\n//# sourceMappingURL=list.js.map","import { ERROR } from './utils';\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=object.js.map","import * as XY from './xy';\n/**\n * The code in this function is extracted from ROT.JS.\n * Source: https://github.com/ondras/rot.js/blob/v2.2.0/src/rng.ts\n * Copyright (c) 2012-now(), Ondrej Zara\n * All rights reserved.\n * License: BSD 3-Clause \"New\" or \"Revised\" License\n * See: https://github.com/ondras/rot.js/blob/v2.2.0/license.txt\n */\nexport function Alea(seed) {\n    /**\n     * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n     * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n     */\n    seed = Math.abs(seed || Date.now());\n    seed = seed < 1 ? 1 / seed : seed;\n    const FRAC = 2.3283064365386963e-10; /* 2^-32 */\n    let _s0 = 0;\n    let _s1 = 0;\n    let _s2 = 0;\n    let _c = 0;\n    /**\n     * Seed the number generator\n     */\n    _s0 = (seed >>> 0) * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s1 = seed * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s2 = seed * FRAC;\n    _c = 1;\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    return function alea() {\n        let t = 2091639 * _s0 + _c * FRAC;\n        _s0 = _s1;\n        _s1 = _s2;\n        _c = t | 0;\n        _s2 = t - _c;\n        return _s2;\n    };\n}\nconst RANDOM_CONFIG = {\n    make: Alea,\n    // make: (seed?: number) => {\n    //     let rng = ROT.RNG.clone();\n    //     if (seed) {\n    //         rng.setSeed(seed);\n    //     }\n    //     return rng.getUniform.bind(rng);\n    // },\n};\nexport function configure(config = {}) {\n    if (config.make) {\n        RANDOM_CONFIG.make = config.make;\n        random.seed();\n        cosmetic.seed();\n    }\n}\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    if (index < 0)\n        return -1;\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor(seed) {\n        this._fn = RANDOM_CONFIG.make(seed);\n    }\n    seed(val) {\n        val = val || Date.now();\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max = Number.MAX_SAFE_INTEGER) {\n        if (max <= 0)\n            return 0;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        XY.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\nexport function make(seed) {\n    return new Random(seed);\n}\n//# sourceMappingURL=rng.js.map","import { random } from './rng';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1) {\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value(rng) {\n        rng = rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    contains(value) {\n        return this.lo <= value && this.hi >= value;\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config) {\n    if (!config)\n        return new Range(0, 0, 0);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0);\n    if (typeof config == 'number')\n        return new Range(config, config, 1);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2]);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config) {\n    const range = make(config);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    const parts = v.split(/[,|]/);\n                    if (parts.length > 1) {\n                        result = from(obj, result, parts);\n                    }\n                    else if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        const n = Number.parseInt(v);\n                        if (n >= 0) {\n                            result |= n;\n                            return;\n                        }\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\nexport function make(obj) {\n    const out = {};\n    Object.entries(obj).forEach(([key, value]) => {\n        out[key] = from(out, value);\n    });\n    return out;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './rng';\nimport * as Utils from './utils';\nimport * as XY from './xy';\nconst DIRS = XY.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        const grid = this;\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i, grid));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        XY.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        XY.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        XY.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        XY.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    /**\n     * Finds the first matching value/result and returns that location as an xy.Loc\n     * @param v - The fill value or a function that returns the fill value.\n     * @returns xy.Loc | null - The location of the first cell matching the criteria or null if not found.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    find(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const v = this[x][y];\n                if (fn(v, x, y, this))\n                    return [x, y];\n            }\n        }\n        return null;\n    }\n    dump(fmtFn, log = console.log) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn, log);\n    }\n    dumpRect(left, top, width, height, fmtFn, log = console.log) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius, fmtFn, log = console.log) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius, fmtFn, log);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * XY.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return XY.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\nexport const stats = {\n    active: 0,\n    alloc: 0,\n    create: 0,\n    free: 0,\n};\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++stats.active;\n        ++stats.alloc;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++stats.create;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++stats.free;\n            --stats.active;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y, this);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new XY.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        let done = NumGrid.alloc(this.width, this.height);\n        let newX, newY;\n        const todo = [[x, y]];\n        const free = [];\n        let count = 1;\n        while (todo.length) {\n            const item = todo.pop();\n            [x, y] = item;\n            free.push(item);\n            if (!this.hasXY(x, y) || done[x][y])\n                continue;\n            if (!matchFn(this[x][y], x, y, this))\n                continue;\n            this[x][y] = fillFn(this[x][y], x, y, this);\n            done[x][y] = 1;\n            ++count;\n            // Iterate through the four cardinal neighbors.\n            for (let dir = 0; dir < 4; dir++) {\n                newX = x + DIRS[dir][0];\n                newY = y + DIRS[dir][1];\n                // If the neighbor is an unmarked region cell,\n                const item = free.pop() || [-1, -1];\n                item[0] = newX;\n                item[1] = newY;\n                todo.push(item);\n            }\n        }\n        NumGrid.free(done);\n        return count;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nexport const STOP = 'stop';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (ev.type === STOP) {\n        recycleEvent(ev);\n        return true; // Should stop loops, etc...\n    }\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// STOP\nexport function makeStopEvent() {\n    const ev = makeTickEvent(0);\n    ev.type = STOP;\n    return ev;\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = true;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n        this.interval = 0;\n        this.intervalCount = 0;\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    _startTicks() {\n        ++this.intervalCount;\n        if (this.interval)\n            return;\n        this.interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n    }\n    _stopTicks() {\n        if (!this.intervalCount)\n            return; // too many calls to stop\n        --this.intervalCount;\n        if (this.intervalCount)\n            return; // still have a loop running\n        clearInterval(this.interval);\n        this.interval = 0;\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            throw new Error('OVERWRITE HANDLER -- Check for a missing await around Loop function calls.');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        this.running = true;\n        this.clearEvents(); // ??? Should we do this?\n        this._startTicks();\n        if (keymap.start && typeof keymap.start === 'function') {\n            await keymap.start();\n        }\n        let running = true;\n        while (this.running && running) {\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                keymap.draw();\n            }\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                running = false;\n            }\n        }\n        if (keymap.stop && typeof keymap.stop === 'function') {\n            await keymap.stop();\n        }\n        this._stopTicks();\n    }\n    stop() {\n        this.clearEvents();\n        this.running = false;\n        this.pushEvent(makeStopEvent());\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = 0;\n        }\n        this.CURRENT_HANDLER = null;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n    onkeydown(e) {\n        if (ignoreKeyEvent(e))\n            return;\n        if (e.code === 'Escape') {\n            this.clearEvents(); // clear all current events, then push on the escape\n        }\n        const ev = makeKeyEvent(e);\n        this.pushEvent(ev);\n        e.preventDefault();\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"ACTOR_DETECTED\"] = Fl(8)] = \"ACTOR_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ACTOR_DETECTED\"] = Fl(9)] = \"WAS_ACTOR_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"IS_CURSOR\"] = Fl(15)] = \"IS_CURSOR\";\n    FovFlags[FovFlags[\"IS_HIGHLIGHTED\"] = Fl(16)] = \"IS_HIGHLIGHTED\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_DETECTED\"] = FovFlags.WAS_ITEM_DETECTED | FovFlags.WAS_ACTOR_DETECTED] = \"WAS_DETECTED\";\n    FovFlags[FovFlags[\"IS_DETECTED\"] = FovFlags.ITEM_DETECTED | FovFlags.ACTOR_DETECTED] = \"IS_DETECTED\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.ACTOR_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nimport * as XY from '../xy';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || XY.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = XY.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GWU from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nimport { NOOP } from '../utils';\nimport * as XY from '../xy';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        this.onFovChange = { onFovChange: NOOP };\n        this.follow = null;\n        this.site = site;\n        let flag = 0;\n        const visible = opts.visible || opts.alwaysVisible;\n        if (opts.revealed || (visible && opts.revealed !== false))\n            flag |= FovFlags.REVEALED;\n        if (visible)\n            flag |= FovFlags.VISIBLE;\n        this.flags = Grid.make(site.width, site.height, flag);\n        this.needsUpdate = true;\n        this._changed = true;\n        if (typeof opts.onFovChange === 'function') {\n            this.onFovChange.onFovChange = opts.onFovChange;\n        }\n        else if (opts.onFovChange) {\n            this.onFovChange = opts.onFovChange;\n        }\n        this.fov = new FOV.FOV({\n            isBlocked(x, y) {\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return x >= 0 && y >= 0 && x < site.width && y < site.height;\n            },\n        });\n        if (opts.alwaysVisible) {\n            this.makeAlwaysVisible();\n        }\n        if (opts.visible || opts.alwaysVisible) {\n            XY.forRect(site.width, site.height, (x, y) => this.onFovChange.onFovChange(x, y, true));\n        }\n    }\n    getFlag(x, y) {\n        return this.flags[x][y];\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    fovChanged(x, y) {\n        const flags = this.flags.get(x, y) || 0;\n        const isVisible = !!(flags & FovFlags.ANY_KIND_OF_VISIBLE);\n        const wasVisible = !!(flags & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        return isVisible !== wasVisible;\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |= FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE;\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    revealAll(makeVisibleToo = true) {\n        const flag = FovFlags.REVEALED | (makeVisibleToo ? FovFlags.VISIBLE : 0);\n        this.flags.update((v) => v | flag);\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    revealCell(x, y, makeVisibleToo = true) {\n        const flag = FovFlags.REVEALED | (makeVisibleToo ? FovFlags.VISIBLE : 0);\n        this.flags[x][y] |= flag;\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED |\n            FovFlags.REVEALED |\n            FovFlags.ALWAYS_VISIBLE);\n        this.flags[x][y] = this.demoteCellVisibility(this.flags[x][y]); // clears visible, etc...\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n        this.changed = true;\n        // TODO - onFovChange?\n    }\n    reset() {\n        this.flags.fill(0);\n        this.changed = true;\n        // TODO - onFovChange?\n    }\n    get changed() {\n        return this._changed;\n    }\n    set changed(v) {\n        this._changed = v;\n        this.needsUpdate = this.needsUpdate || v;\n    }\n    // CURSOR\n    setCursor(x, y, keep = false) {\n        if (!keep) {\n            this.flags.update((f) => f & ~FovFlags.IS_CURSOR);\n        }\n        this.flags[x][y] |= FovFlags.IS_CURSOR;\n    }\n    clearCursor(x, y) {\n        if (x === undefined || y === undefined) {\n            this.flags.update((f) => f & ~FovFlags.IS_CURSOR);\n        }\n        else {\n            this.flags[x][y] &= ~FovFlags.IS_CURSOR;\n        }\n    }\n    isCursor(x, y) {\n        return !!(this.flags[x][y] & FovFlags.IS_CURSOR);\n    }\n    // HIGHLIGHT\n    setHighlight(x, y, keep = false) {\n        if (!keep) {\n            this.flags.update((f) => f & ~FovFlags.IS_HIGHLIGHTED);\n        }\n        this.flags[x][y] |= FovFlags.IS_HIGHLIGHTED;\n    }\n    clearHighlight(x, y) {\n        if (x === undefined || y === undefined) {\n            this.flags.update((f) => f & ~FovFlags.IS_HIGHLIGHTED);\n        }\n        else {\n            this.flags[x][y] &= ~FovFlags.IS_HIGHLIGHTED;\n        }\n    }\n    isHighlight(x, y) {\n        return !!(this.flags[x][y] & FovFlags.IS_HIGHLIGHTED);\n    }\n    // COPY\n    copy(other) {\n        this.flags.copy(other.flags);\n        this.needsUpdate = other.needsUpdate;\n        this._changed = other._changed;\n    }\n    //////////////////////////\n    // UPDATE\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            this.flags[x][y] |= FovFlags.REVEALED;\n            this.onFovChange.onFovChange(x, y, isVisible);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            this.onFovChange.onFovChange(x, y, isVisible);\n        }\n        return isVisible;\n    }\n    updateCellClairyvoyance(flag, x, y) {\n        const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n        const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n        if (isClairy && wasClairy) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isClairy && wasClairy) {\n            // ceased being clairvoyantly visible\n            this.onFovChange.onFovChange(x, y, isClairy);\n        }\n        else if (!wasClairy && isClairy) {\n            // became clairvoyantly visible\n            this.onFovChange.onFovChange(x, y, isClairy);\n        }\n        return isClairy;\n    }\n    updateCellTelepathy(flag, x, y) {\n        const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n        const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n        if (isTele && wasTele) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isTele && wasTele) {\n            // ceased being telepathically visible\n            this.onFovChange.onFovChange(x, y, isTele);\n        }\n        else if (!wasTele && isTele) {\n            // became telepathically visible\n            this.onFovChange.onFovChange(x, y, isTele);\n        }\n        return isTele;\n    }\n    updateCellDetect(flag, x, y) {\n        const isMonst = !!(flag & FovFlags.ACTOR_DETECTED);\n        const wasMonst = !!(flag & FovFlags.WAS_ACTOR_DETECTED);\n        if (isMonst && wasMonst) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isMonst && wasMonst) {\n            // ceased being detected visible\n            this.onFovChange.onFovChange(x, y, isMonst);\n        }\n        else if (!wasMonst && isMonst) {\n            // became detected visible\n            this.onFovChange.onFovChange(x, y, isMonst);\n        }\n        return isMonst;\n    }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        if (this.updateCellClairyvoyance(flag, x, y))\n            return;\n        if (this.updateCellTelepathy(flag, x, y))\n            return;\n        if (this.updateCellDetect(flag, x, y))\n            return;\n    }\n    updateFor(subject) {\n        return this.update(subject.x, subject.y, subject.visionDistance);\n    }\n    update(cx, cy, cr) {\n        // if (!this.site.usesFov()) return false;\n        if (arguments.length == 0 && this.follow) {\n            return this.updateFor(this.follow);\n        }\n        if (!this.needsUpdate &&\n            cx === undefined &&\n            !this.site.lightingChanged()) {\n            return false;\n        }\n        if (cr === undefined) {\n            cr = this.site.width + this.site.height;\n        }\n        this.needsUpdate = false;\n        this._changed = false;\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            const flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                throw new Error('Received invalid viewport type: ' + type);\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as XY from './xy';\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = XY.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = XY.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + XY.DIRS[dir][0];\n        newY = y + XY.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return XY.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked, eightWays = false) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, eightWays);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//# sourceMappingURL=path.js.map","import * as List from './list';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {EventFn} fn The listener function.\n     * @param {any} [context=null] The context to invoke the listener with.\n     * @param {boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {EventFn} fn - The function\n     * @param {any} [context] - The context Object.\n     * @param {boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    List.push(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    List.forEach(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            List.remove(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            List.remove(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { cosmetic } from '../rng';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (other instanceof Color) {\n            this.dances = other.dances;\n        }\n        else if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        if (v < 0)\n            return 'transparent';\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothScalar(rgb, maxRgb = 255) {\n    return Math.floor(100 * Math.sin((Math.PI * rgb) / maxRgb));\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.make(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.make(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch || -1;\n        this.fg.copy(other.fg || -1);\n        this.bg.copy(other.bg || -1);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = -1;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg.scale(multiplier);\n        if (bg)\n            this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nlet inColor = false;\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    inColor = false;\n    let i = start;\n    while (count > 0 && i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n                inColor = true;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            else {\n                inColor = false;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const len = length(text);\n    if (len >= width)\n        return text;\n    const colorLen = text.length - len;\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const len = length(text);\n    if (len >= width)\n        return text;\n    const colorLen = text.length - len;\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function truncate(text, width) {\n    const len = length(text);\n    if (len <= width)\n        return text;\n    const index = advanceChars(text, 0, width);\n    if (!inColor)\n        return text.substring(0, index);\n    const CE = Config.options.colorEnd;\n    return text.substring(0, index) + CE;\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return (text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1));\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\nexport function spliceRaw(msg, begin, deleteLength, add = '') {\n    const maxLen = msg.length;\n    if (begin >= maxLen)\n        return msg;\n    const preText = msg.substring(0, begin);\n    if (begin + deleteLength >= maxLen) {\n        return preText;\n    }\n    const postText = msg.substring(begin + deleteLength);\n    return preText + add + postText;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from './compile';\nimport { eachChar } from './each';\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, spliceRaw, truncate, } from './utils';\nimport { wordWrap, splitIntoLines } from './lines';\nimport { addHelper, options } from './config';\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, spliceRaw, truncate, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    clone() {\n        const other = new DataBuffer(this._width, this._height);\n        other.copy(this);\n        return other;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (arguments.length == 1) {\n            bg = Color.from(glyph).toInt();\n            glyph = 0;\n            fg = 0;\n        }\n        else {\n            if (typeof glyph !== 'number') {\n                if (typeof glyph === 'string') {\n                    glyph = this.toGlyph(glyph);\n                }\n                else {\n                    throw new Error('glyph must be number or char');\n                }\n            }\n            if (typeof fg !== 'number') {\n                fg = Color.from(fg).toInt();\n            }\n            if (typeof bg !== 'number') {\n                bg = Color.from(bg).toInt();\n            }\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1, maxWidth = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        maxWidth = maxWidth || this.width;\n        const len = Text.length(text);\n        if (len > maxWidth) {\n            text = Text.truncate(text, len);\n        }\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width || i > maxWidth)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return 1; // used 1 line\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let lineCount = 0;\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y + lineCount, 0, 0x000, bg0);\n                }\n                ++lineCount;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y + lineCount, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y + lineCount, 0, 0x000, bg);\n        }\n        return lineCount + 1;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, bg, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent, x = 0, y = 0, width = 0, height = 0) {\n        color = Color.from(color);\n        const mixer = new Mixer();\n        if (x && !width)\n            width = 1;\n        if (y && !height)\n            height = 1;\n        const endX = width ? width + x : this.width;\n        const endY = height ? height + y : this.height;\n        for (let i = x; i < endX; ++i) {\n            for (let j = y; j < endY; ++j) {\n                const data = this.get(i, j);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(i, j, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport function makeDataBuffer(width, height) {\n    return new DataBuffer(width, height);\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    clone() {\n        const other = new Buffer(this._target);\n        other.copy(this);\n        return other;\n    }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\nexport function makeBuffer(...args) {\n    if (args.length == 1) {\n        return new Buffer(args[0]);\n    }\n    return new DataBuffer(args[0], args[1]);\n}\n//# sourceMappingURL=buffer.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    // draw(x: number, y: number, glyph: number, fg: number, bg: number) {\n    //     glyph = glyph & 0xff;\n    //     bg = bg & 0xfff;\n    //     fg = fg & 0xfff;\n    //     const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n    //     this._set(x, y, style);\n    //     return this;\n    // }\n    // fill(bg: number): this;\n    // fill(glyph: number, fg: number, bg: number): this;\n    // fill(...args: number[]): this {\n    //     let g = 0,\n    //         fg = 0,\n    //         bg = 0;\n    //     if (args.length == 1) {\n    //         bg = args[0];\n    //     } else if (args.length == 3) {\n    //         [g, fg, bg] = args;\n    //     }\n    //     for (let x = 0; x < this._width; ++x) {\n    //         for (let y = 0; y < this._height; ++y) {\n    //             this.draw(x, y, g, fg, bg);\n    //         }\n    //     }\n    //     return this;\n    // }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     const current = this._data[index];\n    //     if (current !== style) {\n    //         this._data[index] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    set onkeydown(fn) {\n        if (fn) {\n            this.node.onkeydown = (e) => {\n                e.stopPropagation();\n                const ev = IO.makeKeyEvent(e);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onkeydown = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n        // canvas.onkeydown = (e) => loop.pushEvent(e); // Keyboard events require tabindex to be set, better to let user do this.\n    }\n    return canvas;\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import * as Color from '../color';\nimport { clamp } from '../utils';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = clamp(opacity, 0, 100);\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        const parts = [];\n        if (this.ch)\n            parts.push('ch: ' + this.ch);\n        if (!this.fg.isNull())\n            parts.push('fg: ' + this.fg.toString(true));\n        if (!this.bg.isNull())\n            parts.push('bg: ' + this.bg.toString(true));\n        if (this.opacity !== 100)\n            parts.push('opacity: ' + this.opacity);\n        return '{ ' + parts.join(', ') + ' }';\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nimport { TRUE } from './utils';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n    return template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\nexport function get(msgOrId) {\n    return templates[msgOrId] || null;\n}\nexport const handlers = [];\nexport function add(msg, args) {\n    return addAt(-1, -1, msg, args);\n}\nexport function addAt(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addMessage(x, y, msg));\n}\nexport function addCombat(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addCombatMessage(x, y, msg));\n}\nexport class MessageCache {\n    constructor(opts = {}) {\n        this.ARCHIVE = [];\n        this.CONFIRMED = [];\n        this.ARCHIVE_LINES = 30;\n        this.MSG_WIDTH = 80;\n        this.NEXT_WRITE_INDEX = 0;\n        this.NEEDS_UPDATE = true;\n        this.COMBAT_MESSAGE = null;\n        this.matchFn = opts.match || TRUE;\n        this.ARCHIVE_LINES = opts.length || 30;\n        this.MSG_WIDTH = opts.width || 80;\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            this.ARCHIVE[i] = null;\n            this.CONFIRMED[i] = false;\n        }\n        handlers.push(this);\n    }\n    get needsUpdate() {\n        return this.NEEDS_UPDATE;\n    }\n    set needsUpdate(needs) {\n        this.NEEDS_UPDATE = needs;\n    }\n    // function messageWithoutCaps(msg, requireAcknowledgment) {\n    _addMessageLine(msg) {\n        if (!Text.length(msg)) {\n            return;\n        }\n        // Add the message to the archive.\n        this.ARCHIVE[this.NEXT_WRITE_INDEX] = msg;\n        this.CONFIRMED[this.NEXT_WRITE_INDEX] = false;\n        this.NEXT_WRITE_INDEX =\n            (this.NEXT_WRITE_INDEX + 1) % this.ARCHIVE_LINES;\n    }\n    addMessage(x, y, msg) {\n        if (!this.matchFn(x, y))\n            return;\n        this.commitCombatMessage();\n        this._addMessage(msg);\n    }\n    _addMessage(msg) {\n        var _a;\n        msg = Text.capitalize(msg);\n        // // Implement the American quotation mark/period/comma ordering rule.\n        // for (i=0; text.text[i] && text.text[i+1]; i++) {\n        //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n        //         i += 4;\n        //     } else if (text.text[i] === '\"'\n        //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n        // \t\t{\n        // \t\t\tconst replace = text.text[i+1] + '\"';\n        // \t\t\ttext.spliceRaw(i, 2, replace);\n        //     }\n        // }\n        const lines = Text.splitIntoLines(msg, this.MSG_WIDTH);\n        if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n            lines.reverse();\n        }\n        lines.forEach((l) => this._addMessageLine(l));\n        // display the message:\n        this.NEEDS_UPDATE = true;\n        // if (GAME.playbackMode) {\n        // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n        // }\n    }\n    addCombatMessage(x, y, msg) {\n        if (!this.matchFn(x, y))\n            return;\n        this._addCombatMessage(msg);\n    }\n    _addCombatMessage(msg) {\n        if (!this.COMBAT_MESSAGE) {\n            this.COMBAT_MESSAGE = msg;\n        }\n        else {\n            this.COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    commitCombatMessage() {\n        if (!this.COMBAT_MESSAGE)\n            return false;\n        this._addMessage(this.COMBAT_MESSAGE + '.');\n        this.COMBAT_MESSAGE = null;\n        return true;\n    }\n    confirmAll() {\n        for (let i = 0; i < this.CONFIRMED.length; i++) {\n            this.CONFIRMED[i] = true;\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    forEach(fn) {\n        this.commitCombatMessage();\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            const n = (this.ARCHIVE_LINES - i + this.NEXT_WRITE_INDEX - 1) %\n                this.ARCHIVE_LINES;\n            const msg = this.ARCHIVE[n];\n            if (!msg)\n                return;\n            if (fn(msg, this.CONFIRMED[n], i) === false)\n                return;\n        }\n    }\n    get length() {\n        let count = 0;\n        this.forEach(() => ++count);\n        return count;\n    }\n}\n//# sourceMappingURL=message.js.map","import * as XY from './xy';\nimport * as GRID from './grid';\nimport { random } from './rng';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rng: random,\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new XY.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = this.options.rng.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < XY.DIRS.length; dir++) {\n                    newX = i + XY.DIRS[dir][0];\n                    newY = j + XY.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import * as XY from '../xy';\nimport * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, radius = 1, fadeTo = 0, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color); /* color */\n        this.radius = Range.make(radius);\n        this.fadeTo = fadeTo;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(site, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!site)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(site.width, site.height, 0);\n        site.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (XY.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS[k] * lightMultiplier) / 100);\n            }\n            site.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    return Math.max(light[0], light[1], light[2]);\n}\nexport function isDarkLight(light, threshold = 20) {\n    return intensity(light) <= threshold;\n}\nexport function isShadowLight(light, threshold = 40) {\n    return intensity(light) <= threshold;\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    source.id = id;\n    return source;\n}\nexport function installAll(config) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as XY from '../xy';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nimport * as List from '../list';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this.changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    copy(other) {\n        this.setAmbient(other.ambient);\n        this.glowLightChanged = true;\n        this.dynamicLightChanged = true;\n        this.changed = true;\n        this.staticLights = null;\n        List.forEach(other.staticLights, (info) => this.addStatic(info.x, info.y, info.light));\n    }\n    getAmbient() {\n        return this.ambient;\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        else if (!Array.isArray(light)) {\n            light = Color.from(light);\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get needsUpdate() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    setLight(x, y, light) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] = light[i];\n        }\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        List.forEach(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this.changed = false;\n        if (!force && !this.needsUpdate)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this.changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        XY.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const site = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && site.hasActor(x, y))\n                    return false;\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return site.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map"],"names":["NOOP","TRUE","clamp","v","min","max","ERROR","message","Error","WARN","args","console","warn","first","find","undefined","arrayNext","a","current","fn","wrap","forward","len","length","startIndex","indexOf","dx","endI","index","e","DIRS","CLOCK_DIRS","x","src","y","Bounds","[object Object]","w","h","this","width","height","left","right","top","bottom","i","j","eachNeighbor","only4dirs","dir","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","FP_FACTOR","forLineBetween","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","forCircle","radius","forRect","arguments","shift","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","size","dest","b","pct","dy","async","matchFn","maxIndex","d","x0","y0","findIndex","result","push","diff","steps","c","last","step","l","line","forEach","root","next","obj","name","entry","remove","prev","count","cb","sort","out","assignField","key","updated","copy","clear","nullify","clone","Array","isArray","slice","setDefaults","def","custom","Object","keys","origKey","defValue","parts","split","omit","map","t","trim","includes","field","val","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","Alea","seed","Date","now","FRAC","_s0","_s1","_s2","_c","RANDOM_CONFIG","make","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","Random","_fn","value","Number","MAX_SAFE_INTEGER","number","lo","hi","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","item","fromIndex","toIndex","r","buf","n","shuffle","percent","outOf","clumps","numSides","locationCount","XY.forRect","k","candidateLocs","loc","random","cosmetic","config","Range","lower","upper","rng","clumped","other","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","from","fl","N","u","startsWith","substring","flagObj","inverse","reduce","join","XY.DIRS","makeArray","fill","arr","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","grid","_width","_height","hasXY","XY.eachNeighbor","sequence","constructor","update","some","col","XY.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","log","dumpRect","Utils.clamp","output","padStart","bestLoc","bestDistance","dist","XY.distanceBetween","chance","get","matchingLoc","matchingLocNear","XY.arcCount","GRID_CACHE","stats","active","alloc","create","free","NumGrid","bind","pop","_resize","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","XY.Bounds","matchValue","fillFn","done","todo","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","STOP","CONTROL_CODES","dispatchEvent","ev","km","command","type","recycleEvent","code","keypress","call","Utils.WARN","makeStopEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","makeKeyEvent","toLowerCase","toUpperCase","clientX","clientY","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","interval","intervalCount","setInterval","pushEvent","clearInterval","unshift","ms","Utils.TRUE","elapsed","Promise","resolve","keymap","clearEvents","_startTicks","start","draw","nextEvent","stop","_stopTicks","setTimeout","nextKeyOrClick","pause","preventDefault","loop","FovFlags","id","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","WAS_ITEM_DETECTED","WAS_ACTOR_DETECTED","ITEM_DETECTED","ACTOR_DETECTED","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","XY.calcRadius","_hasXY","_debug","debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","site","onFovChange","follow","flag","visible","alwaysVisible","revealed","REVEALED","flags","Grid.make","needsUpdate","_changed","fov","FOV.FOV","blocksVision","makeAlwaysVisible","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","WAS_ANY_KIND_OF_VISIBLE","ALWAYS_VISIBLE","changed","makeVisibleToo","demoteCellVisibility","keep","IS_CURSOR","IS_HIGHLIGHTED","WAS_IN_FOV","isVisible","wasVisible","isClairy","wasClairy","isTele","wasTele","isMonst","wasMonst","hasVisibleLight","updateCellVisibility","updateCellClairyvoyance","updateCellTelepathy","updateCellDetect","subject","visionDistance","cx","cy","cr","updateFor","lightingChanged","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","List.push","removeListener","success","List.forEach","matches","List.remove","clearEvent","apply","p","level","funcs","levels","frequency","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","toColorInt","g","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","set","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","blackOut","keepPct","clearDancing","toString","fromArray","vals","fromCss","fromName","fromNumber","assign","separate","A","hDiff","mix","WHITE","BLACK","install","info","installSpread","lighten","darken","NONE","temp","rgb","maxRgb","sin","PI","Mixer","Utils.first","fg","Color.make","bg","equals","Color.from","opacity","color","multiply","multiplier","scale","add","Color.separate","bake","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","inColor","advanceChars","truncate","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","msg","begin","deleteLength","maxLen","preText","DataBuffer","_data","Uint32Array","orig","style","toGlyph","sprite","maxWidth","Text.length","Text.truncate","Text.eachChar","Text.wordWrap","lineCount","xi","strength","mixer","drawSprite","endX","endY","header","Buffer","canvas","_target","copyTo","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","_requestRender","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","onkeydown","stopPropagation","IO.makeKeyEvent","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","templates","Text.compile","GW.config","handlers","addAt","Text.apply","addMessage","msgOrId","addCombatMessage","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","needs","commitCombatMessage","_addMessage","_a","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","_addMessageLine","_addCombatMessage","Blob","rounds","minWidth","minHeight","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","GRID.alloc","tries","_cellularAutomataRound","floodFill","valueBounds","GRID.free","nbCount","buffer2","didSomething","carve","CONFIG","light","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","Grid.alloc","calcFov","lightValue","addCellLight","Grid.free","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","setAmbient","addStatic","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","force","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","DATA","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor","av"],"mappings":"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"}