{"version":3,"file":"gw-utils.min.js","sources":["../js/utils/index.js","../js/random.js","../js/range.js","../js/flag.js","../js/gw.js","../js/grid.js","../js/io.js","../js/fov.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/canvas.js","../js/sprite/sprite.js","../js/message.js","../js/effect/index.js","../js/blob.js","../js/gameObject/flags.js","../js/gameObject/index.js","../js/light/light.js","../js/map/flags.js","../js/light/system.js","../js/map/cell.js","../js/map/index.js","../js/map/map.js"],"sourcesContent":["/**\n * GW.utils\n * @module utils\n */\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    get right() {\n        return this.x + this.width - 1;\n    }\n    get top() {\n        return this.y;\n    }\n    get bottom() {\n        return this.y + this.height - 1;\n    }\n    contains(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (typeof x !== 'number') {\n            y = y(x);\n            x = x(x);\n        }\n        return (this.x <= x &&\n            this.y <= y &&\n            this.x + this.width > x &&\n            this.y + this.height > y);\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothHiliteGradient(currentXValue, maxXValue) {\n    return Math.floor(100 * Math.sin((Math.PI * currentXValue) / maxXValue));\n}\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\n// CHAIN\nexport function chainLength(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function chainIncludes(chain, entry) {\n    while (chain && chain !== entry) {\n        chain = chain.next;\n    }\n    return chain === entry;\n}\nexport function eachChain(item, fn) {\n    let index = 0;\n    while (item) {\n        const next = item.next;\n        fn(item, index++);\n        item = next;\n    }\n    return index; // really count\n}\nexport function addToChain(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function removeFromChain(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\n// LINES\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLine(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc)) {\n            break;\n        }\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n        return x == toX && y == toY;\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return true;\n        line.push([x, y]);\n        return false;\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n//# sourceMappingURL=index.js.map","import * as Utils from './utils';\nimport * as ROT from 'rot-js';\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor() {\n        this._fn = ROT.RNG.clone();\n    }\n    seed(val) {\n        this._fn.setSeed(val);\n    }\n    value() {\n        return this._fn.getUniform();\n    }\n    float() {\n        return this.value();\n    }\n    number(max) {\n        // @ts-ignore\n        if (max <= 0)\n            return 0;\n        max = max || Number.MAX_SAFE_INTEGER;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingXY(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        Utils.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingXYNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\n//# sourceMappingURL=random.js.map","import { random } from './random';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1, rng) {\n        this._rng = rng || random;\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value() {\n        return this._rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        this._rng = other._rng;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config, rng) {\n    if (!config)\n        return new Range(0, 0, 0, rng);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0, rng);\n    if (typeof config == 'number')\n        return new Range(config, config, 1, rng);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2], rng);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0, rng);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count, rng);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps, rng);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3, rng);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1, rng);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config, rng) {\n    const range = make(config, rng);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === \"number\")\n            out[value] = key;\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(\" | \");\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == \"number\") {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === \"string\") {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == \"string\") {\n                    v = v.trim();\n                    if (v.startsWith(\"!\")) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=flag.js.map","export const data = {};\nexport const config = {};\nexport const make = {};\nexport const flags = {};\n//# sourceMappingURL=gw.js.map","import { random } from './random';\nimport * as Utils from './utils';\nimport { make as Make } from './gw';\nconst DIRS = Utils.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        Utils.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        Utils.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        sequence.forEach((n) => {\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            fn(this[x][y], x, y, this);\n        });\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    forCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        Utils.forRect(this.width, this.height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        Utils.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        Utils.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    dump(fmtFn) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn);\n    }\n    dumpRect(left, top, width, height, fmtFn) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        console.log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * Utils.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingXY(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingXYNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return Utils.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\n// @ts-ignore\nlet GRID_ACTIVE_COUNT = 0;\n// @ts-ignore\nlet GRID_ALLOC_COUNT = 0;\n// @ts-ignore\nlet GRID_CREATE_COUNT = 0;\n// @ts-ignore\nlet GRID_FREE_COUNT = 0;\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++GRID_ACTIVE_COUNT;\n        ++GRID_ALLOC_COUNT;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++GRID_CREATE_COUNT;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++GRID_FREE_COUNT;\n            --GRID_ACTIVE_COUNT;\n        }\n    }\n    _resize(width, height, v = 0) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new Utils.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        let dir;\n        let newX, newY, numberOfCells = 1;\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        // Iterate through the four cardinal neighbors.\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (!this.hasXY(newX, newY)) {\n                continue;\n            }\n            if (matchFn(this[newX][newY], newX, newY, this)) {\n                // If the neighbor is an unmarked region cell,\n                numberOfCells += this.floodFill(newX, newY, matchFn, fillFn); // then recurse.\n            }\n        }\n        return numberOfCells;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nMake.grid = make;\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nimport { make as Make } from './gw';\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === 'function') {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === 'function') {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN('No command found: ' + command);\n        }\n    }\n    if ('next' in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\nexport function onkeydown(e) {\n    if (ignoreKeyEvent(e))\n        return;\n    if (e.code === 'Escape') {\n        loop.clearEvents(); // clear all current events, then push on the escape\n    }\n    const ev = makeKeyEvent(e);\n    loop.pushEvent(ev);\n    e.preventDefault();\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = false;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    pushEvent(ev) {\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms === undefined) {\n            ms = -1; // wait forever\n        }\n        if (ms == 0)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            console.warn('OVERWRITE HANDLER - nextEvent');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            e.dt = elapsed;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        const interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n        this.running = true;\n        while (this.running) {\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                this.running = false;\n            }\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                // @ts-ignore\n                keymap.draw();\n            }\n        }\n        clearInterval(interval);\n    }\n    stop() {\n        this.running = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n}\nexport function make() {\n    return new Loop();\n}\nMake.loop = make;\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from './utils';\nexport class FOV {\n    constructor(strategy) {\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || Utils.calcRadius;\n        this._setVisible = strategy.setVisible;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius = 10) {\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = Utils.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","import * as Grid from './grid';\nimport * as Utils from './utils';\n// var PATH = {};\n// export { PATH as path };\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = Utils.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\n// function pdsGetDistance(map, x, y) {\n// \tupdate(map);\n// \treturn getLink(map, x, y).distance;\n// }\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\n// function pdsSetCosts(map: DijkstraMap, costMap: Grid.NumGrid) {\n// \tlet i, j;\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n// \t\t\tif (i != 0 && j != 0 && i < map.width - 1 && j < map.height - 1) {\n// \t\t\t\tgetLink(map, i, j).cost = costMap[i][j];\n// \t\t\t} else {\n// \t\t\t\tgetLink(map, i, j).cost = FORBIDDEN;\n// \t\t\t}\n// \t\t}\n// \t}\n// }\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\n// function pdsBatchInput(\n//   map: DijkstraMap,\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   maxDistance: number,\n//   eightWays: boolean\n// ) {\n//   let i, j;\n//   map.eightWays = eightWays;\n//   let left: CostLink | null = map.front;\n//   let right: CostLink | null = map.front.right;\n//   map.front.right = null;\n//   for (i = 0; i < map.width; i++) {\n//     for (j = 0; j < map.height; j++) {\n//       let link = getLink(map, i, j);\n//       if (distanceMap != null) {\n//         link.distance = distanceMap[i][j];\n//       } else {\n//         if (costMap != null) {\n//           // totally hackish; refactor\n//           link.distance = maxDistance;\n//         }\n//       }\n//       let cost;\n//       if (isBoundaryXY(costMap, i, j)) {\n//         cost = OBSTRUCTION;\n//       } else {\n//         cost = costMap[i][j];\n//       }\n//       link.cost = cost;\n//       if (cost > 0) {\n//         if (link.distance < maxDistance) {\n//           if (right === null || right.distance > link.distance) {\n//             // left and right are used to traverse the list; if many cells have similar values,\n//             // some time can be saved by not clearing them with each insertion.  this time,\n//             // sadly, we have to start from the front.\n//             left = map.front;\n//             right = map.front.right;\n//           }\n//           while (right !== null && right.distance < link.distance) {\n//             left = right;\n//             right = right.right;\n//           }\n//           link.right = right;\n//           link.left = left;\n//           left.right = link;\n//           if (right != null) right.left = link;\n//           left = link;\n//         } else {\n//           link.right = null;\n//           link.left = null;\n//         }\n//       } else {\n//         link.right = null;\n//         link.left = null;\n//       }\n//     }\n//   }\n// }\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\n// function dijkstraScan(\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   useDiagonals = false\n// ) {\n//   // static makeDijkstraMap map;\n//   const width = distanceMap.length;\n//   const height = distanceMap[0].length;\n//   if (\n//     !DIJKSTRA_MAP ||\n//     DIJKSTRA_MAP.width < width ||\n//     DIJKSTRA_MAP.height < height\n//   ) {\n//     DIJKSTRA_MAP = makeDijkstraMap(width, height);\n//   }\n//   DIJKSTRA_MAP.width = width;\n//   DIJKSTRA_MAP.height = height;\n//   pdsBatchInput(DIJKSTRA_MAP, distanceMap, costMap, NO_PATH, useDiagonals);\n//   batchOutput(DIJKSTRA_MAP, distanceMap);\n// }\n//\n// function populateGenericCostMap(costMap, map) {\n//   let i, j;\n//\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n//       if (map.hasTileFlag(i, j, def.T_OBSTRUCTS_PASSABILITY)\n//           && (!map.hasTileMechFlag(i, j, def.TM_IS_SECRET) || (map.discoveredTileFlags(i, j) & def.T_OBSTRUCTS_PASSABILITY)))\n// \t\t\t{\n// \t\t\t\tcostMap[i][j] = map.hasTileFlag(i, j, def.T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n//       } else if (map.hasTileFlag(i, j, def.T_PATHING_BLOCKER & ~def.T_OBSTRUCTS_PASSABILITY)) {\n// \t\t\t\tcostMap[i][j] = FORBIDDEN;\n//       } else {\n//         costMap[i][j] = 1;\n//       }\n//     }\n//   }\n// }\n//\n// GW.path.populateGenericCostMap = populateGenericCostMap;\n//\n//\n// function baseCostFunction(blockingTerrainFlags, traveler, canUseSecretDoors, i, j) {\n// \tlet cost = 1;\n// \tmonst = GW.MAP.actorAt(i, j);\n// \tconst monstFlags = (monst ? (monst.info ? monst.info.flags : monst.flags) : 0) || 0;\n// \tif ((monstFlags & (def.MONST_IMMUNE_TO_WEAPONS | def.MONST_INVULNERABLE))\n// \t\t\t&& (monstFlags & (def.MONST_IMMOBILE | def.MONST_GETS_TURN_ON_ACTIVATION)))\n// \t{\n// \t\t\t// Always avoid damage-immune stationary monsters.\n// \t\tcost = FORBIDDEN;\n// \t} else if (canUseSecretDoors\n// \t\t\t&& GW.MAP.hasTileMechFlag(i, j, TM_IS_SECRET)\n// \t\t\t&& GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t&& !(GW.MAP.hasDiscoveredFlag(i, j) & T_OBSTRUCTS_PASSABILITY))\n// \t{\n// \t\tcost = 1;\n// \t} else if (GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t\t || (traveler && traveler === GW.PLAYER && !(GW.MAP.hasCellFlag(i, j, (REVEALED | MAGIC_MAPPED)))))\n// \t{\n// \t\tcost = GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n// \t} else if ((traveler && GW.actor.avoidsCell(traveler, i, j)) || GW.MAP.hasTileFlag(i, j, blockingTerrainFlags)) {\n// \t\tcost = FORBIDDEN;\n// \t}\n//\n// \treturn cost;\n// }\n//\n// GW.path.costFn = baseCostFunction;\n// GW.path.simpleCost = baseCostFunction.bind(undefined, 0, null, false);\n// GW.path.costForActor = ((actor) => baseCostFunction.bind(undefined, GW.actor.forbiddenFlags(actor), actor, actor !== GW.PLAYER));\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// function pathingDistance(x1, y1, x2, y2, blockingTerrainFlags, actor) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tconst costFn = baseCostFunction.bind(undefined, blockingTerrainFlags, actor, true);\n// \tcalculateDistances(distanceMap, x2, y2, costFn, true);\n// \tretval = distanceMap[x1][y1];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.path.distanceFromTo = pathingDistance;\n// function monstTravelDistance(monst, x2, y2, blockingTerrainFlags) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tcalculateDistances(distanceMap, x2, y2, blockingTerrainFlags, monst, true, true);\n// \tretval = distanceMap[monst.x][monst.y];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.actor.travelDistance = monstTravelDistance;\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + Utils.DIRS[dir][0];\n        newY = y + Utils.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return Utils.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, true);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//\n// GW.path.from = getMonsterPathOnMap;\n//# sourceMappingURL=path.js.map","import * as Utils from \"./utils\";\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {Function} fn The listener function.\n     * @param {Object} [context=null] The context to invoke the listener with.\n     * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {Function} fn - The function\n     * @param {Object} [context] - The context Object.\n     * @param {Boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"The listener must be a function\");\n    }\n    const listener = new Listener(fn, context || null, once);\n    Utils.addToChain(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    Utils.eachChain(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            Utils.removeFromChain(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            Utils.removeFromChain(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2605',\n            '\\u2606',\n            '\\u2642',\n            '\\u2640',\n            '\\u266a',\n            '\\u266b',\n            '\\u2638',\n            '\\u25b6',\n            '\\u25c0',\n            '\\u2195',\n            '\\u203c',\n            '\\u204b',\n            '\\u262f',\n            '\\u2318',\n            '\\u2616',\n            '\\u2191',\n            '\\u2193',\n            '\\u2192',\n            '\\u2190',\n            '\\u2126',\n            '\\u2194',\n            '\\u25b2',\n            '\\u25bc',\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { cosmetic } from './random';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nimport { make } from '../gw';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.from(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.from(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nmake.mixer = function (base) {\n    return new Mixer(base);\n};\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    while (count > 0) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1);\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    // do not need to hyphenate\n    if (spaceLeftOnLine >= wordWidth)\n        return [text, end];\n    // do not have a strategy for this right now...\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    // not much room left and word fits on next line\n    if (spaceLeftOnLine < 4 && wordWidth <= width) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        return [text, end + 1];\n    }\n    // will not fit on this line + next, but will fit on next 2 lines...\n    // so end this line and reset for placing on next 2 lines.\n    if (spaceLeftOnLine + width <= wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    // one hyphen will work...\n    // if (spaceLeftOnLine + width > wordWidth) {\n    const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n    // }\n    // if (width >= wordWidth) {\n    //     return [text, end];\n    // }\n    // console.log('hyphenate', { text, start, end, width, wordWidth, spaceLeftOnLine });\n    // throw new Error('Did not expect to get here...');\n    // wordWidth >= spaceLeftOnLine + width\n    // text = splice(text, start - 1, 1, \"\\n\");\n    // spaceLeftOnLine = width;\n    // const hyphenAt = Math.min(wordWidth, width - 1);\n    // const w = Utils.advanceChars(text, start, hyphenAt);\n    // text = splice(text, w, 0, \"-\\n\");\n    // return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nimport { make as Make } from '../gw';\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == 'string') {\n            glyph = this.toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== 'number')\n            color = Color.from(color);\n        const mixer = new Mixer();\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const data = this.get(x, y);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(x, y, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.get(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nMake.dataBuffer = function (width, height) {\n    return new DataBuffer(width, height);\n};\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this._data);\n    }\n    // get canvas() { return this._target; }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this._data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this._data);\n        return this;\n    }\n}\nexport function makeBuffer(...args) {\n    if (args.length == 1) {\n        return new Buffer(args[0]);\n    }\n    return new DataBuffer(args[0], args[1]);\n}\n//# sourceMappingURL=buffer.js.map","import * as shaders from './shaders';\nimport { Glyphs } from './glyphs';\nimport { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    // draw(x: number, y: number, glyph: number, fg: number, bg: number) {\n    //     glyph = glyph & 0xff;\n    //     bg = bg & 0xfff;\n    //     fg = fg & 0xfff;\n    //     const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n    //     this._set(x, y, style);\n    //     return this;\n    // }\n    // fill(bg: number): this;\n    // fill(glyph: number, fg: number, bg: number): this;\n    // fill(...args: number[]): this {\n    //     let g = 0,\n    //         fg = 0,\n    //         bg = 0;\n    //     if (args.length == 1) {\n    //         bg = args[0];\n    //     } else if (args.length == 3) {\n    //         [g, fg, bg] = args;\n    //     }\n    //     for (let x = 0; x < this._width; ++x) {\n    //         for (let y = 0; y < this._height; ++y) {\n    //             this.draw(x, y, g, fg, bg);\n    //         }\n    //     }\n    //     return this;\n    // }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this.render());\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     const current = this._data[index];\n    //     if (current !== style) {\n    //         this._data[index] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n    }\n    return canvas;\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import * as Color from '../color';\nimport { make as Make } from '../gw';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = opacity >= 0 ? opacity : 100;\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nMake.sprite = make;\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\n// messages\nconst ARCHIVE = [];\nconst CONFIRMED = [];\nvar ARCHIVE_LINES = 30;\nvar MSG_WIDTH = 80;\nvar NEXT_WRITE_INDEX = 0;\nvar NEEDS_UPDATE = false;\nlet COMBAT_MESSAGE = null;\nexport function needsUpdate(needs) {\n    if (needs) {\n        NEEDS_UPDATE = true;\n    }\n    return NEEDS_UPDATE;\n}\nexport function configure(opts) {\n    if (!opts)\n        opts = {};\n    ARCHIVE_LINES = opts.length || 30;\n    MSG_WIDTH = opts.width || 80;\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        ARCHIVE[i] = null;\n        CONFIRMED[i] = false;\n    }\n}\n////////////////////////////////////\n// Messages\nexport function add(msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    commitCombatMessage();\n    addMessage(msg);\n}\nexport function fromActor(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        add(msg, args);\n    }\n}\nexport function forPlayer(actor, msg, args) {\n    if (!actor.isPlayer())\n        return;\n    add(msg, args);\n}\nexport function addCombat(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        const template = templates[msg];\n        if (template) {\n            msg = template(args);\n        }\n        else if (args) {\n            msg = Text.apply(msg, args);\n        }\n        addCombatMessage(msg);\n    }\n}\n// function messageWithoutCaps(msg, requireAcknowledgment) {\nfunction addMessageLine(msg) {\n    if (!Text.length(msg)) {\n        return;\n    }\n    // Add the message to the archive.\n    ARCHIVE[NEXT_WRITE_INDEX] = msg;\n    CONFIRMED[NEXT_WRITE_INDEX] = false;\n    NEXT_WRITE_INDEX = (NEXT_WRITE_INDEX + 1) % ARCHIVE_LINES;\n}\nfunction addMessage(msg) {\n    var _a;\n    msg = Text.capitalize(msg);\n    // // Implement the American quotation mark/period/comma ordering rule.\n    // for (i=0; text.text[i] && text.text[i+1]; i++) {\n    //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n    //         i += 4;\n    //     } else if (text.text[i] === '\"'\n    //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n    // \t\t{\n    // \t\t\tconst replace = text.text[i+1] + '\"';\n    // \t\t\ttext.spliceRaw(i, 2, replace);\n    //     }\n    // }\n    const lines = Text.splitIntoLines(msg, MSG_WIDTH);\n    if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n        lines.reverse();\n    }\n    lines.forEach((l) => addMessageLine(l));\n    // display the message:\n    NEEDS_UPDATE = true;\n    // if (GAME.playbackMode) {\n    // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n    // }\n}\nfunction addCombatMessage(msg) {\n    if (!COMBAT_MESSAGE) {\n        COMBAT_MESSAGE = msg;\n    }\n    else {\n        COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n    }\n    NEEDS_UPDATE = true;\n}\nfunction commitCombatMessage() {\n    if (!COMBAT_MESSAGE)\n        return false;\n    addMessage(COMBAT_MESSAGE + '.');\n    COMBAT_MESSAGE = null;\n    return true;\n}\nexport function confirmAll() {\n    for (let i = 0; i < CONFIRMED.length; i++) {\n        CONFIRMED[i] = true;\n    }\n    NEEDS_UPDATE = true;\n}\nexport function forEach(fn) {\n    commitCombatMessage();\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        const n = (ARCHIVE_LINES - i + NEXT_WRITE_INDEX - 1) % ARCHIVE_LINES;\n        const msg = ARCHIVE[n];\n        if (!msg)\n            return;\n        if (fn(msg, CONFIRMED[n], i) === false)\n            return;\n    }\n}\n//# sourceMappingURL=message.js.map","import { fl as Fl, from as fromFlag } from '../flag';\nimport { data as DATA } from '../gw';\nimport * as Msg from '../message';\nimport * as Events from '../events';\nimport * as Grid from '../grid';\nimport { random } from '../random';\n///////////////////////////////////////////////////////\n// TILE EVENT\nexport var Flags;\n(function (Flags) {\n    // E_ALWAYS_FIRE = Fl(10), // Fire even if the cell is marked as having fired this turn\n    Flags[Flags[\"E_NEXT_ALWAYS\"] = Fl(0)] = \"E_NEXT_ALWAYS\";\n    Flags[Flags[\"E_NEXT_EVERYWHERE\"] = Fl(1)] = \"E_NEXT_EVERYWHERE\";\n    // E_NO_REDRAW_CELL = Fl(2),\n    Flags[Flags[\"E_TREAT_AS_BLOCKING\"] = Fl(3)] = \"E_TREAT_AS_BLOCKING\";\n    Flags[Flags[\"E_PERMIT_BLOCKING\"] = Fl(4)] = \"E_PERMIT_BLOCKING\";\n    Flags[Flags[\"E_ABORT_IF_BLOCKS_MAP\"] = Fl(5)] = \"E_ABORT_IF_BLOCKS_MAP\";\n    Flags[Flags[\"E_BLOCKED_BY_ITEMS\"] = Fl(6)] = \"E_BLOCKED_BY_ITEMS\";\n    Flags[Flags[\"E_BLOCKED_BY_ACTORS\"] = Fl(7)] = \"E_BLOCKED_BY_ACTORS\";\n    Flags[Flags[\"E_BLOCKED_BY_OTHER_LAYERS\"] = Fl(8)] = \"E_BLOCKED_BY_OTHER_LAYERS\";\n    Flags[Flags[\"E_SUPERPRIORITY\"] = Fl(9)] = \"E_SUPERPRIORITY\";\n    Flags[Flags[\"E_NO_MARK_FIRED\"] = Fl(11)] = \"E_NO_MARK_FIRED\";\n    // MUST_REPLACE_LAYER\n    // NEEDS_EMPTY_LAYER\n    Flags[Flags[\"E_PROTECTED\"] = Fl(12)] = \"E_PROTECTED\";\n    Flags[Flags[\"E_SPREAD_CIRCLE\"] = Fl(13)] = \"E_SPREAD_CIRCLE\";\n    Flags[Flags[\"E_SPREAD_LINE\"] = Fl(14)] = \"E_SPREAD_LINE\";\n    // E_NULL_SURFACE = Fl(15), // Clear the surface layer\n    // E_NULL_LIQUID = Fl(16), // Clear liquid layer\n    // E_NULL_GAS = Fl(17), // Clear gas layer\n    Flags[Flags[\"E_EVACUATE_CREATURES\"] = Fl(18)] = \"E_EVACUATE_CREATURES\";\n    Flags[Flags[\"E_EVACUATE_ITEMS\"] = Fl(19)] = \"E_EVACUATE_ITEMS\";\n    Flags[Flags[\"E_BUILD_IN_WALLS\"] = Fl(20)] = \"E_BUILD_IN_WALLS\";\n    Flags[Flags[\"E_MUST_TOUCH_WALLS\"] = Fl(21)] = \"E_MUST_TOUCH_WALLS\";\n    Flags[Flags[\"E_NO_TOUCH_WALLS\"] = Fl(22)] = \"E_NO_TOUCH_WALLS\";\n    Flags[Flags[\"E_FIRED\"] = Fl(23)] = \"E_FIRED\";\n    Flags[Flags[\"E_CLEAR_GROUND\"] = Fl(17)] = \"E_CLEAR_GROUND\";\n    Flags[Flags[\"E_CLEAR_SURFACE\"] = Fl(24)] = \"E_CLEAR_SURFACE\";\n    Flags[Flags[\"E_CLEAR_LIQUID\"] = Fl(25)] = \"E_CLEAR_LIQUID\";\n    Flags[Flags[\"E_CLEAR_GAS\"] = Fl(26)] = \"E_CLEAR_GAS\";\n    Flags[Flags[\"E_CLEAR_CELL\"] = Flags.E_CLEAR_GROUND |\n        Flags.E_CLEAR_SURFACE |\n        Flags.E_CLEAR_LIQUID |\n        Flags.E_CLEAR_GAS] = \"E_CLEAR_CELL\";\n    Flags[Flags[\"E_ONLY_IF_EMPTY\"] = Flags.E_BLOCKED_BY_ITEMS | Flags.E_BLOCKED_BY_ACTORS] = \"E_ONLY_IF_EMPTY\";\n    // E_NULLIFY_CELL = E_NULL_SURFACE | E_NULL_LIQUID | E_NULL_GAS,\n    // These should be effect types\n    Flags[Flags[\"E_ACTIVATE_DORMANT_MONSTER\"] = Fl(27)] = \"E_ACTIVATE_DORMANT_MONSTER\";\n    Flags[Flags[\"E_AGGRAVATES_MONSTERS\"] = Fl(28)] = \"E_AGGRAVATES_MONSTERS\";\n    Flags[Flags[\"E_RESURRECT_ALLY\"] = Fl(29)] = \"E_RESURRECT_ALLY\";\n    Flags[Flags[\"E_EMIT_EVENT\"] = Fl(30)] = \"E_EMIT_EVENT\";\n})(Flags || (Flags = {}));\nexport async function fire(effect, map, x, y, ctx_ = {}) {\n    if (!effect)\n        return false;\n    if (typeof effect === 'string') {\n        const name = effect;\n        effect = from(name);\n        if (!effect)\n            throw new Error('Failed to find effect: ' + name);\n    }\n    const ctx = ctx_;\n    if (!ctx.force && effect.chance && !random.chance(effect.chance, 10000))\n        return false;\n    const grid = (ctx.grid = Grid.alloc(map.width, map.height));\n    let didSomething = true;\n    const handlers = Object.values(effectTypes);\n    for (let h of handlers) {\n        if (await h.fire(effect, map, x, y, ctx)) {\n            didSomething = true;\n        }\n    }\n    // bookkeeping\n    if (didSomething &&\n        map.isVisible(x, y) &&\n        !(effect.flags & Flags.E_NO_MARK_FIRED)) {\n        effect.flags |= Flags.E_FIRED;\n    }\n    // do the next effect - if applicable\n    if (effect.next &&\n        (didSomething || effect.flags & Flags.E_NEXT_ALWAYS) &&\n        !DATA.gameHasEnded) {\n        const nextInfo = typeof effect.next === 'string' ? from(effect.next) : effect.next;\n        if (effect.flags & Flags.E_NEXT_EVERYWHERE) {\n            await grid.forEachAsync(async (v, i, j) => {\n                if (!v)\n                    return;\n                // @ts-ignore\n                await fire(nextInfo, map, i, j, ctx);\n            });\n        }\n        else {\n            await fire(nextInfo, map, x, y, ctx);\n        }\n    }\n    Grid.free(grid);\n    return didSomething;\n}\n// resetMessageDisplayed\nexport function reset(effect) {\n    effect.flags &= ~Flags.E_FIRED;\n}\nexport function resetAll() {\n    Object.values(effects).forEach((e) => reset(e));\n}\nexport const effects = {};\nexport function make(opts) {\n    var _a;\n    if (!opts)\n        throw new Error('opts required to make effect.');\n    if (typeof opts === 'string') {\n        throw new Error('Cannot make effect from string: ' + opts);\n    }\n    if (typeof opts === 'function') {\n        opts = { fn: opts };\n    }\n    // now make base effect stuff\n    const info = {\n        flags: fromFlag(Flags, opts.flags),\n        chance: (_a = opts.chance) !== null && _a !== void 0 ? _a : 0,\n        next: null,\n        id: opts.id || 'n/a',\n    };\n    if (opts.next) {\n        if (typeof opts.next === 'string') {\n            info.next = opts.next;\n        }\n        else {\n            info.next = make(opts.next);\n        }\n    }\n    // and all the handlers\n    Object.values(effectTypes).forEach((v) => v.make(opts, info));\n    return info;\n}\nexport function from(opts) {\n    if (!opts)\n        throw new Error('Cannot make effect from null | undefined');\n    if (typeof opts === 'string') {\n        const effect = effects[opts];\n        if (effect)\n            return effect;\n        throw new Error('Unknown effect - ' + opts);\n    }\n    return make(opts);\n}\nexport function install(id, config) {\n    const effect = make(config);\n    effects[id] = effect;\n    effect.id = id;\n    return effect;\n}\nexport function installAll(effects) {\n    Object.entries(effects).forEach(([id, config]) => {\n        install(id, config);\n    });\n}\nexport const effectTypes = {};\nexport function installType(id, effectType) {\n    effectTypes[id] = effectType;\n}\n//////////////////////////////////////////////\n// FN\nclass FnEffect {\n    make(src, dest) {\n        if (!src.fn)\n            return true;\n        if (typeof src.fn !== 'function') {\n            throw new Error('fn effects must be functions.');\n        }\n        dest.fn = src.fn;\n        return true;\n    }\n    async fire(config, map, x, y, ctx) {\n        if (config.fn) {\n            return await config.fn(config, map, x, y, ctx);\n        }\n        return false;\n    }\n}\ninstallType('fn', new FnEffect());\n//////////////////////////////////////////////\n// EMIT\nclass EmitEffect {\n    make(src, dest) {\n        if (!src.emit)\n            return true;\n        if (typeof src.emit !== 'string') {\n            throw new Error('emit effects must be string name to emit: { emit: \"EVENT\" }');\n        }\n        dest.emit = src.emit;\n        return true;\n    }\n    async fire(config, _map, x, y, ctx) {\n        if (config.emit) {\n            return await Events.emit(config.emit, x, y, ctx);\n        }\n        return false;\n    }\n}\ninstallType('emit', new EmitEffect());\n//////////////////////////////////////////////\n// MESSAGE\nclass MessageEffect {\n    make(src, dest) {\n        if (!src.message)\n            return true;\n        if (typeof src.message !== 'string') {\n            throw new Error('Emit must be configured with name of event to emit');\n        }\n        dest.message = src.message;\n        return true;\n    }\n    async fire(config, map, x, y, ctx) {\n        if (!config.message)\n            return false;\n        const fired = config.flags & Flags.E_FIRED ? true : false;\n        ctx.actor = ctx.actor || (map === null || map === void 0 ? void 0 : map.actorAt(x, y));\n        ctx.item = ctx.item || (map === null || map === void 0 ? void 0 : map.itemAt(x, y));\n        if (config.message &&\n            config.message.length &&\n            !fired &&\n            map.isVisible(x, y)) {\n            Msg.add(config.message, ctx);\n            return true;\n        }\n        return false;\n    }\n}\ninstallType('message', new MessageEffect());\n//# sourceMappingURL=index.js.map","import * as UTILS from './utils';\nimport * as GRID from './grid';\nimport { random } from './random';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new UTILS.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = random.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < UTILS.DIRS.length; dir++) {\n                    newX = i + UTILS.DIRS[dir][0];\n                    newY = j + UTILS.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import { fl as Fl } from '../flag';\nexport var GameObject;\n(function (GameObject) {\n    // L_DYNAMIC = Fl(0), // for movable things like actors or items\n    GameObject[GameObject[\"L_SUPERPRIORITY\"] = Fl(1)] = \"L_SUPERPRIORITY\";\n    GameObject[GameObject[\"L_SECRETLY_PASSABLE\"] = Fl(2)] = \"L_SECRETLY_PASSABLE\";\n    GameObject[GameObject[\"L_BLOCKS_MOVE\"] = Fl(3)] = \"L_BLOCKS_MOVE\";\n    GameObject[GameObject[\"L_BLOCKS_VISION\"] = Fl(4)] = \"L_BLOCKS_VISION\";\n    GameObject[GameObject[\"L_BLOCKS_SURFACE\"] = Fl(6)] = \"L_BLOCKS_SURFACE\";\n    GameObject[GameObject[\"L_BLOCKS_LIQUID\"] = Fl(8)] = \"L_BLOCKS_LIQUID\";\n    GameObject[GameObject[\"L_BLOCKS_GAS\"] = Fl(7)] = \"L_BLOCKS_GAS\";\n    GameObject[GameObject[\"L_BLOCKS_ITEMS\"] = Fl(5)] = \"L_BLOCKS_ITEMS\";\n    GameObject[GameObject[\"L_BLOCKS_ACTORS\"] = Fl(11)] = \"L_BLOCKS_ACTORS\";\n    GameObject[GameObject[\"L_BLOCKS_EFFECTS\"] = Fl(9)] = \"L_BLOCKS_EFFECTS\";\n    GameObject[GameObject[\"L_BLOCKS_DIAGONAL\"] = Fl(10)] = \"L_BLOCKS_DIAGONAL\";\n    GameObject[GameObject[\"L_INTERRUPT_WHEN_SEEN\"] = Fl(11)] = \"L_INTERRUPT_WHEN_SEEN\";\n    GameObject[GameObject[\"L_LIST_IN_SIDEBAR\"] = Fl(12)] = \"L_LIST_IN_SIDEBAR\";\n    GameObject[GameObject[\"L_VISUALLY_DISTINCT\"] = Fl(13)] = \"L_VISUALLY_DISTINCT\";\n    GameObject[GameObject[\"L_BRIGHT_MEMORY\"] = Fl(14)] = \"L_BRIGHT_MEMORY\";\n    GameObject[GameObject[\"L_INVERT_WHEN_HIGHLIGHTED\"] = Fl(15)] = \"L_INVERT_WHEN_HIGHLIGHTED\";\n    GameObject[GameObject[\"L_BLOCKED_BY_STAIRS\"] = GameObject.L_BLOCKS_ITEMS |\n        GameObject.L_BLOCKS_SURFACE |\n        GameObject.L_BLOCKS_GAS |\n        GameObject.L_BLOCKS_LIQUID |\n        GameObject.L_BLOCKS_EFFECTS |\n        GameObject.L_BLOCKS_ACTORS] = \"L_BLOCKED_BY_STAIRS\";\n    GameObject[GameObject[\"L_BLOCKS_SCENT\"] = GameObject.L_BLOCKS_MOVE | GameObject.L_BLOCKS_VISION] = \"L_BLOCKS_SCENT\";\n    GameObject[GameObject[\"L_DIVIDES_LEVEL\"] = GameObject.L_BLOCKS_MOVE] = \"L_DIVIDES_LEVEL\";\n    GameObject[GameObject[\"L_WAYPOINT_BLOCKER\"] = GameObject.L_BLOCKS_MOVE] = \"L_WAYPOINT_BLOCKER\";\n    GameObject[GameObject[\"L_IS_WALL\"] = GameObject.L_BLOCKS_MOVE |\n        GameObject.L_BLOCKS_VISION |\n        GameObject.L_BLOCKS_LIQUID |\n        GameObject.L_BLOCKS_GAS |\n        GameObject.L_BLOCKS_EFFECTS |\n        GameObject.L_BLOCKS_DIAGONAL] = \"L_IS_WALL\";\n    GameObject[GameObject[\"L_BLOCKS_EVERYTHING\"] = GameObject.L_IS_WALL |\n        GameObject.L_BLOCKS_ITEMS |\n        GameObject.L_BLOCKS_ACTORS |\n        GameObject.L_BLOCKS_SURFACE] = \"L_BLOCKS_EVERYTHING\";\n})(GameObject || (GameObject = {}));\n//# sourceMappingURL=flags.js.map","import { GameObject } from './flags';\nexport const flags = { GameObject };\n//# sourceMappingURL=index.js.map","import * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = { INTENSITY_DARK: 20 }); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, range, fadeTo, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color) || null; /* color */\n        this.radius = Range.make(range || 1);\n        this.fadeTo = fadeTo || 0;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(map, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!map)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(map.width, map.height, 0);\n        map.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (Utils.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS[k] * lightMultiplier) / 100);\n            }\n            map.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    return Math.max(light[0], light[1], light[2]);\n}\nexport function isDarkLight(light, threshold) {\n    var _a;\n    threshold = threshold !== null && threshold !== void 0 ? threshold : (_a = CONFIG.light) === null || _a === void 0 ? void 0 : _a.INTENSITY_DARK;\n    return intensity(light) <= (threshold || 20);\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    if (source)\n        source.id = id;\n    return source;\n}\nexport function installAll(config = {}) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { fl as Fl } from '../flag';\n///////////////////////////////////////////////////////\n// CELL\nexport var Cell;\n(function (Cell) {\n    Cell[Cell[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    Cell[Cell[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    Cell[Cell[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    Cell[Cell[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    Cell[Cell[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    Cell[Cell[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    Cell[Cell[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    Cell[Cell[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    Cell[Cell[\"MONSTER_DETECTED\"] = Fl(8)] = \"MONSTER_DETECTED\";\n    Cell[Cell[\"WAS_MONSTER_DETECTED\"] = Fl(9)] = \"WAS_MONSTER_DETECTED\";\n    Cell[Cell[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    Cell[Cell[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    Cell[Cell[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    Cell[Cell[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    Cell[Cell[\"NEEDS_REDRAW\"] = Fl(14)] = \"NEEDS_REDRAW\";\n    Cell[Cell[\"CELL_CHANGED\"] = Fl(15)] = \"CELL_CHANGED\";\n    // These are to help memory\n    Cell[Cell[\"HAS_SURFACE\"] = Fl(16)] = \"HAS_SURFACE\";\n    Cell[Cell[\"HAS_LIQUID\"] = Fl(17)] = \"HAS_LIQUID\";\n    Cell[Cell[\"HAS_GAS\"] = Fl(18)] = \"HAS_GAS\";\n    Cell[Cell[\"HAS_PLAYER\"] = Fl(19)] = \"HAS_PLAYER\";\n    Cell[Cell[\"HAS_ACTOR\"] = Fl(20)] = \"HAS_ACTOR\";\n    Cell[Cell[\"HAS_DORMANT_MONSTER\"] = Fl(21)] = \"HAS_DORMANT_MONSTER\";\n    Cell[Cell[\"HAS_ITEM\"] = Fl(22)] = \"HAS_ITEM\";\n    Cell[Cell[\"IS_IN_PATH\"] = Fl(23)] = \"IS_IN_PATH\";\n    Cell[Cell[\"IS_CURSOR\"] = Fl(24)] = \"IS_CURSOR\";\n    Cell[Cell[\"STABLE_MEMORY\"] = Fl(25)] = \"STABLE_MEMORY\";\n    Cell[Cell[\"LIGHT_CHANGED\"] = Fl(26)] = \"LIGHT_CHANGED\";\n    Cell[Cell[\"CELL_LIT\"] = Fl(27)] = \"CELL_LIT\";\n    Cell[Cell[\"IS_IN_SHADOW\"] = Fl(28)] = \"IS_IN_SHADOW\";\n    Cell[Cell[\"CELL_DARK\"] = Fl(29)] = \"CELL_DARK\";\n    Cell[Cell[\"COLORS_DANCE\"] = Fl(30)] = \"COLORS_DANCE\";\n    Cell[Cell[\"PERMANENT_CELL_FLAGS\"] = Cell.REVEALED |\n        Cell.MAGIC_MAPPED |\n        Cell.ITEM_DETECTED |\n        Cell.HAS_ITEM |\n        Cell.HAS_DORMANT_MONSTER |\n        Cell.STABLE_MEMORY] = \"PERMANENT_CELL_FLAGS\";\n    Cell[Cell[\"ANY_KIND_OF_VISIBLE\"] = Cell.VISIBLE | Cell.CLAIRVOYANT_VISIBLE | Cell.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    Cell[Cell[\"HAS_ANY_ACTOR\"] = Cell.HAS_PLAYER | Cell.HAS_ACTOR] = \"HAS_ANY_ACTOR\";\n    Cell[Cell[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = Cell.VISIBLE |\n        Cell.WAS_VISIBLE |\n        Cell.CLAIRVOYANT_VISIBLE |\n        Cell.WAS_CLAIRVOYANT_VISIBLE |\n        Cell.TELEPATHIC_VISIBLE |\n        Cell.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    Cell[Cell[\"WAS_ANY_KIND_OF_VISIBLE\"] = Cell.WAS_VISIBLE |\n        Cell.WAS_CLAIRVOYANT_VISIBLE |\n        Cell.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    Cell[Cell[\"CELL_DEFAULT\"] = Cell.VISIBLE | Cell.IN_FOV | Cell.NEEDS_REDRAW | Cell.CELL_CHANGED] = \"CELL_DEFAULT\";\n})(Cell || (Cell = {}));\n///////////////////////////////////////////////////////\n// CELL MECH\nexport var CellMech;\n(function (CellMech) {\n    CellMech[CellMech[\"SEARCHED_FROM_HERE\"] = Fl(0)] = \"SEARCHED_FROM_HERE\";\n    CellMech[CellMech[\"PRESSURE_PLATE_DEPRESSED\"] = Fl(1)] = \"PRESSURE_PLATE_DEPRESSED\";\n    CellMech[CellMech[\"KNOWN_TO_BE_TRAP_FREE\"] = Fl(2)] = \"KNOWN_TO_BE_TRAP_FREE\";\n    CellMech[CellMech[\"CAUGHT_FIRE_THIS_TURN\"] = Fl(4)] = \"CAUGHT_FIRE_THIS_TURN\";\n    CellMech[CellMech[\"EVENT_FIRED_THIS_TURN\"] = Fl(5)] = \"EVENT_FIRED_THIS_TURN\";\n    CellMech[CellMech[\"EVENT_PROTECTED\"] = Fl(6)] = \"EVENT_PROTECTED\";\n    CellMech[CellMech[\"IS_IN_LOOP\"] = Fl(10)] = \"IS_IN_LOOP\";\n    CellMech[CellMech[\"IS_CHOKEPOINT\"] = Fl(11)] = \"IS_CHOKEPOINT\";\n    CellMech[CellMech[\"IS_GATE_SITE\"] = Fl(12)] = \"IS_GATE_SITE\";\n    CellMech[CellMech[\"IS_IN_ROOM_MACHINE\"] = Fl(13)] = \"IS_IN_ROOM_MACHINE\";\n    CellMech[CellMech[\"IS_IN_AREA_MACHINE\"] = Fl(14)] = \"IS_IN_AREA_MACHINE\";\n    CellMech[CellMech[\"IS_POWERED\"] = Fl(15)] = \"IS_POWERED\";\n    CellMech[CellMech[\"IMPREGNABLE\"] = Fl(20)] = \"IMPREGNABLE\";\n    CellMech[CellMech[\"DARKENED\"] = Fl(19)] = \"DARKENED\";\n    CellMech[CellMech[\"IS_IN_MACHINE\"] = CellMech.IS_IN_ROOM_MACHINE | CellMech.IS_IN_AREA_MACHINE] = \"IS_IN_MACHINE\";\n    CellMech[CellMech[\"PERMANENT_MECH_FLAGS\"] = CellMech.SEARCHED_FROM_HERE |\n        CellMech.PRESSURE_PLATE_DEPRESSED |\n        CellMech.KNOWN_TO_BE_TRAP_FREE |\n        CellMech.IS_IN_LOOP |\n        CellMech.IS_CHOKEPOINT |\n        CellMech.IS_GATE_SITE |\n        CellMech.IS_IN_MACHINE |\n        CellMech.IMPREGNABLE] = \"PERMANENT_MECH_FLAGS\";\n})(CellMech || (CellMech = {}));\n///////////////////////////////////////////////////////\n// MAP\nexport var Map;\n(function (Map) {\n    Map[Map[\"MAP_CHANGED\"] = Fl(0)] = \"MAP_CHANGED\";\n    Map[Map[\"MAP_STABLE_GLOW_LIGHTS\"] = Fl(1)] = \"MAP_STABLE_GLOW_LIGHTS\";\n    Map[Map[\"MAP_STABLE_LIGHTS\"] = Fl(2)] = \"MAP_STABLE_LIGHTS\";\n    Map[Map[\"MAP_ALWAYS_LIT\"] = Fl(3)] = \"MAP_ALWAYS_LIT\";\n    Map[Map[\"MAP_SAW_WELCOME\"] = Fl(4)] = \"MAP_SAW_WELCOME\";\n    Map[Map[\"MAP_NO_LIQUID\"] = Fl(5)] = \"MAP_NO_LIQUID\";\n    Map[Map[\"MAP_NO_GAS\"] = Fl(6)] = \"MAP_NO_GAS\";\n    Map[Map[\"MAP_CALC_FOV\"] = Fl(7)] = \"MAP_CALC_FOV\";\n    Map[Map[\"MAP_FOV_CHANGED\"] = Fl(8)] = \"MAP_FOV_CHANGED\";\n    Map[Map[\"MAP_DANCES\"] = Fl(9)] = \"MAP_DANCES\";\n    Map[Map[\"MAP_DEFAULT\"] = Map.MAP_STABLE_LIGHTS | Map.MAP_STABLE_GLOW_LIGHTS] = \"MAP_DEFAULT\";\n})(Map || (Map = {}));\n//# sourceMappingURL=flags.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as Utils from '../utils';\nimport { Cell as CellFlags } from '../map/flags';\nimport { Color } from '../color';\nexport class LightSystem {\n    constructor(map) {\n        this.staticLights = null;\n        this.ambient = [100, 100, 100];\n        this.site = map;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n    }\n    setAmbient(light) {\n        if (light instanceof Color) {\n            light = light.toLight();\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.site.glowLightChanged = true;\n        this.site.anyLightChanged = true;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.site.glowLightChanged = true;\n        this.site.anyLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.site.glowLightChanged = true;\n        this.site.anyLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        Utils.eachChain(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        if (!force && !this.site.anyLightChanged)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.site.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.site.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT && PLAYERS_LIGHT.radius) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.site.anyLightChanged = false;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.site.setCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        });\n    }\n    finishLightUpdate() {\n        Utils.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            this.site.clearCellFlag(x, y, CellFlags.CELL_LIT | CellFlags.CELL_DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.site.setCellFlag(x, y, CellFlags.LIGHT_CHANGED);\n            }\n            if (Light.isDarkLight(light)) {\n                this.site.setCellFlag(x, y, CellFlags.CELL_DARK);\n            }\n            else if (!this.site.hasCellFlag(x, y, CellFlags.IS_IN_SHADOW)) {\n                this.site.setCellFlag(x, y, CellFlags.CELL_LIT);\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const map = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && map.hasActor(x, y))\n                    return false;\n                return map.blocksVision(x, y);\n            },\n            setVisible: cb,\n            hasXY(x, y) {\n                return map.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows) {\n            this.site.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        }\n    }\n}\n//# sourceMappingURL=system.js.map","import { Cell as Flags } from './flags';\nimport { GameObject as ObjectFlags } from '../gameObject/flags';\nexport class Cell {\n    constructor() {\n        this.flags = { cell: 0, cellMech: 0, object: 0 };\n    }\n    isVisible() {\n        return !!(this.flags.cell & Flags.ANY_KIND_OF_VISIBLE);\n    }\n    hasActor() {\n        return !!(this.flags.cell & Flags.HAS_ANY_ACTOR);\n    }\n    blocksVision() {\n        return !!(this.flags.object & ObjectFlags.L_BLOCKS_VISION);\n    }\n    setCellFlag(flag) {\n        this.flags.cell |= flag;\n    }\n    clearCellFlag(flag) {\n        this.flags.cell &= ~flag;\n    }\n}\n//# sourceMappingURL=cell.js.map","import { Cell, CellMech, Map } from './flags';\nexport const flags = { Cell, CellMech, Map };\nexport * from './cell';\nexport * from './map';\n//# sourceMappingURL=index.js.map","import * as Grid from '../grid';\nimport { LightSystem, } from '../light';\nimport { Map as Flags } from './flags';\nimport { Cell } from './cell';\nexport class Map {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.flags = { map: 0 };\n        this.cells = Grid.make(width, height, () => new Cell());\n        this.light = new LightSystem(this);\n        this.ambientLight = [100, 100, 100];\n    }\n    hasXY(x, y) {\n        return this.cells.hasXY(x, y);\n    }\n    cell(x, y) {\n        return this.cells[x][y];\n    }\n    // Information\n    isVisible(x, y) {\n        return this.cell(x, y).isVisible();\n    }\n    hasActor(x, y) {\n        return this.cell(x, y).hasActor();\n    }\n    blocksVision(x, y) {\n        return this.cell(x, y).blocksVision();\n    }\n    // flags\n    setCellFlag(x, y, flag) {\n        this.cell(x, y).setCellFlag(flag);\n    }\n    clearCellFlag(x, y, flag) {\n        this.cell(x, y).clearCellFlag(flag);\n    }\n    hasCellFlag(x, y, flag) {\n        return !!(this.cell(x, y).flags.cell & flag);\n    }\n    // LightSystemSite\n    get anyLightChanged() {\n        return !(this.flags.map & Flags.MAP_STABLE_LIGHTS);\n    }\n    set anyLightChanged(value) {\n        if (value) {\n            this.flags.map &= ~Flags.MAP_STABLE_LIGHTS;\n        }\n        else {\n            this.flags.map |= Flags.MAP_STABLE_LIGHTS;\n        }\n    }\n    get glowLightChanged() {\n        return !(this.flags.map & Flags.MAP_STABLE_GLOW_LIGHTS);\n    }\n    set glowLightChanged(value) {\n        if (value) {\n            this.flags.map &= ~Flags.MAP_STABLE_GLOW_LIGHTS;\n        }\n        else {\n            this.flags.map |= Flags.MAP_STABLE_GLOW_LIGHTS;\n        }\n    }\n    eachGlowLight(_cb) { }\n    eachDynamicLight(_cb) { }\n}\n//# sourceMappingURL=map.js.map"],"names":["DIRS","CLOCK_DIRS","NOOP","TRUE","clamp","v","min","max","x","src","y","Bounds","[object Object]","w","h","this","width","height","left","right","top","bottom","args","eachNeighbor","fn","only4dirs","i","dir","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","assignField","dest","key","current","updated","copy","clear","nullify","clone","Array","isArray","slice","length","setDefaults","obj","def","custom","Object","keys","forEach","origKey","defValue","parts","split","shift","undefined","ERROR","message","Error","WARN","console","warn","first","find","eachChain","item","index","next","addToChain","name","entry","removeFromChain","root","prev","FP_FACTOR","forLine","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","forCircle","radius","j","forRect","arguments","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","a","b","pct","dx","dy","matchFn","maxIndex","d","x0","y0","findIndex","result","push","diff","steps","c","last","step","currentXValue","maxXValue","sin","PI","omit","map","t","trim","includes","field","val","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","some","av","arr","reduce","count","chain","line","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","Random","_fn","ROT","RNG","setSeed","getUniform","value","Number","MAX_SAFE_INTEGER","number","lo","hi","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","fromIndex","toIndex","r","buf","n","shuffle","percent","outOf","clumps","numSides","locationCount","Utils.forRect","k","candidateLocs","loc","random","cosmetic","Range","lower","upper","rng","_rng","clumped","other","make","config","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","from","fl","N","u","startsWith","substring","flagObj","inverse","out","join","Utils.DIRS","makeArray","l","fill","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","_width","_height","hasXY","Utils.eachNeighbor","sequence","constructor","update","Utils.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","dumpRect","Utils.clamp","output","padStart","log","bestLoc","bestDistance","dist","Utils.distanceBetween","chance","get","matchingXY","matchingXYNear","Utils.arcCount","GRID_CACHE","NumGrid","bind","grid","pop","_resize","indexOf","col","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","Utils.Bounds","matchValue","numberOfCells","fillFn","floodFill","alloc","free","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","commands","KEYMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","async","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","makeTickEvent","dt","shiftKey","ctrlKey","altKey","metaKey","makeKeyEvent","e","toLowerCase","toUpperCase","clientX","clientY","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","unshift","ms","Utils.TRUE","done","elapsed","Promise","resolve","keymap","interval","setInterval","pushEvent","nextEvent","draw","clearInterval","setTimeout","nextKeyOrClick","pause","loop","id","clearEvents","preventDefault","FOV","strategy","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","Utils.calcRadius","_setVisible","setVisible","_hasXY","_debug","debug","Utils.NOOP","maxRadius","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","TypeError","listener","Utils.addToChain","removeListener","success","Utils.eachChain","matches","Utils.removeFromChain","clearEvent","emit","apply","p","level","funcs","levels","frequency","start","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","textAlign","textBaseline","cx","cy","save","beginPath","rect","clip","fillText","restore","toColorInt","g","base256","round","colors","Color","Int16Array","redRand","greenRand","blueRand","dances","set","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","_changed","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","assign","separate","A","hDiff","sort","mix","WHITE","BLACK","install","info","installSpread","lighten","darken","NONE","temp","Mixer","Utils.first","fg","Color.from","bg","equals","opacity","color","multiply","add","Color.separate","bake","mixer","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","capitalize","test","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","remove","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","_data","Uint32Array","orig","style","toGlyph","sprite","Text.eachChar","Text.wordWrap","xi","strength","drawSprite","header","dataBuffer","Buffer","canvas","_target","copyTo","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","render","_requestRender","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","Color.make","templates","msg","Text.compile","GW.config","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","Text.apply","commitCombatMessage","addMessage","_a","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","Text.length","addMessageLine","Flags","needs","actor","isPlayer","isVisible","addCombatMessage","reset","effect","flags","E_FIRED","Fl","E_CLEAR_GROUND","E_CLEAR_SURFACE","E_CLEAR_LIQUID","E_CLEAR_GAS","E_BLOCKED_BY_ITEMS","E_BLOCKED_BY_ACTORS","effects","fromFlag","effectTypes","installType","effectType","Events.emit","fired","actorAt","itemAt","Msg.add","fire","ctx_","force","Grid.alloc","didSomething","handlers","E_NO_MARK_FIRED","E_NEXT_ALWAYS","DATA","gameHasEnded","nextInfo","E_NEXT_EVERYWHERE","forEachAsync","Grid.free","Blob","rounds","minWidth","minHeight","maxWidth","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","UTILS.Bounds","GRID.alloc","tries","_cellularAutomataRound","valueBounds","GRID.free","nbCount","buffer2","UTILS.DIRS","GameObject","carve","L_BLOCKS_ITEMS","L_BLOCKS_SURFACE","L_BLOCKS_GAS","L_BLOCKS_LIQUID","L_BLOCKS_EFFECTS","L_BLOCKS_ACTORS","L_BLOCKS_MOVE","L_BLOCKS_VISION","L_BLOCKS_DIAGONAL","L_IS_WALL","CONFIG","light","INTENSITY_DARK","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","calcFov","lightValue","addCellLight","threshold","cached","lights","Range.from","Utils.ERROR","paint","Cell","CellMech","Map","REVEALED","MAGIC_MAPPED","ITEM_DETECTED","HAS_ITEM","HAS_DORMANT_MONSTER","STABLE_MEMORY","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","HAS_PLAYER","HAS_ACTOR","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","IN_FOV","NEEDS_REDRAW","CELL_CHANGED","IS_IN_ROOM_MACHINE","IS_IN_AREA_MACHINE","SEARCHED_FROM_HERE","PRESSURE_PLATE_DEPRESSED","KNOWN_TO_BE_TRAP_FREE","IS_IN_LOOP","IS_CHOKEPOINT","IS_GATE_SITE","IS_IN_MACHINE","IMPREGNABLE","MAP_STABLE_LIGHTS","MAP_STABLE_GLOW_LIGHTS","LightSystem","staticLights","ambient","site","Grid.make","glowLight","oldLight","toLight","glowLightChanged","anyLightChanged","Light.from","eachGlowLight","eachDynamicLight","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","finishLightUpdate","PLAYER","player","PLAYERS_LIGHT","Light.lights","setCellFlag","CellFlags","IS_IN_SHADOW","clearCellFlag","CELL_LIT","CELL_DARK","LIGHT_CHANGED","Light.isDarkLight","hasCellFlag","cb","hasActor","blocksVision","calculate","cell","cellMech","object","ANY_KIND_OF_VISIBLE","HAS_ANY_ACTOR","ObjectFlags","flag","cells","ambientLight","_cb"],"mappings":"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"}