{"version":3,"file":"gw-utils.min.js","sources":["../js/utils.js","../js/xy.js","../js/list.js","../js/object.js","../js/rng.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov/flags.js","../js/fov/fov.js","../js/fov/system.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/color/color.js","../js/sprite/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/canvas/buffer.js","../js/canvas/glyphs.js","../js/canvas/canvas.js","../js/canvas/shaders.js","../js/canvas/canvasGL.js","../js/canvas/make.js","../js/sprite/sprite.js","../js/gw.js","../js/message.js","../js/blob.js","../js/light/light.js","../js/light/system.js"],"sourcesContent":["/**\n * GW.utils\n * @module utils\n */\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\nexport function IS_ZERO(x) {\n    return x == 0;\n}\nexport function IS_NONZERO(x) {\n    return x != 0;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function first(...args) {\n    return args.find((v) => v !== undefined);\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function arrayIncludesAll(a, b) {\n    return b.every((av) => a.includes(av));\n}\nexport function arrayDelete(a, b) {\n    const index = a.indexOf(b);\n    if (index < 0)\n        return false;\n    a.splice(index, 1);\n    return true;\n}\nexport function arrayInsert(a, b, beforeFn) {\n    if (!beforeFn) {\n        a.push(b);\n        return;\n    }\n    const index = a.findIndex(beforeFn);\n    if (index < 0) {\n        a.push(b);\n    }\n    else {\n        a.splice(index, 0, b);\n    }\n}\nexport function arrayFindRight(a, fn) {\n    for (let i = a.length - 1; i >= 0; --i) {\n        const e = a[i];\n        if (fn(e))\n            return e;\n    }\n    return undefined;\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\nexport function arrayNext(a, current, fn, wrap = true, forward = true) {\n    const len = a.length;\n    if (len <= 1)\n        return undefined;\n    const startIndex = a.indexOf(current);\n    if (startIndex < 0)\n        return undefined;\n    const dx = forward ? 1 : -1;\n    let startI = wrap ? (len + startIndex + dx) % len : startIndex + dx;\n    let endI = wrap ? startIndex : forward ? len : -1;\n    for (let index = startI; index !== endI; index = wrap ? (len + index + dx) % len : index + dx) {\n        const e = a[index];\n        if (fn(e))\n            return e;\n    }\n    return undefined;\n}\nexport function arrayPrev(a, current, fn, wrap = true) {\n    return arrayNext(a, current, fn, wrap, false);\n}\nexport function nextIndex(index, length, wrap = true) {\n    ++index;\n    if (index >= length) {\n        if (wrap)\n            return index % length;\n        return -1;\n    }\n    return index;\n}\nexport function prevIndex(index, length, wrap = true) {\n    if (index < 0)\n        return length - 1; // start in back\n    --index;\n    if (index < 0) {\n        if (wrap)\n            return length - 1;\n        return -1;\n    }\n    return index;\n}\n//# sourceMappingURL=utils.js.map","import { clamp } from './utils';\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, -1],\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [1, -1],\n    [1, 1],\n    [-1, 1],\n    [-1, -1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport function contains(size, x, y) {\n    return x >= 0 && y >= 0 && x < size.width && y < size.height;\n}\nexport class Bounds {\n    constructor(x = 0, y = 0, w = 0, h = 0) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    get left() {\n        return this.x;\n    }\n    set left(v) {\n        this.x = v;\n    }\n    get right() {\n        return this.x + this.width;\n    }\n    set right(v) {\n        this.x = v - this.width;\n    }\n    get top() {\n        return this.y;\n    }\n    set top(v) {\n        this.y = v;\n    }\n    get bottom() {\n        return this.y + this.height;\n    }\n    set bottom(v) {\n        this.y = v - this.height;\n    }\n    clone() {\n        return new Bounds(this.x, this.y, this.width, this.height);\n    }\n    contains(...args) {\n        let i = args[0];\n        let j = args[1];\n        if (typeof i !== 'number') {\n            j = y(i);\n            i = x(i);\n        }\n        return (this.x <= i &&\n            this.y <= j &&\n            this.x + this.width > i &&\n            this.y + this.height > j);\n    }\n    toString() {\n        return `[${this.x},${this.y} -> ${this.right},${this.bottom}]`;\n    }\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    if (!dest && !src)\n        return true;\n    if (!dest || !src)\n        return false;\n    return x(dest) == x(src) && y(dest) == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function eachNeighbor(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        fn(x1, y1);\n    }\n}\nexport async function eachNeighborAsync(x, y, fn, only4dirs = false) {\n    const max = only4dirs ? 4 : 8;\n    for (let i = 0; i < max; ++i) {\n        const dir = DIRS[i];\n        const x1 = x + dir[0];\n        const y1 = y + dir[1];\n        await fn(x1, y1);\n    }\n}\nexport function matchingNeighbor(x, y, matchFn, only4dirs = false) {\n    const maxIndex = only4dirs ? 4 : 8;\n    for (let d = 0; d < maxIndex; ++d) {\n        const dir = DIRS[d];\n        const i = x + dir[0];\n        const j = y + dir[1];\n        if (matchFn(i, j))\n            return [i, j];\n    }\n    return [-1, -1];\n}\nexport function straightDistanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    return x + y;\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// LINES\nexport function forLine(x, y, dir, length, fn) {\n    for (let l = 0; l < length; ++l) {\n        fn(x + l * dir[0], y + l * dir[1]);\n    }\n}\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLineBetween(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return true;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc) === false) {\n            return false;\n        }\n        if (currentLoc[0] === toX && currentLoc[1] === toY)\n            return true;\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLineBetween(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return false;\n        line.push([x, y]);\n    });\n    return line;\n}\n// CIRCLE\nexport function forCircle(x, y, radius, fn) {\n    let i, j;\n    for (i = x - radius - 1; i < x + radius + 1; i++) {\n        for (j = y - radius - 1; j < y + radius + 1; j++) {\n            if ((i - x) * (i - x) + (j - y) * (j - y) <\n                radius * radius + radius) {\n                // + radius softens the circle\n                fn(i, j);\n            }\n        }\n    }\n}\nexport function forRect(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0];\n    const bottom = top + args[1];\n    const fn = args[2];\n    for (let i = left; i < right; ++i) {\n        for (let j = top; j < bottom; ++j) {\n            fn(i, j);\n        }\n    }\n}\nexport function forBorder(...args) {\n    let left = 0;\n    let top = 0;\n    if (arguments.length > 3) {\n        left = args.shift();\n        top = args.shift();\n    }\n    const right = left + args[0] - 1;\n    const bottom = top + args[1] - 1;\n    const fn = args[2];\n    for (let x = left; x <= right; ++x) {\n        fn(x, top);\n        fn(x, bottom);\n    }\n    for (let y = top; y <= bottom; ++y) {\n        fn(left, y);\n        fn(right, y);\n    }\n}\n// ARC COUNT\n// Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n//\t\tZero means there are no impassable tiles adjacent.\n//\t\tOne means it is adjacent to a wall.\n//\t\tTwo means it is in a hallway or something similar.\n//\t\tThree means it is the center of a T-intersection or something similar.\n//\t\tFour means it is in the intersection of two hallways.\n//\t\tFive or more means there is a bug.\nexport function arcCount(x, y, testFn) {\n    let oldX, oldY, newX, newY;\n    // brogueAssert(grid.hasXY(x, y));\n    let arcCount = 0;\n    let matchCount = 0;\n    for (let dir = 0; dir < CLOCK_DIRS.length; dir++) {\n        oldX = x + CLOCK_DIRS[(dir + 7) % 8][0];\n        oldY = y + CLOCK_DIRS[(dir + 7) % 8][1];\n        newX = x + CLOCK_DIRS[dir][0];\n        newY = y + CLOCK_DIRS[dir][1];\n        // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n        const newOk = testFn(newX, newY);\n        const oldOk = testFn(oldX, oldY);\n        if (newOk)\n            ++matchCount;\n        if (newOk != oldOk) {\n            arcCount++;\n        }\n    }\n    if (arcCount == 0 && matchCount)\n        return 1;\n    return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n}\n//# sourceMappingURL=xy.js.map","// CHAIN\nexport function length(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function at(root, index) {\n    while (root && index) {\n        root = root.next;\n        --index;\n    }\n    return root;\n}\nexport function includes(root, entry) {\n    while (root && root !== entry) {\n        root = root.next;\n    }\n    return root === entry;\n}\nexport function forEach(root, fn) {\n    let index = 0;\n    while (root) {\n        const next = root.next;\n        fn(root, index++);\n        root = next;\n    }\n    return index; // really count\n}\nexport function push(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function remove(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\nexport function find(root, cb) {\n    while (root && !cb(root)) {\n        root = root.next;\n    }\n    return root;\n}\nexport function insert(obj, name, entry, sort) {\n    let root = obj[name];\n    sort = sort || (() => -1); // always insert first\n    if (!root || sort(root, entry) < 0) {\n        entry.next = root;\n        obj[name] = entry;\n        return true;\n    }\n    let prev = root;\n    let current = root.next;\n    while (current && sort(current, entry) > 0) {\n        prev = current;\n        current = current.next;\n    }\n    entry.next = current;\n    prev.next = entry;\n    return true;\n}\nexport function reduce(root, cb, out) {\n    let current = root;\n    if (out === undefined) {\n        if (!current)\n            throw new TypeError('Empty list reduce without initial value not allowed.');\n        out = current;\n        current = current.next;\n    }\n    while (current) {\n        out = cb(out, current);\n        current = current.next;\n    }\n    return out;\n}\nexport function some(root, cb) {\n    let current = root;\n    while (current) {\n        if (cb(current))\n            return true;\n        current = current.next;\n    }\n    return false;\n}\nexport function every(root, cb) {\n    let current = root;\n    while (current) {\n        if (!cb(current))\n            return false;\n        current = current.next;\n    }\n    return true;\n}\n//# sourceMappingURL=list.js.map","import { ERROR } from './utils';\n// export function extend(obj, name, fn) {\n//   const base = obj[name] || NOOP;\n//   const newFn = fn.bind(obj, base.bind(obj));\n//   newFn.fn = fn;\n//   newFn.base = base;\n//   obj[name] = newFn;\n// }\n// export function rebase(obj, name, newBase) {\n//   const fns = [];\n//   let fn = obj[name];\n//   while(fn && fn.fn) {\n//     fns.push(fn.fn);\n//     fn = fn.base;\n//   }\n//   obj[name] = newBase;\n//   while(fns.length) {\n//     fn = fns.pop();\n//     extend(obj, name, fn);\n//   }\n// }\n// export function cloneObject(obj:object) {\n//   const other = Object.create(obj.__proto__);\n//   assignObject(other, obj);\n//   return other;\n// }\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === 'string') {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    if (!def)\n        return;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split('.');\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== 'object') {\n                ERROR('Trying to set default member on non-object config item: ' +\n                    origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === 'object') {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function setOptions(obj, opts) {\n    setDefaults(obj, opts, (dest, key, _current, opt) => {\n        if (opt === null) {\n            dest[key] = null;\n        }\n        else if (Array.isArray(opt)) {\n            dest[key] = opt.slice();\n        }\n        else if (typeof opt === 'object') {\n            dest[key] = opt; // Object.assign({}, opt); -- this breaks assigning a Color object as a default...\n        }\n        else {\n            dest[key] = opt;\n        }\n        return true;\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == 'string') {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === 'string') {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== 'object' || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=object.js.map","import * as XY from './xy';\n/**\n * The code in this function is extracted from ROT.JS.\n * Source: https://github.com/ondras/rot.js/blob/v2.2.0/src/rng.ts\n * Copyright (c) 2012-now(), Ondrej Zara\n * All rights reserved.\n * License: BSD 3-Clause \"New\" or \"Revised\" License\n * See: https://github.com/ondras/rot.js/blob/v2.2.0/license.txt\n */\nexport function Alea(seed) {\n    /**\n     * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n     * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n     */\n    seed = Math.abs(seed || Date.now());\n    seed = seed < 1 ? 1 / seed : seed;\n    const FRAC = 2.3283064365386963e-10; /* 2^-32 */\n    let _s0 = 0;\n    let _s1 = 0;\n    let _s2 = 0;\n    let _c = 0;\n    /**\n     * Seed the number generator\n     */\n    _s0 = (seed >>> 0) * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s1 = seed * FRAC;\n    seed = (seed * 69069 + 1) >>> 0;\n    _s2 = seed * FRAC;\n    _c = 1;\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    return function alea() {\n        let t = 2091639 * _s0 + _c * FRAC;\n        _s0 = _s1;\n        _s1 = _s2;\n        _c = t | 0;\n        _s2 = t - _c;\n        return _s2;\n    };\n}\nconst RANDOM_CONFIG = {\n    make: Alea,\n    // make: (seed?: number) => {\n    //     let rng = ROT.RNG.clone();\n    //     if (seed) {\n    //         rng.setSeed(seed);\n    //     }\n    //     return rng.getUniform.bind(rng);\n    // },\n};\nexport function configure(config = {}) {\n    if (config.make) {\n        RANDOM_CONFIG.make = config.make;\n        random.seed();\n        cosmetic.seed();\n    }\n}\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        // console.warn(\n        //     'Lottery Draw - no frequencies',\n        //     frequencies,\n        //     frequencies.length\n        // );\n        return -1;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn('Lottery Draw failed.', frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    if (index < 0)\n        return -1;\n    return entries[index][0];\n}\nexport class Random {\n    // static configure(opts: Partial<RandomConfig>) {\n    //     if (opts.make) {\n    //         if (typeof opts.make !== 'function')\n    //             throw new Error('Random make parameter must be a function.');\n    //         if (typeof opts.make(12345) !== 'function')\n    //             throw new Error(\n    //                 'Random make function must accept a numeric seed and return a random function.'\n    //             );\n    //         RANDOM_CONFIG.make = opts.make;\n    //         random.seed();\n    //         cosmetic.seed();\n    //     }\n    // }\n    constructor(seed) {\n        this._fn = RANDOM_CONFIG.make(seed);\n    }\n    seed(val) {\n        val = val || Date.now();\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max = Number.MAX_SAFE_INTEGER) {\n        if (max <= 0)\n            return 0;\n        return Math.floor(this.value() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n    matchingLoc(width, height, matchFn) {\n        let locationCount = 0;\n        let i, j, index;\n        locationCount = 0;\n        XY.forRect(width, height, (i, j) => {\n            if (matchFn(i, j)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else {\n            index = this.range(0, locationCount - 1);\n        }\n        for (i = 0; i < width && index >= 0; i++) {\n            for (j = 0; j < height && index >= 0; j++) {\n                if (matchFn(i, j)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, matchFn) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < 50 && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        randIndex = 1 + this.number(candidateLocs);\n        for (k = 0; k < 50; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if ((i == x - k ||\n                        i == x + k ||\n                        j == y - k ||\n                        j == y + k) &&\n                        matchFn(i, j)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        return [-1, -1]; // should never reach this point\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\nexport function make(seed) {\n    return new Random(seed);\n}\n//# sourceMappingURL=rng.js.map","import { random } from './rng';\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1) {\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value(rng) {\n        rng = rng || random;\n        return rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    contains(value) {\n        return this.lo <= value && this.hi >= value;\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return '' + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config) {\n    if (!config)\n        return new Range(0, 0, 0);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == 'function')\n        throw new Error('Custom range functions not supported - extend Range');\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0);\n    if (typeof config == 'number')\n        return new Range(config, config, 1);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error('Invalid random config: ' + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2]);\n    }\n    if (typeof config !== 'string') {\n        throw new Error('Calculations must be strings.  Received: ' + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+)\\+|([+-]?\\d+))$/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3);\n        }\n        else if (results[9]) {\n            const v = Number.parseInt(results[9]);\n            return new Range(v, Number.MAX_SAFE_INTEGER, 1);\n        }\n        else if (results[10]) {\n            const v = Number.parseInt(results[10]);\n            return new Range(v, v, 1);\n        }\n    }\n    throw new Error('Not a valid range - ' + config);\n}\nexport const from = make;\nexport function asFn(config) {\n    const range = make(config);\n    return () => range.value();\n}\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (typeof value === 'number') {\n            if (out[value]) {\n                out[value] += ' | ' + key;\n            }\n            else {\n                out[value] = key;\n            }\n        }\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(' | ');\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == 'number') {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === 'string') {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == 'string') {\n                    v = v.trim();\n                    const parts = v.split(/[,|]/);\n                    if (parts.length > 1) {\n                        result = from(obj, result, parts);\n                    }\n                    else if (v.startsWith('!')) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        const n = Number.parseInt(v);\n                        if (n >= 0) {\n                            result |= n;\n                            return;\n                        }\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\nexport function make(obj) {\n    const out = {};\n    Object.entries(obj).forEach(([key, value]) => {\n        out[key] = from(out, value);\n    });\n    return out;\n}\n//# sourceMappingURL=flag.js.map","import { random } from './rng';\nimport * as Utils from './utils';\nimport * as XY from './xy';\nconst DIRS = XY.DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    let initFn;\n    if (typeof fn !== 'function') {\n        initFn = () => fn;\n    }\n    else {\n        initFn = fn;\n    }\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = initFn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return ' ';\n    }\n    else if (v === true) {\n        return 'T';\n    }\n    else if (v < 10) {\n        return '' + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode('a'.charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode('A'.charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === 'string') {\n        return v[0];\n    }\n    else {\n        return '#';\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        const grid = this;\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === 'function') {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i, grid));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return undefined;\n        return this[x][y];\n    }\n    set(x, y, v) {\n        if (!this.hasXY(x, y))\n            return false;\n        this[x][y] = v;\n        return true;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    async forEachAsync(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        XY.eachNeighbor(x, y, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }, only4dirs);\n    }\n    async eachNeighborAsync(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                await fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        XY.forRect(x, y, w, h, (i, j) => {\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    randomEach(fn) {\n        const sequence = random.sequence(this.width * this.height);\n        for (let i = 0; i < sequence.length; ++i) {\n            const n = sequence[i];\n            const x = n % this.width;\n            const y = Math.floor(n / this.width);\n            if (fn(this[x][y], x, y, this) === true)\n                return true;\n        }\n        return false;\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    /**\n     * Returns whether or not an item in the grid matches the provided function.\n     * @param fn - The function that matches\n     * TODO - Do we need this???\n     * TODO - Should this only be in NumGrid?\n     * TODO - Should it alloc instead of using constructor?\n     * TSIGNORE\n     */\n    // @ts-ignore\n    some(fn) {\n        return super.some((col, x) => col.some((data, y) => fn(data, x, y, this)));\n    }\n    forCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j))\n                fn(this[i][j], i, j, this);\n        });\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = {\n            left: this.width,\n            top: this.height,\n            right: 0,\n            bottom: 0,\n        };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        XY.forRect(this.width, this.height, (i, j) => {\n            this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateRect(x, y, width, height, fn) {\n        XY.forRect(x, y, width, height, (i, j) => {\n            if (this.hasXY(i, j))\n                this[i][j] = fn(this[i][j], i, j, this);\n        });\n    }\n    updateCircle(x, y, radius, fn) {\n        XY.forCircle(x, y, radius, (i, j) => {\n            if (this.hasXY(i, j)) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        });\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    /**\n     * Finds the first matching value/result and returns that location as an xy.Loc\n     * @param v - The fill value or a function that returns the fill value.\n     * @returns xy.Loc | null - The location of the first cell matching the criteria or null if not found.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    find(match) {\n        const fn = typeof match === 'function'\n            ? match\n            : (v) => v == match;\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const v = this[x][y];\n                if (fn(v, x, y, this))\n                    return [x, y];\n            }\n        }\n        return null;\n    }\n    dump(fmtFn, log = console.log) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn, log);\n    }\n    dumpRect(left, top, width, height, fmtFn, log = console.log) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = ('' + j + ']').padStart(3, ' ');\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += ' ';\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        log(output.join('\\n'));\n    }\n    dumpAround(x, y, radius, fmtFn, log = console.log) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius, fmtFn, log);\n    }\n    // TODO - Use for(radius) loop to speed this up (do not look at each cell)\n    closestMatchingLoc(x, y, v) {\n        let bestLoc = [-1, -1];\n        let bestDistance = 100 * (this.width + this.height);\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Math.floor(100 * XY.distanceBetween(x, y, i, j));\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? v\n            : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLoc(this.width, this.height, fn);\n    }\n    matchingLocNear(x, y, v) {\n        const fn = typeof v === 'function'\n            ? (x, y) => v(this[x][y], x, y, this)\n            : (x, y) => this.get(x, y) === v;\n        return random.matchingLocNear(x, y, fn);\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        return XY.arcCount(x, y, (i, j) => {\n            return this.hasXY(i, j) && testFn(this[i][j], i, j, this);\n        });\n    }\n}\nconst GRID_CACHE = [];\nexport const stats = {\n    active: 0,\n    alloc: 0,\n    create: 0,\n    free: 0,\n};\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(...args) {\n        let w = args[0] || 0;\n        let h = args[1] || 0;\n        let v = args[2] || 0;\n        if (args.length == 1) {\n            // clone from NumGrid\n            w = args[0].width;\n            h = args[0].height;\n            v = args[0].get.bind(args[0]);\n        }\n        if (!w || !h)\n            throw new Error('Grid alloc requires width and height parameters.');\n        ++stats.active;\n        ++stats.alloc;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++stats.create;\n            return new NumGrid(w, h, v);\n        }\n        grid._resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++stats.free;\n            --stats.active;\n        }\n    }\n    _resize(width, height, v) {\n        const fn = typeof v === 'function' ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y, this);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin, eligibleValueMax, fillValue) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error('Invalid grid flood fill');\n        }\n        const ok = (x, y) => {\n            return (this.hasXY(x, y) &&\n                this[x][y] >= eligibleValueMin &&\n                this[x][y] <= eligibleValueMax);\n        };\n        if (!ok(x, y))\n            return 0;\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (ok(newX, newY)) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc() {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc(targetValue);\n    }\n    valueBounds(value, bounds) {\n        let foundValueAtThisLine = false;\n        let i, j;\n        let left = this.width - 1, right = 0, top = this.height - 1, bottom = 0;\n        // Figure out the top blob's height and width:\n        // First find the max & min x:\n        for (i = 0; i < this.width; i++) {\n            foundValueAtThisLine = false;\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (i < left) {\n                    left = i;\n                }\n                if (i > right) {\n                    right = i;\n                }\n            }\n        }\n        // Then the max & min y:\n        for (j = 0; j < this.height; j++) {\n            foundValueAtThisLine = false;\n            for (i = 0; i < this.width; i++) {\n                if (this[i][j] == value) {\n                    foundValueAtThisLine = true;\n                    break;\n                }\n            }\n            if (foundValueAtThisLine) {\n                if (j < top) {\n                    top = j;\n                }\n                if (j > bottom) {\n                    bottom = j;\n                }\n            }\n        }\n        bounds = bounds || new XY.Bounds(0, 0, 0, 0);\n        bounds.x = left;\n        bounds.y = top;\n        bounds.width = right - left + 1;\n        bounds.height = bottom - top + 1;\n        return bounds;\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        const matchFn = typeof matchValue == 'function'\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == 'function' ? fillValue : () => fillValue;\n        let done = NumGrid.alloc(this.width, this.height);\n        let newX, newY;\n        const todo = [[x, y]];\n        const free = [];\n        let count = 1;\n        while (todo.length) {\n            const item = todo.pop();\n            [x, y] = item;\n            free.push(item);\n            if (!this.hasXY(x, y) || done[x][y])\n                continue;\n            if (!matchFn(this[x][y], x, y, this))\n                continue;\n            this[x][y] = fillFn(this[x][y], x, y, this);\n            done[x][y] = 1;\n            ++count;\n            // Iterate through the four cardinal neighbors.\n            for (let dir = 0; dir < 4; dir++) {\n                newX = x + DIRS[dir][0];\n                newY = y + DIRS[dir][1];\n                // If the neighbor is an unmarked region cell,\n                const item = free.pop() || [-1, -1];\n                item[0] = newX;\n                item[1] = newY;\n                todo.push(item);\n            }\n        }\n        NumGrid.free(done);\n        return count;\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === 'number')\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === 'function'\n        ? value\n        : (_d, _s, dx, dy) => (destGrid[dx][dy] = value);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => (a[i][j] && b[i][j]) || 0);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    // @ts-ignore\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from './utils';\nexport class Event {\n    constructor(type, opts) {\n        this.target = null;\n        // Used in UI\n        this.defaultPrevented = false;\n        this.propagationStopped = false;\n        this.immediatePropagationStopped = false;\n        // Key Event\n        this.key = '';\n        this.code = '';\n        this.shiftKey = false;\n        this.ctrlKey = false;\n        this.altKey = false;\n        this.metaKey = false;\n        // Dir Event extends KeyEvent\n        this.dir = null;\n        // Mouse Event\n        this.x = -1;\n        this.y = -1;\n        this.clientX = -1;\n        this.clientY = -1;\n        // Tick Event\n        this.dt = 0;\n        this.reset(type, opts);\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    stopPropagation() {\n        this.propagationStopped = true;\n    }\n    stopImmediatePropagation() {\n        this.immediatePropagationStopped = true;\n    }\n    reset(type, opts) {\n        this.type = type;\n        this.target = null;\n        this.defaultPrevented = false;\n        this.shiftKey = false;\n        this.ctrlKey = false;\n        this.altKey = false;\n        this.metaKey = false;\n        this.key = '';\n        this.code = '';\n        this.x = -1;\n        this.y = -1;\n        this.dir = null;\n        this.dt = 0;\n        this.target = null;\n        if (opts) {\n            Object.assign(this, opts);\n        }\n    }\n}\nlet IOMAP = {};\nconst DEAD_EVENTS = [];\nexport const KEYPRESS = 'keypress';\nexport const MOUSEMOVE = 'mousemove';\nexport const CLICK = 'click';\nexport const TICK = 'tick';\nexport const MOUSEUP = 'mouseup';\nexport const STOP = 'stop';\nconst CONTROL_CODES = [\n    'ShiftLeft',\n    'ShiftRight',\n    'ControlLeft',\n    'ControlRight',\n    'AltLeft',\n    'AltRight',\n    'MetaLeft',\n    'MetaRight',\n];\nexport function setKeymap(keymap) {\n    IOMAP = keymap;\n}\nexport function handlerFor(ev, km) {\n    let c;\n    if (ev.dir) {\n        c = km.dir || km.keypress;\n    }\n    else if (ev.type === KEYPRESS) {\n        c = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        c = km[ev.type];\n    }\n    if (!c) {\n        c = km.dispatch;\n    }\n    return c || null;\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    km = km || IOMAP;\n    if (ev.type === STOP) {\n        recycleEvent(ev);\n        return true; // Should stop loops, etc...\n    }\n    const handler = handlerFor(ev, km);\n    if (handler) {\n        // if (typeof c === 'function') {\n        result = await handler.call(km, ev);\n        // } else if (commands[c]) {\n        //     result = await commands[c](ev);\n        // } else {\n        //     Utils.WARN('No command found: ' + c);\n        // }\n    }\n    // TODO - what is this here for?\n    // if ('next' in km && km.next === false) {\n    //     result = false;\n    // }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// STOP\nexport function makeStopEvent() {\n    return makeCustomEvent(STOP);\n}\n// CUSTOM\nexport function makeCustomEvent(type, opts) {\n    const ev = DEAD_EVENTS.pop() || null;\n    if (!ev)\n        return new Event(type, opts);\n    ev.reset(type, opts);\n    return ev;\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = makeCustomEvent(TICK);\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = '^' + key;\n        code = '^' + code;\n    }\n    if (e.metaKey) {\n        key = '#' + key;\n        code = '#' + code;\n    }\n    if (e.altKey) {\n        code = '/' + code;\n    }\n    const ev = DEAD_EVENTS.pop() || new Event(KEYPRESS);\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.defaultPrevented = false;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    ev.target = null;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === 'arrowup') {\n        return [0, -1];\n    }\n    else if (lowerKey === 'arrowdown') {\n        return [0, 1];\n    }\n    else if (lowerKey === 'arrowleft') {\n        return [-1, 0];\n    }\n    else if (lowerKey === 'arrowright') {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\n// MOUSE\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || new Event(e.type);\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== 'mouseup') {\n        ev.type = CLICK;\n    }\n    ev.defaultPrevented = false;\n    ev.key = '';\n    ev.code = '';\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    ev.target = null;\n    return ev;\n}\nexport class Loop {\n    constructor() {\n        this.running = true;\n        this.events = [];\n        this.mouse = { x: -1, y: -1 };\n        this.CURRENT_HANDLER = null;\n        this.PAUSED = null;\n        this.LAST_CLICK = { x: -1, y: -1 };\n        this.interval = 0;\n        this.intervalCount = 0;\n        this.ended = false;\n    }\n    hasEvents() {\n        return this.events.length;\n    }\n    clearEvents() {\n        while (this.events.length) {\n            const ev = this.events.shift();\n            DEAD_EVENTS.push(ev);\n        }\n    }\n    _startTicks() {\n        ++this.intervalCount;\n        if (this.interval)\n            return;\n        this.interval = setInterval(() => {\n            const e = makeTickEvent(16);\n            this.pushEvent(e);\n        }, 16);\n    }\n    _stopTicks() {\n        if (!this.intervalCount)\n            return; // too many calls to stop\n        --this.intervalCount;\n        if (this.intervalCount)\n            return; // still have a loop running\n        clearInterval(this.interval);\n        this.interval = 0;\n    }\n    pushEvent(ev) {\n        if (this.ended)\n            return;\n        if (this.PAUSED) {\n            console.log('PAUSED EVENT', ev.type);\n        }\n        if (this.events.length) {\n            const last = this.events[this.events.length - 1];\n            if (last.type === ev.type) {\n                if (last.type === MOUSEMOVE) {\n                    last.x = ev.x;\n                    last.y = ev.y;\n                    recycleEvent(ev);\n                    return;\n                }\n            }\n        }\n        // Keep clicks down to one per cell if holding down mouse button\n        if (ev.type === CLICK) {\n            if (this.LAST_CLICK.x == ev.x && this.LAST_CLICK.y == ev.y) {\n                recycleEvent(ev);\n                return;\n            }\n            this.LAST_CLICK.x = ev.x;\n            this.LAST_CLICK.y = ev.y;\n        }\n        else if (ev.type == MOUSEUP) {\n            this.LAST_CLICK.x = -1;\n            this.LAST_CLICK.y = -1;\n            recycleEvent(ev);\n            return;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.CURRENT_HANDLER(ev);\n        }\n        else if (ev.type === TICK) {\n            const first = this.events[0];\n            if (first && first.type === TICK) {\n                first.dt += ev.dt;\n                recycleEvent(ev);\n                return;\n            }\n            this.events.unshift(ev); // ticks go first\n        }\n        else {\n            this.events.push(ev);\n        }\n    }\n    nextEvent(ms = -1, match) {\n        match = match || Utils.TRUE;\n        let elapsed = 0;\n        while (this.events.length) {\n            const e = this.events.shift();\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (match(e)) {\n                return Promise.resolve(e);\n            }\n            recycleEvent(e);\n        }\n        let done;\n        if (ms == 0 || this.ended)\n            return Promise.resolve(null);\n        if (this.CURRENT_HANDLER) {\n            throw new Error('OVERWRITE HANDLER -- Check for a missing await around Loop function calls.');\n        }\n        else if (this.events.length) {\n            console.warn('SET HANDLER WITH QUEUED EVENTS - nextEvent');\n        }\n        this.CURRENT_HANDLER = (e) => {\n            if (e.type === MOUSEMOVE) {\n                this.mouse.x = e.x;\n                this.mouse.y = e.y;\n            }\n            if (e.type === TICK && ms > 0) {\n                elapsed += e.dt;\n                if (elapsed < ms) {\n                    return;\n                }\n                e.dt = elapsed;\n            }\n            else if (!match(e))\n                return;\n            this.CURRENT_HANDLER = null;\n            done(e);\n        };\n        return new Promise((resolve) => (done = resolve));\n    }\n    async run(keymap, ms = -1) {\n        if (this.ended)\n            return;\n        this.running = true;\n        this.clearEvents(); // ??? Should we do this?\n        this._startTicks();\n        if (keymap.start && typeof keymap.start === 'function') {\n            await keymap.start();\n        }\n        let running = true;\n        while (this.running && running) {\n            if (keymap.draw && typeof keymap.draw === 'function') {\n                keymap.draw();\n            }\n            const ev = await this.nextEvent(ms);\n            if (ev && (await dispatchEvent(ev, keymap))) {\n                running = false;\n            }\n        }\n        if (keymap.stop && typeof keymap.stop === 'function') {\n            await keymap.stop();\n        }\n        this._stopTicks();\n    }\n    stop() {\n        this.clearEvents();\n        this.running = false;\n        if (this.interval) {\n            clearInterval(this.interval);\n            this.interval = 0;\n        }\n        if (this.CURRENT_HANDLER) {\n            this.pushEvent(makeStopEvent());\n        }\n        this.CURRENT_HANDLER = null;\n    }\n    end() {\n        this.stop();\n        this.ended = true;\n    }\n    start() {\n        this.ended = false;\n    }\n    pauseEvents() {\n        if (this.PAUSED)\n            return;\n        this.PAUSED = this.CURRENT_HANDLER;\n        this.CURRENT_HANDLER = null;\n        // io.debug('events paused');\n    }\n    resumeEvents() {\n        if (!this.PAUSED)\n            return;\n        if (this.CURRENT_HANDLER) {\n            console.warn('overwrite CURRENT HANDLER!');\n        }\n        this.CURRENT_HANDLER = this.PAUSED;\n        this.PAUSED = null;\n        // io.debug('resuming events');\n        if (this.events.length && this.CURRENT_HANDLER) {\n            const e = this.events.shift();\n            // io.debug('- processing paused event', e.type);\n            this.CURRENT_HANDLER(e);\n            // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n        }\n        // io.debug('events resumed');\n    }\n    // IO\n    async tickMs(ms = 1) {\n        let done;\n        setTimeout(() => done(), ms);\n        return new Promise((resolve) => (done = resolve));\n    }\n    async nextKeyPress(ms, match) {\n        if (ms === undefined)\n            ms = -1;\n        match = match || Utils.TRUE;\n        function matchingKey(e) {\n            if (e.type !== KEYPRESS)\n                return false;\n            return match(e);\n        }\n        return this.nextEvent(ms, matchingKey);\n    }\n    async nextKeyOrClick(ms, matchFn) {\n        if (ms === undefined)\n            ms = -1;\n        matchFn = matchFn || Utils.TRUE;\n        function match(e) {\n            if (e.type !== KEYPRESS && e.type !== CLICK)\n                return false;\n            return matchFn(e);\n        }\n        return this.nextEvent(ms, match);\n    }\n    async pause(ms) {\n        const e = await this.nextKeyOrClick(ms);\n        return e && e.type !== TICK;\n    }\n    waitForAck() {\n        return this.pause(5 * 60 * 1000); // 5 min\n    }\n    onkeydown(e) {\n        if (ignoreKeyEvent(e))\n            return;\n        if (e.code === 'Escape') {\n            this.clearEvents(); // clear all current events, then push on the escape\n        }\n        const ev = makeKeyEvent(e);\n        this.pushEvent(ev);\n        e.preventDefault();\n    }\n}\nexport function make() {\n    return new Loop();\n}\n// Makes a default global loop that you access through these funcitons...\nexport const loop = make();\n//# sourceMappingURL=io.js.map","import { fl as Fl } from '../flag';\nexport var FovFlags;\n(function (FovFlags) {\n    FovFlags[FovFlags[\"VISIBLE\"] = Fl(0)] = \"VISIBLE\";\n    FovFlags[FovFlags[\"WAS_VISIBLE\"] = Fl(1)] = \"WAS_VISIBLE\";\n    FovFlags[FovFlags[\"CLAIRVOYANT_VISIBLE\"] = Fl(2)] = \"CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_CLAIRVOYANT_VISIBLE\"] = Fl(3)] = \"WAS_CLAIRVOYANT_VISIBLE\";\n    FovFlags[FovFlags[\"TELEPATHIC_VISIBLE\"] = Fl(4)] = \"TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_TELEPATHIC_VISIBLE\"] = Fl(5)] = \"WAS_TELEPATHIC_VISIBLE\";\n    FovFlags[FovFlags[\"ITEM_DETECTED\"] = Fl(6)] = \"ITEM_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ITEM_DETECTED\"] = Fl(7)] = \"WAS_ITEM_DETECTED\";\n    FovFlags[FovFlags[\"ACTOR_DETECTED\"] = Fl(8)] = \"ACTOR_DETECTED\";\n    FovFlags[FovFlags[\"WAS_ACTOR_DETECTED\"] = Fl(9)] = \"WAS_ACTOR_DETECTED\";\n    FovFlags[FovFlags[\"REVEALED\"] = Fl(10)] = \"REVEALED\";\n    FovFlags[FovFlags[\"MAGIC_MAPPED\"] = Fl(11)] = \"MAGIC_MAPPED\";\n    FovFlags[FovFlags[\"IN_FOV\"] = Fl(12)] = \"IN_FOV\";\n    FovFlags[FovFlags[\"WAS_IN_FOV\"] = Fl(13)] = \"WAS_IN_FOV\";\n    FovFlags[FovFlags[\"ALWAYS_VISIBLE\"] = Fl(14)] = \"ALWAYS_VISIBLE\";\n    FovFlags[FovFlags[\"IS_CURSOR\"] = Fl(15)] = \"IS_CURSOR\";\n    FovFlags[FovFlags[\"IS_HIGHLIGHTED\"] = Fl(16)] = \"IS_HIGHLIGHTED\";\n    FovFlags[FovFlags[\"ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE | FovFlags.CLAIRVOYANT_VISIBLE | FovFlags.TELEPATHIC_VISIBLE] = \"ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"IS_WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.VISIBLE |\n        FovFlags.WAS_VISIBLE |\n        FovFlags.CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.TELEPATHIC_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"IS_WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_ANY_KIND_OF_VISIBLE\"] = FovFlags.WAS_VISIBLE |\n        FovFlags.WAS_CLAIRVOYANT_VISIBLE |\n        FovFlags.WAS_TELEPATHIC_VISIBLE] = \"WAS_ANY_KIND_OF_VISIBLE\";\n    FovFlags[FovFlags[\"WAS_DETECTED\"] = FovFlags.WAS_ITEM_DETECTED | FovFlags.WAS_ACTOR_DETECTED] = \"WAS_DETECTED\";\n    FovFlags[FovFlags[\"IS_DETECTED\"] = FovFlags.ITEM_DETECTED | FovFlags.ACTOR_DETECTED] = \"IS_DETECTED\";\n    FovFlags[FovFlags[\"PLAYER\"] = FovFlags.IN_FOV] = \"PLAYER\";\n    FovFlags[FovFlags[\"CLAIRVOYANT\"] = FovFlags.CLAIRVOYANT_VISIBLE] = \"CLAIRVOYANT\";\n    FovFlags[FovFlags[\"TELEPATHIC\"] = FovFlags.TELEPATHIC_VISIBLE] = \"TELEPATHIC\";\n    FovFlags[FovFlags[\"VIEWPORT_TYPES\"] = FovFlags.PLAYER | FovFlags.VISIBLE |\n        FovFlags.CLAIRVOYANT |\n        FovFlags.TELEPATHIC |\n        FovFlags.ITEM_DETECTED |\n        FovFlags.ACTOR_DETECTED] = \"VIEWPORT_TYPES\";\n})(FovFlags || (FovFlags = {}));\n//# sourceMappingURL=flags.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from '../utils';\nimport * as XY from '../xy';\nexport class FOV {\n    constructor(strategy) {\n        this._setVisible = null;\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || XY.calcRadius;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n        this._debug = strategy.debug || Utils.NOOP;\n    }\n    calculate(x, y, maxRadius, setVisible) {\n        this._setVisible = setVisible;\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = XY.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            this._debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            this._debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        this._debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            this._debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                this._debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    this._debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) &&\n                    row < this._maxRadius) {\n                    //hit a wall within sight line\n                    this._debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","// import * as GWU from 'gw-utils';\n// import * as Flags from './mapFlags';\n// import * as Cell from './cell';\n// import * as Map from './map';\nimport { FovFlags } from './flags';\nimport * as Grid from '../grid';\nimport * as FOV from './fov';\nimport { NOOP } from '../utils';\nimport * as XY from '../xy';\nexport class FovSystem {\n    constructor(site, opts = {}) {\n        // needsUpdate: boolean;\n        this.changed = true;\n        this._callback = NOOP;\n        this.follow = null;\n        this.site = site;\n        let flag = 0;\n        const visible = opts.visible || opts.alwaysVisible;\n        if (opts.revealed || (visible && opts.revealed !== false))\n            flag |= FovFlags.REVEALED;\n        if (visible)\n            flag |= FovFlags.VISIBLE;\n        this.flags = Grid.make(site.width, site.height, flag);\n        // this.needsUpdate = true;\n        if (opts.callback) {\n            this.callback = opts.callback;\n        }\n        this.fov = new FOV.FOV({\n            isBlocked: (x, y) => {\n                return this.site.blocksVision(x, y);\n            },\n            hasXY: (x, y) => {\n                return (x >= 0 &&\n                    y >= 0 &&\n                    x < this.site.width &&\n                    y < this.site.height);\n            },\n        });\n        if (opts.alwaysVisible) {\n            this.makeAlwaysVisible();\n        }\n        if (opts.visible || opts.alwaysVisible) {\n            XY.forRect(site.width, site.height, (x, y) => this._callback(x, y, true));\n        }\n    }\n    get callback() {\n        return this._callback;\n    }\n    set callback(v) {\n        if (!v) {\n            this._callback = NOOP;\n        }\n        else if (typeof v === 'function') {\n            this._callback = v;\n        }\n        else {\n            this._callback = v.onFovChange.bind(v);\n        }\n    }\n    getFlag(x, y) {\n        return this.flags[x][y];\n    }\n    isVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.VISIBLE);\n    }\n    isAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ANY_KIND_OF_VISIBLE);\n    }\n    isClairvoyantVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.CLAIRVOYANT_VISIBLE);\n    }\n    isTelepathicVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.TELEPATHIC_VISIBLE);\n    }\n    isInFov(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.IN_FOV);\n    }\n    isDirectlyVisible(x, y) {\n        const flags = FovFlags.VISIBLE | FovFlags.IN_FOV;\n        return ((this.flags.get(x, y) || 0) & flags) === flags;\n    }\n    isActorDetected(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ACTOR_DETECTED);\n    }\n    isItemDetected(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.ITEM_DETECTED);\n    }\n    isMagicMapped(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.MAGIC_MAPPED);\n    }\n    isRevealed(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.REVEALED);\n    }\n    fovChanged(x, y) {\n        const flags = this.flags.get(x, y) || 0;\n        const isVisible = !!(flags & FovFlags.ANY_KIND_OF_VISIBLE);\n        const wasVisible = !!(flags & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        return isVisible !== wasVisible;\n    }\n    wasAnyKindOfVisible(x, y) {\n        return !!((this.flags.get(x, y) || 0) & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n    }\n    makeAlwaysVisible() {\n        this.flags.update((v) => v |\n            (FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE));\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    makeCellAlwaysVisible(x, y) {\n        this.flags[x][y] |=\n            FovFlags.ALWAYS_VISIBLE | FovFlags.REVEALED | FovFlags.VISIBLE;\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    revealAll(makeVisibleToo = true) {\n        const flag = FovFlags.REVEALED | (makeVisibleToo ? FovFlags.VISIBLE : 0);\n        this.flags.update((v) => v | flag);\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    revealCell(x, y, makeVisibleToo = true) {\n        const flag = FovFlags.REVEALED | (makeVisibleToo ? FovFlags.VISIBLE : 0);\n        this.flags[x][y] |= flag;\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    hideCell(x, y) {\n        this.flags[x][y] &= ~(FovFlags.MAGIC_MAPPED |\n            FovFlags.REVEALED |\n            FovFlags.ALWAYS_VISIBLE);\n        this.flags[x][y] = this.demoteCellVisibility(this.flags[x][y]); // clears visible, etc...\n        // TODO - onFovChange?\n        this.changed = true;\n    }\n    magicMapCell(x, y) {\n        this.flags[x][y] |= FovFlags.MAGIC_MAPPED;\n        this.changed = true;\n        // TODO - onFovChange?\n    }\n    reset() {\n        this.flags.fill(0);\n        this.changed = true;\n        // TODO - onFovChange?\n    }\n    // get changed(): boolean {\n    //     return this._changed;\n    // }\n    // set changed(v: boolean) {\n    //     this._changed = v;\n    //     this.needsUpdate = this.needsUpdate || v;\n    // }\n    // CURSOR\n    setCursor(x, y, keep = false) {\n        if (!keep) {\n            this.flags.update((f) => f & ~FovFlags.IS_CURSOR);\n        }\n        this.flags[x][y] |= FovFlags.IS_CURSOR;\n        this.changed = true;\n    }\n    clearCursor(x, y) {\n        if (x === undefined || y === undefined) {\n            this.flags.update((f) => f & ~FovFlags.IS_CURSOR);\n        }\n        else {\n            this.flags[x][y] &= ~FovFlags.IS_CURSOR;\n        }\n        this.changed = true;\n    }\n    isCursor(x, y) {\n        return !!(this.flags[x][y] & FovFlags.IS_CURSOR);\n    }\n    // HIGHLIGHT\n    setHighlight(x, y, keep = false) {\n        if (!keep) {\n            this.flags.update((f) => f & ~FovFlags.IS_HIGHLIGHTED);\n        }\n        this.flags[x][y] |= FovFlags.IS_HIGHLIGHTED;\n        this.changed = true;\n    }\n    clearHighlight(x, y) {\n        if (x === undefined || y === undefined) {\n            this.flags.update((f) => f & ~FovFlags.IS_HIGHLIGHTED);\n        }\n        else {\n            this.flags[x][y] &= ~FovFlags.IS_HIGHLIGHTED;\n        }\n        this.changed = true;\n    }\n    isHighlight(x, y) {\n        return !!(this.flags[x][y] & FovFlags.IS_HIGHLIGHTED);\n    }\n    // COPY\n    // copy(other: FovSystem) {\n    //     this.site = other.site;\n    //     this.flags.copy(other.flags);\n    //     this.fov = other.fov;\n    //     this.follow = other.follow;\n    //     this.onFovChange = other.onFovChange;\n    //     // this.needsUpdate = other.needsUpdate;\n    //     // this._changed = other._changed;\n    // }\n    //////////////////////////\n    // UPDATE\n    demoteCellVisibility(flag) {\n        flag &= ~(FovFlags.WAS_ANY_KIND_OF_VISIBLE | FovFlags.WAS_IN_FOV | FovFlags.WAS_DETECTED);\n        if (flag & FovFlags.IN_FOV) {\n            flag &= ~FovFlags.IN_FOV;\n            flag |= FovFlags.WAS_IN_FOV;\n        }\n        if (flag & FovFlags.VISIBLE) {\n            flag &= ~FovFlags.VISIBLE;\n            flag |= FovFlags.WAS_VISIBLE;\n        }\n        if (flag & FovFlags.CLAIRVOYANT_VISIBLE) {\n            flag &= ~FovFlags.CLAIRVOYANT_VISIBLE;\n            flag |= FovFlags.WAS_CLAIRVOYANT_VISIBLE;\n        }\n        if (flag & FovFlags.TELEPATHIC_VISIBLE) {\n            flag &= ~FovFlags.TELEPATHIC_VISIBLE;\n            flag |= FovFlags.WAS_TELEPATHIC_VISIBLE;\n        }\n        if (flag & FovFlags.ALWAYS_VISIBLE) {\n            flag |= FovFlags.VISIBLE;\n        }\n        if (flag & FovFlags.ITEM_DETECTED) {\n            flag &= ~FovFlags.ITEM_DETECTED;\n            flag |= FovFlags.WAS_ITEM_DETECTED;\n        }\n        if (flag & FovFlags.ACTOR_DETECTED) {\n            flag &= ~FovFlags.ACTOR_DETECTED;\n            flag |= FovFlags.WAS_ACTOR_DETECTED;\n        }\n        return flag;\n    }\n    updateCellVisibility(flag, x, y) {\n        const isVisible = !!(flag & FovFlags.ANY_KIND_OF_VISIBLE);\n        const wasVisible = !!(flag & FovFlags.WAS_ANY_KIND_OF_VISIBLE);\n        if (isVisible && wasVisible) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (isVisible && !wasVisible) {\n            // if the cell became visible this move\n            this.flags[x][y] |= FovFlags.REVEALED;\n            this._callback(x, y, isVisible);\n        }\n        else if (!isVisible && wasVisible) {\n            // if the cell ceased being visible this move\n            this._callback(x, y, isVisible);\n        }\n        return isVisible;\n    }\n    // protected updateCellClairyvoyance(\n    //     flag: number,\n    //     x: number,\n    //     y: number\n    // ): boolean {\n    //     const isClairy = !!(flag & FovFlags.CLAIRVOYANT_VISIBLE);\n    //     const wasClairy = !!(flag & FovFlags.WAS_CLAIRVOYANT_VISIBLE);\n    //     if (isClairy && wasClairy) {\n    //         // if (this.site.lightChanged(x, y)) {\n    //         //     this.site.redrawCell(x, y);\n    //         // }\n    //     } else if (!isClairy && wasClairy) {\n    //         // ceased being clairvoyantly visible\n    //         this._callback(x, y, isClairy);\n    //     } else if (!wasClairy && isClairy) {\n    //         // became clairvoyantly visible\n    //         this._callback(x, y, isClairy);\n    //     }\n    //     return isClairy;\n    // }\n    // protected updateCellTelepathy(flag: number, x: number, y: number): boolean {\n    //     const isTele = !!(flag & FovFlags.TELEPATHIC_VISIBLE);\n    //     const wasTele = !!(flag & FovFlags.WAS_TELEPATHIC_VISIBLE);\n    //     if (isTele && wasTele) {\n    //         // if (this.site.lightChanged(x, y)) {\n    //         //     this.site.redrawCell(x, y);\n    //         // }\n    //     } else if (!isTele && wasTele) {\n    //         // ceased being telepathically visible\n    //         this._callback(x, y, isTele);\n    //     } else if (!wasTele && isTele) {\n    //         // became telepathically visible\n    //         this._callback(x, y, isTele);\n    //     }\n    //     return isTele;\n    // }\n    updateCellDetect(flag, x, y) {\n        const isDetect = !!(flag & FovFlags.IS_DETECTED);\n        const wasDetect = !!(flag & FovFlags.WAS_DETECTED);\n        if (isDetect && wasDetect) {\n            // if (this.site.lightChanged(x, y)) {\n            //     this.site.redrawCell(x, y);\n            // }\n        }\n        else if (!isDetect && wasDetect) {\n            // ceased being detected visible\n            this._callback(x, y, isDetect);\n        }\n        else if (!wasDetect && isDetect) {\n            // became detected visible\n            this._callback(x, y, isDetect);\n        }\n        return isDetect;\n    }\n    // protected updateItemDetect(flag: number, x: number, y: number): boolean {\n    //     const isItem = !!(flag & FovFlags.ITEM_DETECTED);\n    //     const wasItem = !!(flag & FovFlags.WAS_ITEM_DETECTED);\n    //     if (isItem && wasItem) {\n    //         // if (this.site.lightChanged(x, y)) {\n    //         //     this.site.redrawCell(x, y);\n    //         // }\n    //     } else if (!isItem && wasItem) {\n    //         // ceased being detected visible\n    //         this._callback(x, y, isItem);\n    //     } else if (!wasItem && isItem) {\n    //         // became detected visible\n    //         this._callback(x, y, isItem);\n    //     }\n    //     return isItem;\n    // }\n    promoteCellVisibility(flag, x, y) {\n        if (flag & FovFlags.IN_FOV &&\n            this.site.hasVisibleLight(x, y) // &&\n        // !(cell.flags.cellMech & FovFlagsMech.DARKENED)\n        ) {\n            flag = this.flags[x][y] |= FovFlags.VISIBLE;\n        }\n        if (this.updateCellVisibility(flag, x, y))\n            return;\n        // if (this.updateCellClairyvoyance(flag, x, y)) return;\n        // if (this.updateCellTelepathy(flag, x, y)) return;\n        if (this.updateCellDetect(flag, x, y))\n            return;\n        // if (this.updateItemDetect(flag, x, y)) return;\n    }\n    updateFor(subject) {\n        return this.update(subject.x, subject.y, subject.visionDistance);\n    }\n    update(cx, cy, cr) {\n        if (cx === undefined) {\n            if (this.follow) {\n                return this.updateFor(this.follow);\n            }\n        }\n        // if (\n        //     // !this.needsUpdate &&\n        //     cx === undefined &&\n        //     !this.site.lightingChanged()\n        // ) {\n        //     return false;\n        // }\n        if (cr === undefined) {\n            cr = this.site.width + this.site.height;\n        }\n        // this.needsUpdate = false;\n        this.changed = true; // we updated something...\n        this.flags.update(this.demoteCellVisibility.bind(this));\n        this.site.eachViewport((x, y, radius, type) => {\n            let flag = type & FovFlags.VIEWPORT_TYPES;\n            if (!flag)\n                flag = FovFlags.VISIBLE;\n            // if (!flag)\n            //     throw new Error('Received invalid viewport type: ' + Flag.toString(FovFlags, type));\n            if (radius == 0) {\n                this.flags[x][y] |= flag;\n                return;\n            }\n            this.fov.calculate(x, y, radius, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= flag;\n                }\n            });\n        });\n        if (cx !== undefined && cy !== undefined) {\n            this.fov.calculate(cx, cy, cr, (x, y, v) => {\n                if (v) {\n                    this.flags[x][y] |= FovFlags.PLAYER;\n                }\n            });\n        }\n        // if (PLAYER.bonus.clairvoyance < 0) {\n        //   discoverCell(PLAYER.xLoc, PLAYER.yLoc);\n        // }\n        //\n        // if (PLAYER.bonus.clairvoyance != 0) {\n        // \tupdateClairvoyance();\n        // }\n        //\n        // updateTelepathy();\n        // updateMonsterDetection();\n        // updateLighting();\n        this.flags.forEach(this.promoteCellVisibility.bind(this));\n        // if (PLAYER.status.hallucinating > 0) {\n        // \tfor (theItem of DUNGEON.items) {\n        // \t\tif ((pmap[theItem.xLoc][theItem.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(theItem.xLoc, theItem.yLoc);\n        // \t\t}\n        // \t}\n        // \tfor (monst of DUNGEON.monsters) {\n        // \t\tif ((pmap[monst.xLoc][monst.yLoc].flags & DISCOVERED) && refreshDisplay) {\n        // \t\t\trefreshDungeonCell(monst.xLoc, monst.yLoc);\n        // \t\t}\n        // \t}\n        // }\n        return true;\n    }\n}\n//# sourceMappingURL=system.js.map","import * as Grid from './grid';\nimport * as XY from './xy';\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = XY.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false, maxDistance = NO_PATH) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (maxDistance <= 0)\n        maxDistance = NO_PATH;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, maxDistance, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = XY.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + XY.DIRS[dir][0];\n        newY = y + XY.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked &&\n            distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return XY.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance &&\n                        distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked, eightWays = false) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, eightWays);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//# sourceMappingURL=path.js.map","import * as List from './list';\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {EventFn} fn The listener function.\n     * @param {any} [context=null] The context to invoke the listener with.\n     * @param {boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {EventFn} fn - The function\n     * @param {any} [context] - The context Object.\n     * @param {boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== 'function') {\n        throw new TypeError('The listener must be a function');\n    }\n    const listener = new Listener(fn, context || null, once);\n    List.push(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {EventFn} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    List.forEach(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            List.remove(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {EventFn} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            List.remove(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === 'number')\n        return () => v;\n    if (typeof v === 'function')\n        return v;\n    let base = {};\n    if (typeof v === 'string') {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(':');\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        let value = 0;\n        if (typeof frequency === 'string') {\n            value = Number.parseInt(frequency);\n        }\n        else {\n            value = frequency;\n        }\n        if (levels.includes('-')) {\n            let [start, end] = levels\n                .split('-')\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? value : 0;\n        }\n        else if (levels.endsWith('+')) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? value : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? value : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","import { cosmetic } from '../rng';\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        this.dances = false;\n        this._const = false;\n        this._data = new Int16Array([\n            r,\n            g,\n            b,\n            rand,\n            redRand,\n            greenRand,\n            blueRand,\n        ]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this._data[0] * 2.550001);\n    }\n    get _r() {\n        return this._data[0];\n    }\n    set _r(v) {\n        this._data[0] = v;\n    }\n    get g() {\n        return Math.round(this._data[1] * 2.550001);\n    }\n    get _g() {\n        return this._data[1];\n    }\n    set _g(v) {\n        this._data[1] = v;\n    }\n    get b() {\n        return Math.round(this._data[2] * 2.550001);\n    }\n    get _b() {\n        return this._data[2];\n    }\n    set _b(v) {\n        this._data[2] = v;\n    }\n    get _rand() {\n        return this._data[3];\n    }\n    get _redRand() {\n        return this._data[4];\n    }\n    get _greenRand() {\n        return this._data[5];\n    }\n    get _blueRand() {\n        return this._data[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    isConst() {\n        return this._const;\n    }\n    equals(other) {\n        if (typeof other === 'string') {\n            if (!other.startsWith('#'))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === 'number') {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this._data.every((v, i) => {\n            return v == O._data[i];\n        });\n    }\n    copy(other) {\n        if (this.isConst())\n            return this.clone().copy(other);\n        if (other instanceof Color) {\n            this.dances = other.dances;\n        }\n        else if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n            for (let i = 0; i < this._data.length; ++i) {\n                this._data[i] = other._data[i] || 0;\n            }\n        }\n        else {\n            for (let i = 0; i < this._data.length; ++i) {\n                this._data[i] = other[i] || 0;\n            }\n            this._changed();\n        }\n        return this;\n    }\n    set(other) {\n        if (this.isConst())\n            return this.clone().set(other);\n        return this.copy(other);\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        if (this.isConst())\n            return this.clone().assign(...arguments);\n        for (let i = 0; i < this._data.length; ++i) {\n            this._data[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        if (this.isConst())\n            return this.clone().assignRGB(...arguments);\n        for (let i = 0; i < this._data.length; ++i) {\n            this._data[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        if (this.isConst())\n            return this.clone().nullify();\n        this._data[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        if (this.isConst())\n            return this.clone().blackOut();\n        for (let i = 0; i < this._data.length; ++i) {\n            this._data[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        if (!this.dances) {\n            return toColorInt(this._r, this._g, this._b, base256);\n        }\n        const rand = cosmetic.number(this._rand);\n        const redRand = cosmetic.number(this._redRand);\n        const greenRand = cosmetic.number(this._greenRand);\n        const blueRand = cosmetic.number(this._blueRand);\n        const r = this._r + rand + redRand;\n        const g = this._g + rand + greenRand;\n        const b = this._b + rand + blueRand;\n        return toColorInt(r, g, b, base256);\n    }\n    toLight() {\n        return [this._r, this._g, this._b];\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        if (this.isConst())\n            return this.clone().clamp();\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        if (this.isConst())\n            return this.clone().mix(other, percent);\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this._data.length; ++i) {\n            this._data[i] = Math.round((this._data[i] * keepPct + O._data[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        if (this.isConst())\n            return this.clone().lighten(percent);\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return this;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this._data[i] = Math.round((this._data[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        if (this.isConst())\n            return this.clone().darken(percent);\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return this;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this._data[i] = Math.round((this._data[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.isConst())\n            return this.clone().bake(clearDancing);\n        if (this.dances && !clearDancing)\n            return this;\n        this.dances = false;\n        const d = this._data;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < d.length; ++i) {\n                d[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        if (this.isConst())\n            return this.clone().add(other, percent);\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this._data.length; ++i) {\n            this._data[i] += Math.round((O._data[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        if (this.isConst())\n            return this.clone().scale(percent);\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this._data.length; ++i) {\n            this._data[i] = Math.round((this._data[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        if (this.isConst())\n            return this.clone().multiply(other);\n        let data;\n        if (Array.isArray(other)) {\n            data = other;\n        }\n        else {\n            if (other.isNull())\n                return this;\n            data = other._data;\n        }\n        const len = Math.max(3, Math.min(this._data.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this._data[i] = Math.round((this._data[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        if (this.isConst())\n            return this.clone().normalize();\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        if (v < 0)\n            return 'transparent';\n        return '#' + v.toString(16).padStart(base256 ? 6 : 3, '0');\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return 'null color';\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith('#')) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            ']');\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error('Unknown color name: ' + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color(0, 0, 0);\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === 'string') {\n        if (arg.startsWith('#')) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === 'number') {\n        return fromNumber(arg, base256);\n    }\n    throw new Error('Failed to make color - unknown argument: ' + JSON.stringify(arg));\n}\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === 'string') {\n        if (!arg.startsWith('#')) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothScalar(rgb, maxRgb = 255) {\n    return Math.floor(100 * Math.sin((Math.PI * rgb) / maxRgb));\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    // @ts-ignore\n    c._const = true;\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install('light_' + name, c.clone().lighten(25));\n    install('lighter_' + name, c.clone().lighten(50));\n    install('lightest_' + name, c.clone().lighten(75));\n    install('dark_' + name, c.clone().darken(25));\n    install('darker_' + name, c.clone().darken(50));\n    install('darkest_' + name, c.clone().darken(75));\n    return c;\n}\nexport const NONE = install('NONE', -1);\nconst BLACK = install('black', 0x000);\nconst WHITE = install('white', 0xfff);\ninstallSpread('teal', [30, 100, 100]);\ninstallSpread('brown', [60, 40, 0]);\ninstallSpread('tan', [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread('pink', [100, 60, 66]);\ninstallSpread('gray', [50, 50, 50]);\ninstallSpread('yellow', [100, 100, 0]);\ninstallSpread('purple', [100, 0, 100]);\ninstallSpread('green', [0, 100, 0]);\ninstallSpread('orange', [100, 50, 0]);\ninstallSpread('blue', [0, 0, 100]);\ninstallSpread('red', [100, 0, 0]);\ninstallSpread('amber', [100, 75, 0]);\ninstallSpread('flame', [100, 25, 0]);\ninstallSpread('fuchsia', [100, 0, 100]);\ninstallSpread('magenta', [100, 0, 75]);\ninstallSpread('crimson', [100, 0, 25]);\ninstallSpread('lime', [75, 100, 0]);\ninstallSpread('chartreuse', [50, 100, 0]);\ninstallSpread('sepia', [50, 40, 25]);\ninstallSpread('violet', [50, 0, 100]);\ninstallSpread('han', [25, 0, 100]);\ninstallSpread('cyan', [0, 100, 100]);\ninstallSpread('turquoise', [0, 100, 75]);\ninstallSpread('sea', [0, 100, 50]);\ninstallSpread('sky', [0, 75, 100]);\ninstallSpread('azure', [0, 50, 100]);\ninstallSpread('silver', [75, 75, 75]);\ninstallSpread('gold', [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from '../color';\nimport * as Utils from '../utils';\nexport class Mixer {\n    constructor(base) {\n        this.ch = Utils.first(base === null || base === void 0 ? void 0 : base.ch, -1);\n        this.fg = Color.make(base === null || base === void 0 ? void 0 : base.fg);\n        this.bg = Color.make(base === null || base === void 0 ? void 0 : base.bg);\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch || -1;\n        this.fg.copy(other.fg || -1);\n        this.bg.copy(other.bg || -1);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    get dances() {\n        return this.fg.dances || this.bg.dances;\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = -1;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(src, opacity) {\n        if (src === this)\n            return this;\n        // @ts-ignore\n        if (opacity === undefined)\n            opacity = src.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (src.ch)\n            this.ch = src.ch;\n        if ((src.fg && src.fg !== -1) || src.fg === 0)\n            this.fg.mix(src.fg, opacity);\n        if ((src.bg && src.bg !== -1) || src.bg === 0)\n            this.bg.mix(src.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    scale(multiplier, fg = true, bg = true) {\n        if (fg)\n            this.fg.scale(multiplier);\n        if (bg)\n            this.bg.scale(multiplier);\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n    toString() {\n        // prettier-ignore\n        return `{ ch: ${this.ch}, fg: ${this.fg.toString(true)}, bg: ${this.bg.toString(true)} }`;\n    }\n}\nexport function makeMixer(base) {\n    return new Mixer(base);\n}\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\nexport var helpers = {\n    default: (name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    },\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from './config';\nexport function compile(template, opts = {}) {\n    const F = opts.field || Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        if (typeof args === 'string') {\n            args = { value: args };\n        }\n        return sections.map((f) => f(args)).join('');\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        let h = Config.helpers[name];\n        if (h) {\n            return h(name, args);\n        }\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        h = Config.helpers.default;\n        return h(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || '0');\n    return function (args) {\n        let text = '' + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || ['', '', '0'];\n    let length = Number.parseInt(data[2] || '0');\n    const wantSign = data[1].includes('+');\n    const left = data[1].includes('-');\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = '' + value;\n        if (value > 0 && wantSign) {\n            text = '+' + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || ['', '', '0'];\n    let length = Number.parseInt(data[2] || '0');\n    const wantSign = data[1].includes('+');\n    const left = data[1].includes('-');\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = '' + value;\n        }\n        if (value > 0 && wantSign) {\n            text = '+' + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith('s')) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith('d')) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import { NOOP } from '../utils';\nimport * as Config from './config';\nexport function eachChar(text, fn, opts = {}) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = '' + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = opts.eachColor || NOOP;\n    let fg = opts.fg || Config.options.defaultFg;\n    let bg = opts.bg || Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = opts.colorStart || Config.options.colorStart;\n    const CE = opts.colorEnd || Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split('|');\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nlet inColor = false;\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    inColor = false;\n    let i = start;\n    while (count > 0 && i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            if (text[i] === CS) {\n                --count;\n            }\n            else {\n                while (text[i] !== CS)\n                    ++i;\n                inColor = true;\n            }\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            else {\n                inColor = false;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const len = length(text);\n    if (len >= width)\n        return text;\n    const colorLen = text.length - len;\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const len = length(text);\n    if (len >= width)\n        return text;\n    const colorLen = text.length - len;\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function truncate(text, width) {\n    const len = length(text);\n    if (len <= width)\n        return text;\n    const index = advanceChars(text, 0, width);\n    if (!inColor)\n        return text.substring(0, index);\n    const CE = Config.options.colorEnd;\n    return text.substring(0, index) + CE;\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CE && i < text.length) {\n                ++i;\n            }\n        }\n        else if (/[A-Za-z]/.test(ch)) {\n            return (text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1));\n        }\n        else {\n            ++i;\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\nexport function spliceRaw(msg, begin, deleteLength, add = '') {\n    const maxLen = msg.length;\n    if (begin >= maxLen)\n        return msg;\n    const preText = msg.substring(0, begin);\n    if (begin + deleteLength >= maxLen) {\n        return preText;\n    }\n    const postText = msg.substring(begin + deleteLength);\n    return preText + add + postText;\n}\n// https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\nexport function hash(str) {\n    let hash = 0;\n    const len = str.length;\n    for (let i = 0; i < len; i++) {\n        hash = (hash << 5) - hash + str.charCodeAt(i);\n        hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from './config';\nimport * as Utils from './utils';\nimport { eachChar } from './each';\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == ' ') {\n            while (text[i + 1] == ' ') {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == '-') {\n            return [i, l];\n        }\n        if (ch == '\\n') {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = '') {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, lineWidth, start, end, wordWidth, spaceLeftOnLine) {\n    while (start < end) {\n        // do not need to hyphenate\n        if (spaceLeftOnLine >= wordWidth)\n            return [text, end];\n        // not much room left and word fits on next line\n        if (spaceLeftOnLine < 4 && wordWidth <= lineWidth) {\n            text = splice(text, start - 1, 1, '\\n');\n            return [text, end + 1];\n        }\n        // if will fit on this line and next...\n        if (wordWidth < spaceLeftOnLine + lineWidth) {\n            const w = Utils.advanceChars(text, start, spaceLeftOnLine - 1);\n            text = splice(text, w, 0, '-\\n');\n            return [text, end + 2];\n        }\n        if (spaceLeftOnLine < 5) {\n            text = splice(text, start - 1, 1, '\\n');\n            spaceLeftOnLine = lineWidth;\n            continue;\n        }\n        // one hyphen will work...\n        const hyphenAt = Math.min(spaceLeftOnLine - 1, Math.floor(wordWidth / 2));\n        const w = Utils.advanceChars(text, start, hyphenAt);\n        text = splice(text, w, 0, '-\\n');\n        start = w + 2;\n        end += 2;\n        wordWidth -= hyphenAt;\n    }\n    return [text, end];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error('Need string and width');\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf('\\n') == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split('\\n');\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join('\\n');\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == '-') {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? '\\n' : '';\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, '\\n'); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width = 200, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    if (!source)\n        return output;\n    if (width <= 0)\n        width = 200;\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == '\\n') {\n            let color = fg0 || bg0\n                ? `${CS}${fg0 ? fg0 : ''}${bg0 ? '|' + bg0 : ''}${CS}`\n                : '';\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : ''}${bg0 ? '|' + bg0 : ''}${CS}` : '';\n    if (start < text.length) {\n        output.push(color + text.substring(start));\n    }\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from './compile';\nimport { eachChar } from './each';\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, spliceRaw, truncate, } from './utils';\nimport { wordWrap, splitIntoLines } from './lines';\nimport { addHelper, options } from './config';\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, spliceRaw, truncate, };\n//# sourceMappingURL=index.js.map","import { Mixer } from '../sprite/mixer';\nimport * as Color from '../color';\nimport * as Text from '../text';\nexport class DataBuffer {\n    constructor(width, height) {\n        this.changed = false;\n        this._width = width;\n        this._height = height;\n        this._data = this._makeData();\n    }\n    _makeData() {\n        return new Uint32Array(this.width * this.height);\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    clone() {\n        const other = new DataBuffer(this._width, this._height);\n        other.copy(this);\n        return other;\n    }\n    resize(width, height) {\n        const orig = this._data;\n        this._width = width;\n        this._height = height;\n        if (orig.length < width * height) {\n            this._data = new Uint32Array(width * height);\n            this._data.set(orig, 0);\n        }\n        else {\n            this._data = orig.slice(width * height);\n        }\n        this.changed = true;\n    }\n    _index(x, y) {\n        return y * this.width + x;\n    }\n    get(x, y) {\n        if (!this.hasXY(x, y))\n            return 0;\n        let index = this._index(x, y);\n        return this._data[index] || 0;\n    }\n    info(x, y) {\n        const style = this.get(x, y);\n        const glyph = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { glyph, fg, bg };\n    }\n    set(x, y, style) {\n        if (!this.hasXY(x, y))\n            return;\n        let index = this._index(x, y);\n        const current = this._data[index];\n        if (current !== style) {\n            this._data[index] = style;\n            return true;\n        }\n        return false;\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        if (!ch || !ch.length)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        if (!this.hasXY(x, y))\n            return this;\n        const current = this.get(x, y);\n        if (typeof glyph !== 'number') {\n            glyph = this.toGlyph(glyph);\n        }\n        if (typeof fg !== 'number') {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== 'number') {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this.set(x, y, style);\n        if (style !== current)\n            this.changed = true;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (arguments.length == 1) {\n            bg = Color.from(glyph).toInt();\n            glyph = 0;\n            fg = 0;\n        }\n        else {\n            if (typeof glyph !== 'number') {\n                if (typeof glyph === 'string') {\n                    glyph = this.toGlyph(glyph);\n                }\n                else {\n                    throw new Error('glyph must be number or char');\n                }\n            }\n            if (typeof fg !== 'number') {\n                fg = Color.from(fg).toInt();\n            }\n            if (typeof bg !== 'number') {\n                bg = Color.from(bg).toInt();\n            }\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        this.changed = true;\n        return this;\n    }\n    copy(other) {\n        this._width = other._width;\n        this._height = other._height;\n        this._data.set(other._data);\n        this.changed = true;\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1, maxWidth = 0, align = 'left') {\n        if (!this.hasXY(x, y))\n            return 0;\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        maxWidth = Math.min(maxWidth || this.width, this.width - x);\n        if (align == 'right') {\n            const len = Text.length(text);\n            x += maxWidth - len;\n        }\n        else if (align == 'center') {\n            const len = Text.length(text);\n            x += Math.floor((maxWidth - len) / 2);\n        }\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width || i >= maxWidth)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, { fg, bg });\n        return 1; // used 1 line\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (!this.hasXY(x, y))\n            return 0;\n        if (typeof fg !== 'number')\n            fg = Color.from(fg);\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let lineCount = 0;\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == '\\n') {\n                while (xi < x + width) {\n                    this.draw(xi++, y + lineCount, 0, 0x000, bg0);\n                }\n                ++lineCount;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y + lineCount, ch, fg0, bg0);\n        }, { fg, bg });\n        while (xi < x + width) {\n            this.draw(xi++, y + lineCount, 0, 0x000, bg);\n        }\n        return lineCount + 1;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== 'number')\n            ch = this.toGlyph(ch);\n        if (typeof fg !== 'number')\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== 'number')\n            bg = Color.from(bg).toInt();\n        const xw = Math.min(x + w, this.width);\n        const yh = Math.min(y + h, this.height);\n        for (let i = x; i < xw; ++i) {\n            for (let j = y; j < yh; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== 'number')\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, bg, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (!this.hasXY(x, y))\n            return this;\n        if (typeof color !== 'number') {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.info(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent, x = 0, y = 0, width = 0, height = 0) {\n        color = Color.from(color);\n        const mixer = new Mixer();\n        if (!width)\n            width = x ? 1 : this.width;\n        if (!height)\n            height = y ? 1 : this.height;\n        const endX = Math.min(width + x, this.width);\n        const endY = Math.min(height + y, this.height);\n        for (let i = x; i < endX; ++i) {\n            for (let j = y; j < endY; ++j) {\n                const data = this.info(i, j);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(i, j, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = '    ';\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += ' ';\n            header += x % 10;\n        }\n        data.push(header);\n        data.push('');\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${('' + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += ' ';\n                const data = this.info(x, y);\n                const glyph = data.glyph;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join('\\n'));\n    }\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this);\n    }\n    // get canvas() { return this._target; }\n    clone() {\n        const other = new (this.constructor)(this._target);\n        other.copy(this);\n        return other;\n    }\n    toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.draw(this);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this);\n        return this;\n    }\n}\n//# sourceMappingURL=buffer.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || 'monospace';\n        this._node = document.createElement('canvas');\n        this._ctx = this.node.getContext('2d');\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === 'string') {\n            if (src.startsWith('data:'))\n                throw new Error('Glyph: You must load a data string into an image element and use that.');\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error('Glyph: Failed to find image element with id:' + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === 'string') {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (!ch || !ch.length)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize ||\n            opts.size ||\n            Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = '' + size + 'px ' + opts.font;\n        this._ctx.textAlign = 'center';\n        this._ctx.textBaseline = 'middle';\n        this._ctx.fillStyle = 'white';\n    }\n    draw(n, ch) {\n        if (n >= 256)\n            throw new Error('Cannot draw more than 256 glyphs.');\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        this._ctx.fillStyle = 'black';\n        this._ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.fillStyle = 'white';\n        if (typeof ch === 'function') {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        [\n            ' ',\n            '\\u263a',\n            '\\u263b',\n            '\\u2665',\n            '\\u2666',\n            '\\u2663',\n            '\\u2660',\n            '\\u263c',\n            '\\u2600',\n            '\\u2606',\n            '\\u2605',\n            '\\u2023',\n            '\\u2219',\n            '\\u2043',\n            '\\u2022',\n            '\\u2690',\n            '\\u2691',\n            '\\u2610',\n            '\\u2611',\n            '\\u2612',\n            '\\u26ac',\n            '\\u29bf',\n            '\\u2191',\n            '\\u2192',\n            '\\u2193',\n            '\\u2190',\n            '\\u2194',\n            '\\u2195',\n            '\\u25b2',\n            '\\u25b6',\n            '\\u25bc',\n            '\\u25c0', // big left arrow\n        ].forEach((ch, i) => {\n            this.draw(i, ch);\n        });\n        if (!basicOnly) {\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                '\\u2302',\n                '\\u00C7',\n                '\\u00FC',\n                '\\u00E9',\n                '\\u00E2',\n                '\\u00E4',\n                '\\u00E0',\n                '\\u00E5',\n                '\\u00E7',\n                '\\u00EA',\n                '\\u00EB',\n                '\\u00E8',\n                '\\u00EF',\n                '\\u00EE',\n                '\\u00EC',\n                '\\u00C4',\n                '\\u00C5',\n                '\\u00C9',\n                '\\u00E6',\n                '\\u00C6',\n                '\\u00F4',\n                '\\u00F6',\n                '\\u00F2',\n                '\\u00FB',\n                '\\u00F9',\n                '\\u00FF',\n                '\\u00D6',\n                '\\u00DC',\n                '\\u00A2',\n                '\\u00A3',\n                '\\u00A5',\n                '\\u20A7',\n                '\\u0192',\n                '\\u00E1',\n                '\\u00ED',\n                '\\u00F3',\n                '\\u00FA',\n                '\\u00F1',\n                '\\u00D1',\n                '\\u00AA',\n                '\\u00BA',\n                '\\u00BF',\n                '\\u2310',\n                '\\u00AC',\n                '\\u00BD',\n                '\\u00BC',\n                '\\u00A1',\n                '\\u00AB',\n                '\\u00BB',\n                '\\u2591',\n                '\\u2592',\n                '\\u2593',\n                '\\u2502',\n                '\\u2524',\n                '\\u2561',\n                '\\u2562',\n                '\\u2556',\n                '\\u2555',\n                '\\u2563',\n                '\\u2551',\n                '\\u2557',\n                '\\u255D',\n                '\\u255C',\n                '\\u255B',\n                '\\u2510',\n                '\\u2514',\n                '\\u2534',\n                '\\u252C',\n                '\\u251C',\n                '\\u2500',\n                '\\u253C',\n                '\\u255E',\n                '\\u255F',\n                '\\u255A',\n                '\\u2554',\n                '\\u2569',\n                '\\u2566',\n                '\\u2560',\n                '\\u2550',\n                '\\u256C',\n                '\\u2567',\n                '\\u2568',\n                '\\u2564',\n                '\\u2565',\n                '\\u2559',\n                '\\u2558',\n                '\\u2552',\n                '\\u2553',\n                '\\u256B',\n                '\\u256A',\n                '\\u2518',\n                '\\u250C',\n                '\\u2588',\n                '\\u2584',\n                '\\u258C',\n                '\\u2590',\n                '\\u2580',\n                '\\u03B1',\n                '\\u00DF',\n                '\\u0393',\n                '\\u03C0',\n                '\\u03A3',\n                '\\u03C3',\n                '\\u00B5',\n                '\\u03C4',\n                '\\u03A6',\n                '\\u0398',\n                '\\u03A9',\n                '\\u03B4',\n                '\\u221E',\n                '\\u03C6',\n                '\\u03B5',\n                '\\u2229',\n                '\\u2261',\n                '\\u00B1',\n                '\\u2265',\n                '\\u2264',\n                '\\u2320',\n                '\\u2321',\n                '\\u00F7',\n                '\\u2248',\n                '\\u00B0',\n                '\\u2219',\n                '\\u00B7',\n                '\\u221A',\n                '\\u207F',\n                '\\u00B2',\n                '\\u25A0',\n                '\\u00A0',\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import { Buffer } from './buffer';\nimport * as IO from '../io';\nimport * as Utils from '../utils';\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = 'NotSupportedError';\n    }\n}\nexport class BaseCanvas {\n    constructor(width, height, glyphs) {\n        this.mouse = { x: -1, y: -1 };\n        this._renderRequested = false;\n        this._width = 50;\n        this._height = 25;\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(width, height, glyphs);\n        this._buffer = new Buffer(this);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        if (typeof ch === 'number')\n            return ch;\n        return this._glyphs.forChar(ch);\n    }\n    get buffer() {\n        return this._buffer;\n    }\n    _createNode() {\n        return document.createElement('canvas');\n    }\n    _configure(width, height, glyphs) {\n        this._width = width;\n        this._height = height;\n        this._setGlyphs(glyphs);\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        if (this._buffer) {\n            this._buffer.resize(width, height);\n        }\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        requestAnimationFrame(() => this._render());\n    }\n    copyTo(data) {\n        if (!this.buffer)\n            return; // startup/constructor\n        data.copy(this.buffer);\n    }\n    render() {\n        this.buffer.render();\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    set onclick(fn) {\n        if (fn) {\n            this.node.onclick = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onclick = null;\n        }\n    }\n    set onmousemove(fn) {\n        if (fn) {\n            this.node.onmousemove = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                if (x == this.mouse.x && y == this.mouse.y)\n                    return;\n                this.mouse.x = x;\n                this.mouse.y = y;\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmousemove = null;\n        }\n    }\n    set onmouseup(fn) {\n        if (fn) {\n            this.node.onmouseup = (e) => {\n                const x = this._toX(e.offsetX);\n                const y = this._toY(e.offsetY);\n                const ev = IO.makeMouseEvent(e, x, y);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onmouseup = null;\n        }\n    }\n    set onkeydown(fn) {\n        if (fn) {\n            this.node.onkeydown = (e) => {\n                e.stopPropagation();\n                const ev = IO.makeKeyEvent(e);\n                fn(ev);\n            };\n        }\n        else {\n            this.node.onkeydown = null;\n        }\n    }\n    _toX(offsetX) {\n        return Utils.clamp(Math.floor(this.width * (offsetX / this.node.clientWidth)), 0, this.width - 1);\n    }\n    _toY(offsetY) {\n        return Utils.clamp(Math.floor(this.height * (offsetY / this.node.clientHeight)), 0, this.height - 1);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    _createContext() {\n        const ctx = this.node.getContext('2d');\n        if (!ctx) {\n            throw new NotSupportedError('2d context not supported!');\n        }\n        this._ctx = ctx;\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     const result = super._set(x, y, style);\n    //     if (result) {\n    //         this._changed[y * this.width + x] = 1;\n    //     }\n    //     return result;\n    // }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    draw(data) {\n        // TODO - Remove?\n        if (data._data.every((style, i) => style === this._data[i]))\n            return false;\n        data.changed = false;\n        let changed = false;\n        const src = data._data;\n        const raw = this._data;\n        for (let i = 0; i < raw.length; ++i) {\n            if (raw[i] !== src[i]) {\n                raw[i] = src[i];\n                this._changed[i] = 1;\n                changed = true;\n            }\n        }\n        if (!changed)\n            return false;\n        this.buffer.changed = true;\n        this._requestRender();\n        return true;\n    }\n    _render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n        this.buffer.changed = false;\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) +\n                    inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) +\n                    inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] =\n                pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\n// export function withImage(image: ImageOptions | HTMLImageElement | string) {\n//     let opts = {} as CanvasOptions;\n//     if (typeof image === 'string') {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else if (image instanceof HTMLImageElement) {\n//         opts.glyphs = Glyphs.fromImage(image);\n//     } else {\n//         if (!image.image) throw new Error('You must supply the image.');\n//         Object.assign(opts, image);\n//         opts.glyphs = Glyphs.fromImage(image.image);\n//     }\n//     let canvas;\n//     try {\n//         canvas = new Canvas(opts);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(opts);\n//     }\n//     return canvas;\n// }\n// export function withFont(src: FontOptions | string) {\n//     if (typeof src === 'string') {\n//         src = { font: src } as FontOptions;\n//     }\n//     src.glyphs = Glyphs.fromFont(src);\n//     let canvas;\n//     try {\n//         canvas = new Canvas(src);\n//     } catch (e) {\n//         if (!(e instanceof NotSupportedError)) throw e;\n//     }\n//     if (!canvas) {\n//         canvas = new Canvas2D(src);\n//     }\n//     return canvas;\n// }\n//# sourceMappingURL=canvas.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","import * as shaders from './shaders';\nimport * as Canvas from './canvas';\nconst VERTICES_PER_TILE = 6;\n// export class BufferGL extends Buffer.Buffer {\n//     constructor(canvas: Buffer.BufferTarget) {\n//         super(canvas);\n//     }\n//     protected _makeData(): Uint32Array {\n//         return new Uint32Array(this.width * this.height * VERTICES_PER_TILE);\n//     }\n//     protected _index(x: number, y: number): number {\n//         let index = y * this.width + x;\n//         index *= VERTICES_PER_TILE;\n//         return index;\n//     }\n//     set(x: number, y: number, style: number): boolean {\n//         let index = this._index(x, y);\n//         const current = this._data[index + 2];\n//         if (current !== style) {\n//             this._data[index + 2] = style;\n//             this._data[index + 5] = style;\n//             this.changed = true;\n//             return true;\n//         }\n//         return false;\n//     }\n//     copy(other: Buffer.DataBuffer): this {\n//         if (this.height !== other.height || this.width !== other.width)\n//             throw new Error('Buffers must be same size!');\n//         if (this._data.length === other._data.length) {\n//             this._data.set(other._data);\n//         } else {\n//             for (let x = 0; x < this.width; ++x) {\n//                 for (let y = 0; y < this.width; ++y) {\n//                     this.set(x, y, other.get(x, y));\n//                 }\n//             }\n//         }\n//         this.changed = true;\n//         return this;\n//     }\n// }\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class CanvasGL extends Canvas.BaseCanvas {\n    constructor(width, height, glyphs) {\n        super(width, height, glyphs);\n    }\n    // _createBuffer() {\n    //     return new BufferGL(this);\n    // }\n    _createContext() {\n        let gl = this.node.getContext('webgl2');\n        if (!gl) {\n            throw new Canvas.NotSupportedError('WebGL 2 not supported');\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms['font'], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs['style'], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms['tileSize'], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms['viewportSize'], this.node.width, this.node.height);\n        // this._data = new Uint32Array(width * height * VERTICES_PER_TILE);\n        this._createGeometry();\n        this._createData();\n    }\n    // protected _set(x: number, y: number, style: number) {\n    //     let index = y * this.width + x;\n    //     index *= VERTICES_PER_TILE;\n    //     const current = this._data[index + 2];\n    //     if (current !== style) {\n    //         this._data[index + 2] = style;\n    //         this._data[index + 5] = style;\n    //         this._requestRender();\n    //         return true;\n    //     }\n    //     return false;\n    // }\n    draw(data) {\n        // TODO - remove?\n        if (data._data.every((style, i) => {\n            const index = 2 + i * VERTICES_PER_TILE;\n            return style === this._data[index];\n        })) {\n            return false;\n        }\n        data._data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n        data.changed = false;\n        return true;\n    }\n    copyTo(data) {\n        data.changed = false;\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data._data[i] = this._data[index + 2];\n        }\n    }\n    _render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n        this.buffer.changed = false;\n    }\n}\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs['position'], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs['uv'], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvasGL.js.map","import { Glyphs } from './glyphs';\nimport { DataBuffer } from './buffer';\nimport { Canvas2D, NotSupportedError, } from './canvas';\nimport { CanvasGL } from './canvasGL';\nimport * as IO from '../io';\nexport function make(...args) {\n    let width = args[0];\n    let height = args[1];\n    let opts = args[2];\n    if (args.length == 1) {\n        opts = args[0];\n        height = opts.height || 34;\n        width = opts.width || 80;\n    }\n    opts = opts || { font: 'monospace' };\n    let glyphs;\n    if (opts.image) {\n        glyphs = Glyphs.fromImage(opts.image);\n    }\n    else {\n        glyphs = Glyphs.fromFont(opts);\n    }\n    let canvas;\n    try {\n        canvas = new CanvasGL(width, height, glyphs);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(width, height, glyphs);\n    }\n    if (opts.div) {\n        let el;\n        if (typeof opts.div === 'string') {\n            el = document.getElementById(opts.div);\n            if (!el) {\n                console.warn('Failed to find parent element by ID: ' + opts.div);\n            }\n        }\n        else {\n            el = opts.div;\n        }\n        if (el && el.appendChild) {\n            el.appendChild(canvas.node);\n        }\n    }\n    if (opts.io || opts.loop) {\n        let loop = opts.loop || IO.loop;\n        canvas.onclick = (e) => loop.pushEvent(e);\n        canvas.onmousemove = (e) => loop.pushEvent(e);\n        canvas.onmouseup = (e) => loop.pushEvent(e);\n        // canvas.onkeydown = (e) => loop.pushEvent(e); // Keyboard events require tabindex to be set, better to let user do this.\n    }\n    return canvas;\n}\nexport function makeBuffer(width, height) {\n    return new DataBuffer(width, height);\n}\n//# sourceMappingURL=make.js.map","import * as Color from '../color';\nimport { clamp } from '../utils';\nexport class Sprite {\n    constructor(ch, fg, bg, opacity = 100) {\n        if (!ch)\n            ch = null;\n        this.ch = ch;\n        this.fg = Color.from(fg);\n        this.bg = Color.from(bg);\n        this.opacity = clamp(opacity, 0, 100);\n    }\n    clone() {\n        return new Sprite(this.ch, this.fg, this.bg, this.opacity);\n    }\n    toString() {\n        const parts = [];\n        if (this.ch)\n            parts.push('ch: ' + this.ch);\n        if (!this.fg.isNull())\n            parts.push('fg: ' + this.fg.toString(true));\n        if (!this.bg.isNull())\n            parts.push('bg: ' + this.bg.toString(true));\n        if (this.opacity !== 100)\n            parts.push('opacity: ' + this.opacity);\n        return '{ ' + parts.join(', ') + ' }';\n    }\n}\nexport const sprites = {};\nexport function make(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == 'number' &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || null;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === 'string' && args[0].length == 1) {\n            ch = args[0];\n            fg = 'white'; // white is default?\n        }\n        else if ((typeof args[0] === 'string' && args[0].length > 1) ||\n            typeof args[0] === 'number') {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || null;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === 'string')\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === 'string')\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nexport function from(...args) {\n    if (args.length == 1 && typeof args[0] === 'string') {\n        const sprite = sprites[args[0]];\n        if (!sprite)\n            throw new Error('Failed to find sprite: ' + args[0]);\n        return sprite;\n    }\n    return make(args);\n}\nexport function install(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = make(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","export const data = {};\nexport const config = {};\n// export const make: any = {};\n// export const flags: any = {};\n//# sourceMappingURL=gw.js.map","import * as Text from './text/index';\nimport * as GW from './gw';\nimport { TRUE } from './utils';\nexport const templates = {};\nGW.config.message = GW.config.message || {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n    return template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\nexport function get(msgOrId) {\n    return templates[msgOrId] || null;\n}\nexport const handlers = [];\nexport function add(msg, args) {\n    return addAt(-1, -1, msg, args);\n}\nexport function addAt(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addMessage(x, y, msg));\n}\nexport function addCombat(x, y, msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    handlers.forEach((h) => h.addCombatMessage(x, y, msg));\n}\nexport class MessageCache {\n    constructor(opts = {}) {\n        this.ARCHIVE = [];\n        this.CONFIRMED = [];\n        this.ARCHIVE_LINES = 30;\n        this.MSG_WIDTH = 80;\n        this.NEXT_WRITE_INDEX = 0;\n        this.NEEDS_UPDATE = true;\n        this.COMBAT_MESSAGE = null;\n        this.matchFn = opts.match || TRUE;\n        this.ARCHIVE_LINES = opts.length || 30;\n        this.MSG_WIDTH = opts.width || 80;\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            this.ARCHIVE[i] = null;\n            this.CONFIRMED[i] = false;\n        }\n        handlers.push(this);\n    }\n    get needsUpdate() {\n        return this.NEEDS_UPDATE;\n    }\n    set needsUpdate(needs) {\n        this.NEEDS_UPDATE = needs;\n    }\n    // function messageWithoutCaps(msg, requireAcknowledgment) {\n    _addMessageLine(msg) {\n        if (!Text.length(msg)) {\n            return;\n        }\n        // Add the message to the archive.\n        this.ARCHIVE[this.NEXT_WRITE_INDEX] = msg;\n        this.CONFIRMED[this.NEXT_WRITE_INDEX] = false;\n        this.NEXT_WRITE_INDEX =\n            (this.NEXT_WRITE_INDEX + 1) % this.ARCHIVE_LINES;\n    }\n    addMessage(x, y, msg) {\n        if (!this.matchFn(x, y))\n            return;\n        this.commitCombatMessage();\n        this._addMessage(msg);\n    }\n    _addMessage(msg) {\n        var _a;\n        msg = Text.capitalize(msg);\n        // // Implement the American quotation mark/period/comma ordering rule.\n        // for (i=0; text.text[i] && text.text[i+1]; i++) {\n        //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n        //         i += 4;\n        //     } else if (text.text[i] === '\"'\n        //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n        // \t\t{\n        // \t\t\tconst replace = text.text[i+1] + '\"';\n        // \t\t\ttext.spliceRaw(i, 2, replace);\n        //     }\n        // }\n        const lines = Text.splitIntoLines(msg, this.MSG_WIDTH);\n        if ((_a = GW.config.message) === null || _a === void 0 ? void 0 : _a.reverseMultiLine) {\n            lines.reverse();\n        }\n        lines.forEach((l) => this._addMessageLine(l));\n        // display the message:\n        this.NEEDS_UPDATE = true;\n        // if (GAME.playbackMode) {\n        // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n        // }\n    }\n    addCombatMessage(x, y, msg) {\n        if (!this.matchFn(x, y))\n            return;\n        this._addCombatMessage(msg);\n    }\n    _addCombatMessage(msg) {\n        if (!this.COMBAT_MESSAGE) {\n            this.COMBAT_MESSAGE = msg;\n        }\n        else {\n            this.COMBAT_MESSAGE += ', ' + Text.capitalize(msg);\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    commitCombatMessage() {\n        if (!this.COMBAT_MESSAGE)\n            return false;\n        this._addMessage(this.COMBAT_MESSAGE + '.');\n        this.COMBAT_MESSAGE = null;\n        return true;\n    }\n    confirmAll() {\n        for (let i = 0; i < this.CONFIRMED.length; i++) {\n            this.CONFIRMED[i] = true;\n        }\n        this.NEEDS_UPDATE = true;\n    }\n    forEach(fn) {\n        this.commitCombatMessage();\n        for (let i = 0; i < this.ARCHIVE_LINES; ++i) {\n            const n = (this.ARCHIVE_LINES - i + this.NEXT_WRITE_INDEX - 1) %\n                this.ARCHIVE_LINES;\n            const msg = this.ARCHIVE[n];\n            if (!msg)\n                return;\n            if (fn(msg, this.CONFIRMED[n], i) === false)\n                return;\n        }\n    }\n    get length() {\n        let count = 0;\n        this.forEach(() => ++count);\n        return count;\n    }\n}\n//# sourceMappingURL=message.js.map","import * as XY from './xy';\nimport * as GRID from './grid';\nimport { random } from './rng';\nexport class Blob {\n    constructor(opts = {}) {\n        this.options = {\n            rng: random,\n            rounds: 5,\n            minWidth: 10,\n            minHeight: 10,\n            maxWidth: 40,\n            maxHeight: 20,\n            percentSeeded: 50,\n            birthParameters: 'ffffffttt',\n            survivalParameters: 'ffffttttt',\n        };\n        Object.assign(this.options, opts);\n        this.options.birthParameters = this.options.birthParameters.toLowerCase();\n        this.options.survivalParameters = this.options.survivalParameters.toLowerCase();\n        if (this.options.minWidth >= this.options.maxWidth) {\n            this.options.minWidth = Math.round(0.75 * this.options.maxWidth);\n            this.options.maxWidth = Math.round(1.25 * this.options.maxWidth);\n        }\n        if (this.options.minHeight >= this.options.maxHeight) {\n            this.options.minHeight = Math.round(0.75 * this.options.maxHeight);\n            this.options.maxHeight = Math.round(1.25 * this.options.maxHeight);\n        }\n    }\n    carve(width, height, setFn) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let bounds = new XY.Bounds(0, 0, 0, 0);\n        const dest = GRID.alloc(width, height);\n        const left = Math.floor((dest.width - this.options.maxWidth) / 2);\n        const top = Math.floor((dest.height - this.options.maxHeight) / 2);\n        let tries = 10;\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            dest.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < this.options.maxWidth; i++) {\n                for (j = 0; j < this.options.maxHeight; j++) {\n                    dest[i + left][j + top] = this.options.rng.chance(this.options.percentSeeded)\n                        ? 1\n                        : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < this.options.rounds; k++) {\n                if (!this._cellularAutomataRound(dest)) {\n                    k = this.options.rounds; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < dest.width; i++) {\n                for (j = 0; j < dest.height; j++) {\n                    if (dest[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = dest.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            dest.valueBounds(topBlobNumber, bounds);\n        } while ((bounds.width < this.options.minWidth ||\n            bounds.height < this.options.minHeight ||\n            topBlobNumber == 0) &&\n            --tries);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < dest.width; i++) {\n            for (j = 0; j < dest.height; j++) {\n                if (dest[i][j] == topBlobNumber) {\n                    setFn(i, j);\n                }\n            }\n        }\n        GRID.free(dest);\n        // Populate the returned variables.\n        return bounds;\n    }\n    _cellularAutomataRound(grid) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = GRID.alloc(grid.width, grid.height);\n        buffer2.copy(grid); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < grid.width; i++) {\n            for (j = 0; j < grid.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < XY.DIRS.length; dir++) {\n                    newX = i + XY.DIRS[dir][0];\n                    newY = j + XY.DIRS[dir][1];\n                    if (grid.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] &&\n                    this.options.birthParameters[nbCount] == 't') {\n                    grid[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] &&\n                    this.options.survivalParameters[nbCount] == 't') {\n                    // survival\n                }\n                else {\n                    grid[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        GRID.free(buffer2);\n        return didSomething;\n    }\n}\nexport function fillBlob(grid, opts = {}) {\n    const blob = new Blob(opts);\n    return blob.carve(grid.width, grid.height, (x, y) => (grid[x][y] = 1));\n}\nexport function make(opts = {}) {\n    return new Blob(opts);\n}\n//# sourceMappingURL=blob.js.map","import * as XY from '../xy';\nimport * as Utils from '../utils';\nimport * as Range from '../range';\nimport * as Grid from '../grid';\nimport * as Color from '../color';\nimport { config as CONFIG } from '../gw';\n// const LIGHT_SMOOTHING_THRESHOLD = 150;       // light components higher than this magnitude will be toned down a little\nexport const config = (CONFIG.light = {\n    INTENSITY_DARK: 20,\n    INTENSITY_SHADOW: 50,\n}); // less than 20% for highest color in rgb\nconst LIGHT_COMPONENTS = Color.make();\nexport class Light {\n    constructor(color, radius = 1, fadeTo = 0, pass = false) {\n        this.fadeTo = 0;\n        this.passThroughActors = false;\n        this.id = null;\n        this.color = Color.from(color); /* color */\n        this.radius = Range.make(radius);\n        this.fadeTo = fadeTo;\n        this.passThroughActors = pass; // generally no, but miner light does (TODO - string parameter?  'false' or 'true')\n    }\n    copy(other) {\n        this.color = other.color;\n        this.radius.copy(other.radius);\n        this.fadeTo = other.fadeTo;\n        this.passThroughActors = other.passThroughActors;\n    }\n    get intensity() {\n        return intensity(this.color);\n    }\n    // Returns true if any part of the light hit cells that are in the player's field of view.\n    paint(site, x, y, maintainShadows = false, isMinersLight = false) {\n        if (!site)\n            return false;\n        let k;\n        // let colorComponents = [0,0,0];\n        let lightMultiplier = 0;\n        let radius = this.radius.value();\n        let outerRadius = Math.ceil(radius);\n        if (outerRadius < 1)\n            return false;\n        // calcLightComponents(colorComponents, this);\n        LIGHT_COMPONENTS.copy(this.color).bake();\n        // console.log('paint', LIGHT_COMPONENTS.toString(true), x, y, outerRadius);\n        // the miner's light does not dispel IS_IN_SHADOW,\n        // so the player can be in shadow despite casting his own light.\n        const dispelShadows = !isMinersLight &&\n            !maintainShadows &&\n            !isDarkLight(LIGHT_COMPONENTS);\n        const fadeToPercent = this.fadeTo;\n        const grid = Grid.alloc(site.width, site.height, 0);\n        site.calcFov(x, y, outerRadius, this.passThroughActors, (i, j) => {\n            grid[i][j] = 1;\n        });\n        // let overlappedFieldOfView = false;\n        const lightValue = [0, 0, 0];\n        grid.forCircle(x, y, outerRadius, (v, i, j) => {\n            if (!v)\n                return;\n            // const cell = map.cell(i, j);\n            lightMultiplier = Math.floor(100 -\n                (100 - fadeToPercent) *\n                    (XY.distanceBetween(x, y, i, j) / radius));\n            for (k = 0; k < 3; ++k) {\n                lightValue[k] = Math.floor((LIGHT_COMPONENTS._data[k] * lightMultiplier) / 100);\n            }\n            site.addCellLight(i, j, lightValue, dispelShadows);\n            // if (dispelShadows) {\n            //     map.clearCellFlag(i, j, CellFlags.IS_IN_SHADOW);\n            // }\n            // if (map.isVisible(i, j)) {\n            //     overlappedFieldOfView = true;\n            // }\n            // console.log(i, j, lightMultiplier, cell.light);\n        });\n        // if (dispelShadows) {\n        //     map.clearCellFlag(x, y, CellFlags.IS_IN_SHADOW);\n        // }\n        Grid.free(grid);\n        // return overlappedFieldOfView;\n        return true;\n    }\n}\nexport function intensity(light) {\n    let data = light;\n    if (light instanceof Color.Color) {\n        data = light._data;\n    }\n    return Math.max(data[0], data[1], data[2]);\n}\nexport function isDarkLight(light, threshold = 20) {\n    return intensity(light) <= threshold;\n}\nexport function isShadowLight(light, threshold = 40) {\n    return intensity(light) <= threshold;\n}\nexport function make(...args) {\n    if (args.length == 1) {\n        const config = args[0];\n        if (typeof config === 'string') {\n            const cached = lights[config];\n            if (cached)\n                return cached;\n            const [color, radius, fadeTo, pass] = config\n                .split(/[,|]/)\n                .map((t) => t.trim());\n            return new Light(Color.from(color), Range.from(radius || 1), Number.parseInt(fadeTo || '0'), !!pass && pass !== 'false');\n        }\n        else if (Array.isArray(config)) {\n            const [color, radius, fadeTo, pass] = config;\n            return new Light(color, radius, fadeTo, pass);\n        }\n        else if (config && config.color) {\n            return new Light(Color.from(config.color), Range.from(config.radius), Number.parseInt(config.fadeTo || '0'), config.pass);\n        }\n        else {\n            throw new Error('Unknown Light config - ' + config);\n        }\n    }\n    else {\n        const [color, radius, fadeTo, pass] = args;\n        return new Light(color, radius, fadeTo, pass);\n    }\n}\nexport const lights = {};\nexport function from(...args) {\n    if (args.length != 1)\n        Utils.ERROR('Unknown Light config: ' + JSON.stringify(args));\n    const arg = args[0];\n    if (typeof arg === 'string') {\n        const cached = lights[arg];\n        if (cached)\n            return cached;\n    }\n    if (arg && arg.paint)\n        return arg;\n    return make(arg);\n}\nexport function install(id, ...args) {\n    let source;\n    if (args.length == 1) {\n        source = make(args[0]);\n    }\n    else {\n        source = make(args[0], args[1], args[2], args[3]);\n    }\n    lights[id] = source;\n    source.id = id;\n    return source;\n}\nexport function installAll(config) {\n    const entries = Object.entries(config);\n    entries.forEach(([name, info]) => {\n        install(name, info);\n    });\n}\n// // TODO - Move?\n// export function playerInDarkness(\n//     map: Types.LightSite,\n//     PLAYER: Utils.XY,\n//     darkColor?: Color.Color\n// ) {\n//     const cell = map.cell(PLAYER.x, PLAYER.y);\n//     return cell.isDark(darkColor);\n//     // return (\n//     //   cell.light[0] + 10 < darkColor.r &&\n//     //   cell.light[1] + 10 < darkColor.g &&\n//     //   cell.light[2] + 10 < darkColor.b\n//     // );\n// }\n//# sourceMappingURL=light.js.map","import { FOV } from '../fov';\nimport * as Grid from '../grid';\nimport * as Light from './light';\nimport { data as DATA } from '../gw';\nimport * as XY from '../xy';\nimport * as Color from '../color';\nimport { fl as Fl } from '../flag';\nimport * as List from '../list';\nvar LightFlags;\n(function (LightFlags) {\n    LightFlags[LightFlags[\"LIT\"] = Fl(0)] = \"LIT\";\n    LightFlags[LightFlags[\"IN_SHADOW\"] = Fl(1)] = \"IN_SHADOW\";\n    LightFlags[LightFlags[\"DARK\"] = Fl(2)] = \"DARK\";\n    // MAGIC_DARK = Fl(3),\n    LightFlags[LightFlags[\"CHANGED\"] = Fl(4)] = \"CHANGED\";\n})(LightFlags || (LightFlags = {}));\nexport class LightSystem {\n    constructor(map, opts = {}) {\n        this.staticLights = null;\n        this.site = map;\n        this.ambient = Color.from(opts.ambient || 'white').toLight();\n        this.changed = false;\n        this.glowLightChanged = false;\n        this.dynamicLightChanged = false;\n        this.light = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.glowLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.oldLight = Grid.make(map.width, map.height, () => this.ambient.slice());\n        this.flags = Grid.make(map.width, map.height);\n        this.finishLightUpdate();\n    }\n    copy(other) {\n        this.setAmbient(other.ambient);\n        this.glowLightChanged = true;\n        this.dynamicLightChanged = true;\n        this.changed = true;\n        this.staticLights = null;\n        List.forEach(other.staticLights, (info) => this.addStatic(info.x, info.y, info.light));\n    }\n    getAmbient() {\n        return this.ambient;\n    }\n    setAmbient(light) {\n        if (light instanceof Color.Color) {\n            light = light.toLight();\n        }\n        else if (!Array.isArray(light)) {\n            light = Color.from(light).toLight();\n        }\n        for (let i = 0; i < 3; ++i) {\n            this.ambient[i] = light[i];\n        }\n        this.glowLightChanged = true;\n    }\n    get needsUpdate() {\n        return this.glowLightChanged || this.dynamicLightChanged;\n    }\n    getLight(x, y) {\n        return this.light[x][y];\n    }\n    setLight(x, y, light) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] = light[i];\n        }\n    }\n    isLit(x, y) {\n        return !!(this.flags[x][y] & LightFlags.LIT);\n    }\n    isDark(x, y) {\n        return !!(this.flags[x][y] & LightFlags.DARK);\n    }\n    isInShadow(x, y) {\n        return !!(this.flags[x][y] & LightFlags.IN_SHADOW);\n    }\n    // isMagicDark(x: number, y: number): boolean {\n    //     return !!(this.flags[x][y] & LightFlags.MAGIC_DARK);\n    // }\n    lightChanged(x, y) {\n        return !!(this.flags[x][y] & LightFlags.CHANGED);\n    }\n    // setMagicDark(x: number, y: number, isDark = true) {\n    //     if (isDark) {\n    //         this.flags[x][y] |= LightFlags.MAGIC_DARK;\n    //     } else {\n    //         this.flags[x][y] &= ~LightFlags.MAGIC_DARK;\n    //     }\n    // }\n    get width() {\n        return this.site.width;\n    }\n    get height() {\n        return this.site.height;\n    }\n    addStatic(x, y, light) {\n        const info = {\n            x,\n            y,\n            light: Light.from(light),\n            next: this.staticLights,\n        };\n        this.staticLights = info;\n        this.glowLightChanged = true;\n        return info;\n    }\n    removeStatic(x, y, light) {\n        let prev = this.staticLights;\n        if (!prev)\n            return;\n        function matches(info) {\n            if (info.x != x || info.y != y)\n                return false;\n            return !light || light === info.light;\n        }\n        this.glowLightChanged = true;\n        while (prev && matches(prev)) {\n            prev = this.staticLights = prev.next;\n        }\n        if (!prev)\n            return;\n        let current = prev.next;\n        while (current) {\n            if (matches(current)) {\n                prev.next = current.next;\n            }\n            else {\n                prev = current;\n            }\n            current = current.next;\n        }\n    }\n    eachStaticLight(fn) {\n        List.forEach(this.staticLights, (info) => fn(info.x, info.y, info.light));\n        this.site.eachGlowLight((x, y, light) => {\n            fn(x, y, light);\n        });\n    }\n    eachDynamicLight(fn) {\n        this.site.eachDynamicLight(fn);\n    }\n    update(force = false) {\n        this.changed = false;\n        if (!force && !this.needsUpdate)\n            return false;\n        // Copy Light over oldLight\n        this.startLightUpdate();\n        if (!this.glowLightChanged) {\n            this.restoreGlowLights();\n        }\n        else {\n            // GW.debug.log('painting glow lights.');\n            // Paint all glowing tiles.\n            this.eachStaticLight((x, y, light) => {\n                light.paint(this, x, y);\n            });\n            this.recordGlowLights();\n            this.glowLightChanged = false;\n        }\n        // Cycle through monsters and paint their lights:\n        this.eachDynamicLight((x, y, light) => light.paint(this, x, y)\n        // if (monst.mutationIndex >= 0 && mutationCatalog[monst.mutationIndex].light != lights['NO_LIGHT']) {\n        //     paint(map, mutationCatalog[monst.mutationIndex].light, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isBurning()) { // monst.status.burning && !(actor.kind.flags & Flags.Actor.AF_FIERY)) {\n        // \tpaint(map, lights.BURNING_CREATURE, actor.x, actor.y, false, false);\n        // }\n        // if (actor.isTelepathicallyRevealed()) {\n        // \tpaint(map, lights['TELEPATHY_LIGHT'], actor.x, actor.y, false, true);\n        // }\n        );\n        // Also paint telepathy lights for dormant monsters.\n        // for (monst of map.dormantMonsters) {\n        //     if (monsterTelepathicallyRevealed(monst)) {\n        //         paint(map, lights['TELEPATHY_LIGHT'], monst.xLoc, monst.yLoc, false, true);\n        //     }\n        // }\n        this.finishLightUpdate();\n        // Miner's light:\n        const PLAYER = DATA.player;\n        if (PLAYER) {\n            const PLAYERS_LIGHT = Light.lights.PLAYERS_LIGHT;\n            if (PLAYERS_LIGHT) {\n                PLAYERS_LIGHT.paint(this, PLAYER.x, PLAYER.y, true, true);\n            }\n        }\n        this.dynamicLightChanged = false;\n        this.changed = true;\n        // if (PLAYER.status.invisible) {\n        //     PLAYER.info.foreColor = playerInvisibleColor;\n        // } else if (playerInDarkness()) {\n        // \tPLAYER.info.foreColor = playerInDarknessColor;\n        // } else if (pmap[PLAYER.xLoc][PLAYER.yLoc].flags & IS_IN_SHADOW) {\n        // \tPLAYER.info.foreColor = playerInShadowColor;\n        // } else {\n        // \tPLAYER.info.foreColor = playerInLightColor;\n        // }\n        return true;\n    }\n    startLightUpdate() {\n        // record Old Lights\n        // and then zero out Light.\n        let i = 0;\n        const flag = Light.isShadowLight(this.ambient)\n            ? LightFlags.IN_SHADOW\n            : 0;\n        this.light.forEach((val, x, y) => {\n            for (i = 0; i < 3; ++i) {\n                this.oldLight[x][y][i] = val[i];\n                val[i] = this.ambient[i];\n            }\n            this.flags[x][y] = flag;\n        });\n    }\n    finishLightUpdate() {\n        XY.forRect(this.width, this.height, (x, y) => {\n            // clear light flags\n            // this.flags[x][y] &= ~(LightFlags.LIT | LightFlags.DARK);\n            const oldLight = this.oldLight[x][y];\n            const light = this.light[x][y];\n            if (light.some((v, i) => v !== oldLight[i])) {\n                this.flags[x][y] |= LightFlags.CHANGED;\n            }\n            if (Light.isDarkLight(light)) {\n                this.flags[x][y] |= LightFlags.DARK;\n            }\n            else if (!Light.isShadowLight(light)) {\n                this.flags[x][y] |= LightFlags.LIT;\n            }\n        });\n    }\n    recordGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                glowLight[i] = val[i];\n            }\n        });\n    }\n    restoreGlowLights() {\n        let i = 0;\n        this.light.forEach((val, x, y) => {\n            const glowLight = this.glowLight[x][y];\n            for (i = 0; i < 3; ++i) {\n                val[i] = glowLight[i];\n            }\n        });\n    }\n    // PaintSite\n    calcFov(x, y, radius, passThroughActors, cb) {\n        const site = this.site;\n        const fov = new FOV({\n            isBlocked(x, y) {\n                if (!passThroughActors && site.hasActor(x, y))\n                    return false;\n                return site.blocksVision(x, y);\n            },\n            hasXY(x, y) {\n                return site.hasXY(x, y);\n            },\n        });\n        fov.calculate(x, y, radius, cb);\n    }\n    addCellLight(x, y, light, dispelShadows) {\n        const val = this.light[x][y];\n        for (let i = 0; i < 3; ++i) {\n            val[i] += light[i];\n        }\n        if (dispelShadows && !Light.isShadowLight(light)) {\n            this.flags[x][y] &= ~LightFlags.IN_SHADOW;\n        }\n    }\n}\n//# sourceMappingURL=system.js.map"],"names":["NOOP","TRUE","clamp","v","min","max","ERROR","message","Error","first","args","find","undefined","arrayNext","a","current","fn","wrap","forward","len","length","startIndex","indexOf","dx","endI","index","e","DIRS","CLOCK_DIRS","x","src","y","Bounds","[object Object]","w","h","this","width","height","left","right","top","bottom","i","j","eachNeighbor","only4dirs","dir","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","FP_FACTOR","forLineBetween","fromX","fromY","stepFn","largerTargetComponent","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","forCircle","radius","forRect","arguments","shift","arcCount","testFn","oldX","oldY","newX","newY","matchCount","newOk","size","dest","b","pct","dy","async","matchFn","maxIndex","d","x0","y0","findIndex","result","push","diff","steps","c","last","step","l","line","forEach","root","next","obj","name","entry","remove","prev","count","cb","sort","out","TypeError","assignField","key","updated","copy","clear","nullify","clone","Array","isArray","slice","setDefaults","def","custom","Object","keys","origKey","defValue","parts","split","omit","map","t","trim","includes","field","val","opts","_current","opt","search","concat","fields","data","f","member","_default","arg","Alea","seed","Date","now","FRAC","_s0","_s1","_s2","_c","RANDOM_CONFIG","make","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","console","warn","Random","_fn","value","Number","MAX_SAFE_INTEGER","number","lo","hi","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","item","fromIndex","toIndex","r","buf","n","shuffle","percent","outOf","clumps","numSides","locationCount","XY.forRect","k","candidateLocs","loc","random","cosmetic","config","Range","lower","upper","rng","clumped","other","JSON","stringify","RE","results","exec","parseInt","base","std","from","fl","N","u","startsWith","substring","flagObj","inverse","reduce","join","XY.DIRS","makeArray","fill","initFn","arr","_formatGridValue","String","fromCharCode","charCodeAt","Grid","super","grid","_width","_height","hasXY","XY.eachNeighbor","sequence","constructor","update","some","col","XY.forCircle","bounds","updateRect","updateCircle","findValue","replaceValue","match","fmtFn","log","dumpRect","Utils.clamp","output","padStart","bestLoc","bestDistance","dist","XY.distanceBetween","chance","get","matchingLoc","matchingLocNear","XY.arcCount","GRID_CACHE","stats","active","alloc","create","free","NumGrid","bind","pop","_resize","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","ok","floodFillRange","least","targetValue","leastPositiveValue","randomMatchingLoc","foundValueAtThisLine","XY.Bounds","matchValue","fillFn","done","todo","destGrid","srcGrid","srcToDestX","srcToDestY","_d","_s","destX","destY","onto","Event","type","target","defaultPrevented","propagationStopped","immediatePropagationStopped","code","shiftKey","ctrlKey","altKey","metaKey","clientX","clientY","dt","reset","assign","IOMAP","DEAD_EVENTS","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","STOP","CONTROL_CODES","handlerFor","ev","km","keypress","dispatch","dispatchEvent","recycleEvent","handler","call","makeStopEvent","makeCustomEvent","makeTickEvent","makeKeyEvent","toLowerCase","toUpperCase","keyCodeDirection","lowerKey","ignoreKeyEvent","makeMouseEvent","buttons","Loop","running","events","mouse","CURRENT_HANDLER","PAUSED","LAST_CLICK","interval","intervalCount","ended","setInterval","pushEvent","clearInterval","unshift","ms","Utils.TRUE","elapsed","Promise","resolve","keymap","clearEvents","_startTicks","start","draw","nextEvent","stop","_stopTicks","setTimeout","nextKeyOrClick","pause","preventDefault","loop","FovFlags","Fl","VISIBLE","CLAIRVOYANT_VISIBLE","TELEPATHIC_VISIBLE","WAS_VISIBLE","WAS_CLAIRVOYANT_VISIBLE","WAS_TELEPATHIC_VISIBLE","WAS_ITEM_DETECTED","WAS_ACTOR_DETECTED","ITEM_DETECTED","ACTOR_DETECTED","IN_FOV","PLAYER","CLAIRVOYANT","TELEPATHIC","FOV","strategy","_setVisible","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","XY.calcRadius","_hasXY","_debug","debug","Utils.NOOP","maxRadius","setVisible","castLight","row","startSlope","endSlope","xx","xy","yx","yy","toFixed","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","site","changed","_callback","follow","flag","visible","alwaysVisible","revealed","REVEALED","flags","Grid.make","callback","fov","FOV.FOV","blocksVision","makeAlwaysVisible","onFovChange","ANY_KIND_OF_VISIBLE","MAGIC_MAPPED","WAS_ANY_KIND_OF_VISIBLE","ALWAYS_VISIBLE","makeVisibleToo","demoteCellVisibility","keep","IS_CURSOR","IS_HIGHLIGHTED","WAS_IN_FOV","WAS_DETECTED","isVisible","wasVisible","isDetect","IS_DETECTED","wasDetect","hasVisibleLight","updateCellVisibility","updateCellDetect","subject","visionDistance","cx","cy","cr","updateFor","eachViewport","VIEWPORT_TYPES","calculate","promoteCellVisibility","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","maxDistance","Grid.makeArray","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","EVENTS","addListener","event","listener","List.push","removeListener","success","List.forEach","matches","List.remove","clearEvent","apply","p","level","funcs","levels","frequency","end","endsWith","found","time","cache","delay","toColorInt","g","base256","round","colors","Color","redRand","greenRand","blueRand","dances","_const","_data","Int16Array","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","s","H","R","G","B","css","toInt","O","isNull","every","isConst","_changed","set","assignRGB","blackOut","mix","keepPct","lighten","darken","clearDancing","bake","add","scale","multiply","normalize","toString","fromArray","vals","fromCss","fromName","fromNumber","separate","A","hDiff","WHITE","BLACK","install","info","installSpread","NONE","temp","rgb","maxRgb","sin","PI","Mixer","ch","Utils.first","fg","Color.make","bg","equals","Color.from","opacity","color","multiplier","Color.separate","options","colorStart","colorEnd","defaultFg","defaultBg","helpers","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","parseFloat","floatFormat","makeVariable","eachChar","colorFn","eachColor","ctx","CS","CE","newColors","inColor","advanceChars","capitalize","test","nextBreak","splice","hyphenate","lineWidth","wordWidth","spaceLeftOnLine","Utils.advanceChars","hyphenAt","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","msg","begin","deleteLength","maxLen","preText","DataBuffer","_makeData","Uint32Array","orig","_index","style","glyph","toGlyph","sprite","maxWidth","align","Text.length","Text.eachChar","Text.wordWrap","lineCount","xi","xw","yh","fillRect","strength","mixer","drawSprite","endX","endY","header","Buffer","canvas","_target","copyTo","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","pxWidth","pxHeight","fillStyle","fontSize","textAlign","textBaseline","save","beginPath","rect","clip","fillText","restore","NotSupportedError","params","captureStackTrace","BaseCanvas","_renderRequested","_createNode","_createContext","_buffer","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","buffer","resize","requestAnimationFrame","_render","render","onclick","IO.makeMouseEvent","_toX","offsetX","_toY","offsetY","onmousemove","onmouseup","onkeydown","stopPropagation","IO.makeKeyEvent","Canvas2D","Int8Array","raw","_requestRender","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","VS","FS","CanvasGL","Canvas.BaseCanvas","gl","Canvas.NotSupportedError","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","image","fromImage","fromFont","div","appendChild","io","IO.loop","Sprite","sprites","Color.Color","templates","id","Text.compile","GW.config","handlers","addAt","Text.apply","addMessage","msgOrId","addCombatMessage","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","NEXT_WRITE_INDEX","NEEDS_UPDATE","COMBAT_MESSAGE","needs","commitCombatMessage","_addMessage","_a","lines","Text.splitIntoLines","Text.capitalize","reverseMultiLine","reverse","_addMessageLine","_addCombatMessage","Blob","rounds","minWidth","minHeight","maxHeight","percentSeeded","birthParameters","survivalParameters","setFn","blobNumber","blobSize","topBlobNumber","topBlobSize","GRID.alloc","tries","_cellularAutomataRound","floodFill","valueBounds","GRID.free","nbCount","buffer2","didSomething","carve","CONFIG","light","INTENSITY_DARK","INTENSITY_SHADOW","LIGHT_COMPONENTS","Light","fadeTo","pass","passThroughActors","Range.make","intensity","maintainShadows","isMinersLight","lightMultiplier","outerRadius","ceil","dispelShadows","isDarkLight","fadeToPercent","Grid.alloc","calcFov","lightValue","addCellLight","Grid.free","threshold","isShadowLight","cached","lights","Range.from","Utils.ERROR","paint","LightFlags","staticLights","ambient","toLight","glowLightChanged","dynamicLightChanged","glowLight","oldLight","finishLightUpdate","setAmbient","addStatic","LIT","DARK","IN_SHADOW","CHANGED","Light.from","eachGlowLight","eachDynamicLight","force","startLightUpdate","eachStaticLight","recordGlowLights","restoreGlowLights","DATA","player","PLAYERS_LIGHT","Light.lights","Light.isShadowLight","Light.isDarkLight","hasActor","av","beforeFn"],"mappings":"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"}