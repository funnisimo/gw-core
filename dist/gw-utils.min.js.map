{"version":3,"file":"gw-utils.min.js","sources":["../js/utils.js","../js/random.js","../js/gw.js","../js/range.js","../js/flag.js","../js/grid.js","../js/io.js","../js/fov.js","../js/path.js","../js/events.js","../js/frequency.js","../js/scheduler.js","../js/canvas/shaders.js","../js/canvas/glyphs.js","../js/canvas/canvas.js","../js/color.js","../js/canvas/sprite.js","../js/canvas/mixer.js","../js/text/config.js","../js/text/compile.js","../js/text/each.js","../js/text/utils.js","../js/text/lines.js","../js/text/index.js","../js/buffer.js","../js/types.js","../js/message.js"],"sourcesContent":["/**\n * GW.utils\n * @module utils\n */\n// DIRS are organized clockwise\n// - first 4 are arrow directions\n//   >> rotate 90 degrees clockwise ==>> newIndex = (oldIndex + 1) % 4\n//   >> opposite direction ==>> oppIndex = (index + 2) % 4\n// - last 4 are diagonals\n//   >> rotate 90 degrees clockwise ==>> newIndex = 4 + (oldIndex + 1) % 4;\n//   >> opposite diagonal ==>> newIndex = 4 + (index + 2) % 4;\nexport const DIRS = [\n    [0, 1],\n    [1, 0],\n    [0, -1],\n    [-1, 0],\n    [1, 1],\n    [1, -1],\n    [-1, -1],\n    [-1, 1],\n];\nexport const NO_DIRECTION = -1;\nexport const UP = 0;\nexport const RIGHT = 1;\nexport const DOWN = 2;\nexport const LEFT = 3;\nexport const RIGHT_UP = 4;\nexport const RIGHT_DOWN = 5;\nexport const LEFT_DOWN = 6;\nexport const LEFT_UP = 7;\n// CLOCK DIRS are organized clockwise, starting at UP\n// >> opposite = (index + 4) % 8\n// >> 90 degrees rotate right = (index + 2) % 8\n// >> 90 degrees rotate left = (8 + index - 2) % 8\nexport const CLOCK_DIRS = [\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n];\nexport function NOOP() { }\nexport function TRUE() {\n    return true;\n}\nexport function FALSE() {\n    return false;\n}\nexport function ONE() {\n    return 1;\n}\nexport function ZERO() {\n    return 0;\n}\nexport function IDENTITY(x) {\n    return x;\n}\n/**\n * clamps a value between min and max (inclusive)\n * @param v {Number} the value to clamp\n * @param min {Number} the minimum value\n * @param max {Number} the maximum value\n * @returns {Number} the clamped value\n */\nexport function clamp(v, min, max) {\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nexport function x(src) {\n    // @ts-ignore\n    return src.x || src[0] || 0;\n}\nexport function y(src) {\n    // @ts-ignore\n    return src.y || src[1] || 0;\n}\nexport function copyXY(dest, src) {\n    dest.x = x(src);\n    dest.y = y(src);\n}\nexport function addXY(dest, src) {\n    dest.x += x(src);\n    dest.y += y(src);\n}\nexport function equalsXY(dest, src) {\n    return dest.x == x(src) && dest.y == y(src);\n}\nexport function lerpXY(a, b, pct) {\n    if (pct > 1) {\n        pct = pct / 100;\n    }\n    pct = clamp(pct, 0, 1);\n    const dx = x(b) - x(a);\n    const dy = y(b) - y(a);\n    const x2 = x(a) + Math.floor(dx * pct);\n    const y2 = y(a) + Math.floor(dy * pct);\n    return [x2, y2];\n}\nexport function distanceBetween(x1, y1, x2, y2) {\n    const x = Math.abs(x1 - x2);\n    const y = Math.abs(y1 - y2);\n    const min = Math.min(x, y);\n    return x + y - 0.6 * min;\n}\nexport function distanceFromTo(a, b) {\n    return distanceBetween(x(a), y(a), x(b), y(b));\n}\nexport function calcRadius(x, y) {\n    return distanceBetween(0, 0, x, y);\n}\nexport function dirBetween(x, y, toX, toY) {\n    let diffX = toX - x;\n    let diffY = toY - y;\n    if (diffX && diffY) {\n        const absX = Math.abs(diffX);\n        const absY = Math.abs(diffY);\n        if (absX >= 2 * absY) {\n            diffY = 0;\n        }\n        else if (absY >= 2 * absX) {\n            diffX = 0;\n        }\n    }\n    return [Math.sign(diffX), Math.sign(diffY)];\n}\nexport function dirFromTo(a, b) {\n    return dirBetween(x(a), y(a), x(b), y(b));\n}\nexport function dirIndex(dir) {\n    const x0 = x(dir);\n    const y0 = y(dir);\n    return DIRS.findIndex((a) => a[0] == x0 && a[1] == y0);\n}\nexport function isOppositeDir(a, b) {\n    if (a[0] + b[0] != 0)\n        return false;\n    if (a[1] + b[1] != 0)\n        return false;\n    return true;\n}\nexport function isSameDir(a, b) {\n    return a[0] == b[0] && a[1] == b[1];\n}\nexport function dirSpread(dir) {\n    const result = [dir];\n    if (dir[0] == 0) {\n        result.push([1, dir[1]]);\n        result.push([-1, dir[1]]);\n    }\n    else if (dir[1] == 0) {\n        result.push([dir[0], 1]);\n        result.push([dir[0], -1]);\n    }\n    else {\n        result.push([dir[0], 0]);\n        result.push([0, dir[1]]);\n    }\n    return result;\n}\nexport function stepFromTo(a, b, fn) {\n    const x0 = x(a);\n    const y0 = y(a);\n    const diff = [x(b) - x0, y(b) - y0];\n    const steps = Math.abs(diff[0]) + Math.abs(diff[1]);\n    const c = [0, 0];\n    const last = [99999, 99999];\n    for (let step = 0; step <= steps; ++step) {\n        c[0] = x0 + Math.floor((diff[0] * step) / steps);\n        c[1] = y0 + Math.floor((diff[1] * step) / steps);\n        if (c[0] != last[0] || c[1] != last[1]) {\n            fn(c[0], c[1]);\n        }\n        last[0] = c[0];\n        last[1] = c[1];\n    }\n}\n// Draws the smooth gradient that appears on a button when you hover over or depress it.\n// Returns the percentage by which the current tile should be averaged toward a hilite color.\nexport function smoothHiliteGradient(currentXValue, maxXValue) {\n    return Math.floor(100 * Math.sin((Math.PI * currentXValue) / maxXValue));\n}\nfunction assignField(dest, src, key) {\n    const current = dest[key];\n    const updated = src[key];\n    if (current && current.copy && updated) {\n        current.copy(updated);\n    }\n    else if (current && current.clear && !updated) {\n        current.clear();\n    }\n    else if (current && current.nullify && !updated) {\n        current.nullify();\n    }\n    else if (updated && updated.clone) {\n        dest[key] = updated.clone(); // just use same object (shallow copy)\n    }\n    else if (updated && Array.isArray(updated)) {\n        dest[key] = updated.slice();\n    }\n    else if (current && Array.isArray(current)) {\n        current.length = 0;\n    }\n    else {\n        dest[key] = updated;\n    }\n}\nexport function copyObject(dest, src) {\n    Object.keys(dest).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignObject(dest, src) {\n    Object.keys(src).forEach((key) => {\n        assignField(dest, src, key);\n    });\n}\nexport function assignOmitting(omit, dest, src) {\n    if (typeof omit === \"string\") {\n        omit = omit.split(/[,|]/g).map((t) => t.trim());\n    }\n    Object.keys(src).forEach((key) => {\n        if (omit.includes(key))\n            return;\n        assignField(dest, src, key);\n    });\n}\nexport function setDefault(obj, field, val) {\n    if (obj[field] === undefined) {\n        obj[field] = val;\n    }\n}\nexport function setDefaults(obj, def, custom = null) {\n    let dest;\n    Object.keys(def).forEach((key) => {\n        const origKey = key;\n        let defValue = def[key];\n        dest = obj;\n        // allow for => 'stats.health': 100\n        const parts = key.split(\".\");\n        while (parts.length > 1) {\n            key = parts.shift();\n            if (dest[key] === undefined) {\n                dest = dest[key] = {};\n            }\n            else if (typeof dest[key] !== \"object\") {\n                ERROR(\"Trying to set default member on non-object config item: \" + origKey);\n            }\n            else {\n                dest = dest[key];\n            }\n        }\n        key = parts.shift();\n        let current = dest[key];\n        // console.log('def - ', key, current, defValue, obj, dest);\n        if (custom && custom(dest, key, current, defValue)) {\n            // do nothing\n        }\n        else if (current === undefined) {\n            if (defValue === null) {\n                dest[key] = null;\n            }\n            else if (Array.isArray(defValue)) {\n                dest[key] = defValue.slice();\n            }\n            else if (typeof defValue === \"object\") {\n                dest[key] = defValue; // Object.assign({}, defValue); -- this breaks assigning a Color object as a default...\n            }\n            else {\n                dest[key] = defValue;\n            }\n        }\n    });\n}\nexport function kindDefaults(obj, def) {\n    function custom(dest, key, current, defValue) {\n        if (key.search(/[fF]lags$/) < 0)\n            return false;\n        if (!current) {\n            current = [];\n        }\n        else if (typeof current == \"string\") {\n            current = current.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(current)) {\n            current = [current];\n        }\n        if (typeof defValue === \"string\") {\n            defValue = defValue.split(/[,|]/).map((t) => t.trim());\n        }\n        else if (!Array.isArray(defValue)) {\n            defValue = [defValue];\n        }\n        // console.log('flags', key, defValue, current);\n        dest[key] = defValue.concat(current);\n        return true;\n    }\n    return setDefaults(obj, def, custom);\n}\nexport function pick(obj, ...fields) {\n    const data = {};\n    fields.forEach((f) => {\n        const v = obj[f];\n        if (v !== undefined) {\n            data[f] = v;\n        }\n    });\n    return data;\n}\nexport function clearObject(obj) {\n    Object.keys(obj).forEach((key) => (obj[key] = undefined));\n}\nexport function ERROR(message) {\n    throw new Error(message);\n}\nexport function WARN(...args) {\n    console.warn(...args);\n}\nexport function getOpt(obj, member, _default) {\n    const v = obj[member];\n    if (v === undefined)\n        return _default;\n    return v;\n}\nexport function firstOpt(field, ...args) {\n    for (let arg of args) {\n        if (typeof arg !== \"object\" || Array.isArray(arg)) {\n            return arg;\n        }\n        if (arg[field] !== undefined) {\n            return arg[field];\n        }\n    }\n    return undefined;\n}\nexport function arraysIntersect(a, b) {\n    return a.some((av) => b.includes(av));\n}\nexport function sum(arr) {\n    return arr.reduce((a, b) => a + b);\n}\nexport function chainLength(root) {\n    let count = 0;\n    while (root) {\n        count += 1;\n        root = root.next;\n    }\n    return count;\n}\nexport function chainIncludes(chain, entry) {\n    while (chain && chain !== entry) {\n        chain = chain.next;\n    }\n    return chain === entry;\n}\nexport function eachChain(item, fn) {\n    let index = 0;\n    while (item) {\n        const next = item.next;\n        fn(item, index++);\n        item = next;\n    }\n    return index; // really count\n}\nexport function addToChain(obj, name, entry) {\n    entry.next = obj[name] || null;\n    obj[name] = entry;\n    return true;\n}\nexport function removeFromChain(obj, name, entry) {\n    const root = obj[name];\n    if (root === entry) {\n        obj[name] = entry.next || null;\n        entry.next = null;\n        return true;\n    }\n    else if (!root) {\n        return false;\n    }\n    else {\n        let prev = root;\n        let current = prev.next;\n        while (current && current !== entry) {\n            prev = current;\n            current = prev.next;\n        }\n        if (current === entry) {\n            prev.next = current.next || null;\n            entry.next = null;\n            return true;\n        }\n    }\n    return false;\n}\n// LINES\nconst FP_BASE = 16;\nconst FP_FACTOR = 1 << 16;\nexport function forLine(fromX, fromY, toX, toY, stepFn) {\n    let targetVector = [], error = [], currentVector = [], previousVector = [], quadrantTransform = [];\n    let largerTargetComponent, i;\n    let currentLoc = [-1, -1], previousLoc = [-1, -1];\n    if (fromX == toX && fromY == toY) {\n        return;\n    }\n    const originLoc = [fromX, fromY];\n    const targetLoc = [toX, toY];\n    // Neither vector is negative. We keep track of negatives with quadrantTransform.\n    for (i = 0; i <= 1; i++) {\n        targetVector[i] = (targetLoc[i] - originLoc[i]) << FP_BASE; // FIXME: should use parens?\n        if (targetVector[i] < 0) {\n            targetVector[i] *= -1;\n            quadrantTransform[i] = -1;\n        }\n        else {\n            quadrantTransform[i] = 1;\n        }\n        currentVector[i] = previousVector[i] = error[i] = 0;\n        currentLoc[i] = originLoc[i];\n    }\n    // normalize target vector such that one dimension equals 1 and the other is in [0, 1].\n    largerTargetComponent = Math.max(targetVector[0], targetVector[1]);\n    // targetVector[0] = Math.floor( (targetVector[0] << FP_BASE) / largerTargetComponent);\n    // targetVector[1] = Math.floor( (targetVector[1] << FP_BASE) / largerTargetComponent);\n    targetVector[0] = Math.floor((targetVector[0] * FP_FACTOR) / largerTargetComponent);\n    targetVector[1] = Math.floor((targetVector[1] * FP_FACTOR) / largerTargetComponent);\n    do {\n        for (i = 0; i <= 1; i++) {\n            previousLoc[i] = currentLoc[i];\n            currentVector[i] += targetVector[i] >> FP_BASE;\n            error[i] += targetVector[i] == FP_FACTOR ? 0 : targetVector[i];\n            if (error[i] >= Math.floor(FP_FACTOR / 2)) {\n                currentVector[i]++;\n                error[i] -= FP_FACTOR;\n            }\n            currentLoc[i] = Math.floor(quadrantTransform[i] * currentVector[i] + originLoc[i]);\n        }\n        if (stepFn(...currentLoc)) {\n            break;\n        }\n    } while (true);\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLine(fromX, fromY, toX, toY) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        line.push([x, y]);\n        return x == toX && y == toY;\n    });\n    return line;\n}\n// ADAPTED FROM BROGUE 1.7.5\n// Simple line algorithm (maybe this is Bresenham?) that returns a list of coordinates\n// that extends all the way to the edge of the map based on an originLoc (which is not included\n// in the list of coordinates) and a targetLoc.\n// Returns the number of entries in the list, and includes (-1, -1) as an additional\n// terminus indicator after the end of the list.\nexport function getLineThru(fromX, fromY, toX, toY, width, height) {\n    const line = [];\n    forLine(fromX, fromY, toX, toY, (x, y) => {\n        if (x < 0 || y < 0 || x >= width || y >= height)\n            return true;\n        line.push([x, y]);\n        return false;\n    });\n    return line;\n}\n//# sourceMappingURL=utils.js.map","const RANDOM_CONFIG = {\n    make: () => {\n        return Math.random.bind(Math);\n    },\n};\nfunction lotteryDrawArray(rand, frequencies) {\n    let i, maxFreq, randIndex;\n    maxFreq = 0;\n    for (i = 0; i < frequencies.length; i++) {\n        maxFreq += frequencies[i];\n    }\n    if (maxFreq <= 0) {\n        console.warn(\"Lottery Draw - no frequencies\", frequencies, frequencies.length);\n        return 0;\n    }\n    randIndex = rand.range(0, maxFreq - 1);\n    for (i = 0; i < frequencies.length; i++) {\n        if (frequencies[i] > randIndex) {\n            return i;\n        }\n        else {\n            randIndex -= frequencies[i];\n        }\n    }\n    console.warn(\"Lottery Draw failed.\", frequencies, frequencies.length);\n    return 0;\n}\nfunction lotteryDrawObject(rand, weights) {\n    const entries = Object.entries(weights);\n    const frequencies = entries.map(([_, weight]) => weight);\n    const index = lotteryDrawArray(rand, frequencies);\n    return entries[index][0];\n}\nexport class Random {\n    constructor() {\n        this._fn = RANDOM_CONFIG.make();\n    }\n    static configure(opts) {\n        if (opts.make) {\n            if (typeof opts.make !== \"function\")\n                throw new Error(\"Random make parameter must be a function.\");\n            if (typeof opts.make(12345) !== \"function\")\n                throw new Error(\"Random make function must accept a numeric seed and return a random function.\");\n            RANDOM_CONFIG.make = opts.make;\n            random.seed();\n            cosmetic.seed();\n        }\n    }\n    seed(val) {\n        this._fn = RANDOM_CONFIG.make(val);\n    }\n    value() {\n        return this._fn();\n    }\n    float() {\n        return this.value();\n    }\n    number(max = 0) {\n        max = max || Number.MAX_SAFE_INTEGER;\n        return Math.floor(this._fn() * max);\n    }\n    int(max = 0) {\n        return this.number(max);\n    }\n    range(lo, hi) {\n        if (hi <= lo)\n            return hi;\n        const diff = hi - lo + 1;\n        return lo + this.number(diff);\n    }\n    dice(count, sides, addend = 0) {\n        let total = 0;\n        let mult = 1;\n        if (count < 0) {\n            count = -count;\n            mult = -1;\n        }\n        addend = addend || 0;\n        for (let i = 0; i < count; ++i) {\n            total += this.range(1, sides);\n        }\n        total *= mult;\n        return total + addend;\n    }\n    weighted(weights) {\n        if (Array.isArray(weights)) {\n            return lotteryDrawArray(this, weights);\n        }\n        return lotteryDrawObject(this, weights);\n    }\n    item(list) {\n        if (!Array.isArray(list)) {\n            list = Object.values(list);\n        }\n        return list[this.range(0, list.length - 1)];\n    }\n    key(obj) {\n        return this.item(Object.keys(obj));\n    }\n    shuffle(list, fromIndex = 0, toIndex = 0) {\n        if (arguments.length == 2) {\n            toIndex = fromIndex;\n            fromIndex = 0;\n        }\n        let i, r, buf;\n        toIndex = toIndex || list.length;\n        fromIndex = fromIndex || 0;\n        for (i = fromIndex; i < toIndex; i++) {\n            r = this.range(fromIndex, toIndex - 1);\n            if (i != r) {\n                buf = list[r];\n                list[r] = list[i];\n                list[i] = buf;\n            }\n        }\n        return list;\n    }\n    sequence(n) {\n        const list = [];\n        for (let i = 0; i < n; i++) {\n            list[i] = i;\n        }\n        return this.shuffle(list);\n    }\n    chance(percent, outOf = 100) {\n        if (percent <= 0)\n            return false;\n        if (percent >= outOf)\n            return true;\n        return this.number(outOf) < percent;\n    }\n    // Get a random int between lo and hi, inclusive, with probability distribution\n    // affected by clumps.\n    clumped(lo, hi, clumps) {\n        if (hi <= lo) {\n            return lo;\n        }\n        if (clumps <= 1) {\n            return this.range(lo, hi);\n        }\n        let i, total = 0, numSides = Math.floor((hi - lo) / clumps);\n        for (i = 0; i < (hi - lo) % clumps; i++) {\n            total += this.range(0, numSides + 1);\n        }\n        for (; i < clumps; i++) {\n            total += this.range(0, numSides);\n        }\n        return total + lo;\n    }\n}\nexport const random = new Random();\nexport const cosmetic = new Random();\n//# sourceMappingURL=random.js.map","export const data = {};\nexport const config = {};\nexport const make = {};\n//# sourceMappingURL=gw.js.map","import { random } from \"./random\";\nimport { make as Make } from \"./gw\";\nexport class Range {\n    constructor(lower, upper = 0, clumps = 1, rng) {\n        this._rng = rng || random;\n        if (Array.isArray(lower)) {\n            clumps = lower[2];\n            upper = lower[1];\n            lower = lower[0];\n        }\n        if (upper < lower) {\n            [upper, lower] = [lower, upper];\n        }\n        this.lo = lower || 0;\n        this.hi = upper || this.lo;\n        this.clumps = clumps || 1;\n    }\n    value() {\n        return this._rng.clumped(this.lo, this.hi, this.clumps);\n    }\n    copy(other) {\n        this.lo = other.lo;\n        this.hi = other.hi;\n        this.clumps = other.clumps;\n        this._rng = other._rng;\n        return this;\n    }\n    toString() {\n        if (this.lo >= this.hi) {\n            return \"\" + this.lo;\n        }\n        return `${this.lo}-${this.hi}`;\n    }\n}\nexport function make(config, rng) {\n    if (!config)\n        return new Range(0, 0, 0, rng);\n    if (config instanceof Range)\n        return config; // don't need to clone since they are immutable\n    // if (config.value) return config;  // calc or damage\n    if (typeof config == \"function\")\n        throw new Error(\"Custom range functions not supported - extend Range\");\n    if (config === undefined || config === null)\n        return new Range(0, 0, 0, rng);\n    if (typeof config == \"number\")\n        return new Range(config, config, 1, rng);\n    // @ts-ignore\n    if (config === true || config === false)\n        throw new Error(\"Invalid random config: \" + config);\n    if (Array.isArray(config)) {\n        return new Range(config[0], config[1], config[2], rng);\n    }\n    if (typeof config !== \"string\") {\n        throw new Error(\"Calculations must be strings.  Received: \" + JSON.stringify(config));\n    }\n    if (config.length == 0)\n        return new Range(0, 0, 0, rng);\n    const RE = /^(?:([+-]?\\d*)[Dd](\\d+)([+-]?\\d*)|([+-]?\\d+)-(\\d+):?(\\d+)?|([+-]?\\d+)~(\\d+)|([+-]?\\d+\\.?\\d*))/g;\n    let results;\n    while ((results = RE.exec(config)) !== null) {\n        if (results[2]) {\n            let count = Number.parseInt(results[1]) || 1;\n            const sides = Number.parseInt(results[2]);\n            const addend = Number.parseInt(results[3]) || 0;\n            const lower = addend + count;\n            const upper = addend + count * sides;\n            return new Range(lower, upper, count, rng);\n        }\n        else if (results[4] && results[5]) {\n            const min = Number.parseInt(results[4]);\n            const max = Number.parseInt(results[5]);\n            const clumps = Number.parseInt(results[6]);\n            return new Range(min, max, clumps, rng);\n        }\n        else if (results[7] && results[8]) {\n            const base = Number.parseInt(results[7]);\n            const std = Number.parseInt(results[8]);\n            return new Range(base - 2 * std, base + 2 * std, 3, rng);\n        }\n        else if (results[9]) {\n            const v = Number.parseFloat(results[9]);\n            return new Range(v, v, 1, rng);\n        }\n    }\n    throw new Error(\"Not a valid range - \" + config);\n}\nMake.range = make;\nexport const from = make;\n//# sourceMappingURL=range.js.map","///////////////////////////////////\n// FLAG\nexport function fl(N) {\n    return 1 << N;\n}\nexport function toString(flagObj, value) {\n    const inverse = Object.entries(flagObj).reduce((out, entry) => {\n        const [key, value] = entry;\n        if (value)\n            out[value] = key;\n        return out;\n    }, []);\n    const out = [];\n    for (let index = 0; index < 32; ++index) {\n        const fl = 1 << index;\n        if (value & fl) {\n            out.push(inverse[fl]);\n        }\n    }\n    return out.join(\" | \");\n}\nexport function from(obj, ...args) {\n    let result = 0;\n    for (let index = 0; index < args.length; ++index) {\n        let value = args[index];\n        if (value === undefined)\n            continue;\n        if (typeof value == \"number\") {\n            result |= value;\n            continue; // next\n        }\n        else if (typeof value === \"string\") {\n            value = value\n                .split(/[,|]/)\n                .map((t) => t.trim())\n                .map((u) => {\n                const n = Number.parseInt(u);\n                if (n >= 0)\n                    return n;\n                return u;\n            });\n        }\n        if (Array.isArray(value)) {\n            value.forEach((v) => {\n                if (typeof v == \"string\") {\n                    v = v.trim();\n                    if (v.startsWith(\"!\")) {\n                        // @ts-ignore\n                        const f = obj[v.substring(1)];\n                        result &= ~f;\n                    }\n                    else {\n                        // @ts-ignore\n                        const f = obj[v];\n                        if (f) {\n                            result |= f;\n                        }\n                    }\n                }\n                else if (v === 0) {\n                    // to allow clearing flags when extending objects\n                    result = 0;\n                }\n                else {\n                    result |= v;\n                }\n            });\n        }\n    }\n    return result;\n}\nexport const flags = {};\nexport function install(flagName, flag) {\n    flags[flagName] = flag;\n    return flag;\n}\n//# sourceMappingURL=flag.js.map","import { random } from \"./random\";\nimport * as Utils from \"./utils\";\nimport { make as Make } from \"./gw\";\nconst DIRS = Utils.DIRS;\nconst CDIRS = Utils.CLOCK_DIRS;\nexport function makeArray(l, fn) {\n    if (fn === undefined)\n        return new Array(l).fill(0);\n    fn = fn || (() => 0);\n    const arr = new Array(l);\n    for (let i = 0; i < l; ++i) {\n        arr[i] = fn(i);\n    }\n    return arr;\n}\nfunction _formatGridValue(v) {\n    if (v === false) {\n        return \" \";\n    }\n    else if (v === true) {\n        return \"T\";\n    }\n    else if (v < 10) {\n        return \"\" + v;\n    }\n    else if (v < 36) {\n        return String.fromCharCode(\"a\".charCodeAt(0) + v - 10);\n    }\n    else if (v < 62) {\n        return String.fromCharCode(\"A\".charCodeAt(0) + v - 10 - 26);\n    }\n    else if (typeof v === \"string\") {\n        return v[0];\n    }\n    else {\n        return \"#\";\n    }\n}\nexport class Grid extends Array {\n    constructor(w, h, v) {\n        super(w);\n        for (let x = 0; x < w; ++x) {\n            if (typeof v === \"function\") {\n                this[x] = new Array(h)\n                    .fill(0)\n                    .map((_, i) => v(x, i));\n            }\n            else {\n                this[x] = new Array(h).fill(v);\n            }\n        }\n        this._width = w;\n        this._height = h;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    /**\n     * Calls the supplied function for each cell in the grid.\n     * @param fn - The function to call on each item in the grid.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    forEach(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    eachNeighbor(x, y, fn, only4dirs = false) {\n        const maxIndex = only4dirs ? 4 : 8;\n        for (let d = 0; d < maxIndex; ++d) {\n            const dir = DIRS[d];\n            const i = x + dir[0];\n            const j = y + dir[1];\n            if (this.hasXY(i, j)) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    forRect(x, y, w, h, fn) {\n        w = Math.min(this.width - x, w);\n        h = Math.min(this.height - y, h);\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    /**\n     * Returns a new Grid with the cells mapped according to the supplied function.\n     * @param fn - The function that maps the cell values\n     * TSIGNORE\n     */\n    // @ts-ignore\n    map(fn) {\n        // @ts-ignore\n        const other = new this.constructor(this.width, this.height);\n        other.copy(this);\n        other.update(fn);\n        return other;\n    }\n    forCircle(x, y, radius, fn) {\n        let i, j;\n        for (i = Math.max(0, x - radius - 1); i < Math.min(this.width, x + radius + 1); i++) {\n            for (j = Math.max(0, y - radius - 1); j < Math.min(this.height, y + radius + 1); j++) {\n                if (this.hasXY(i, j) &&\n                    (i - x) * (i - x) + (j - y) * (j - y) < radius * radius + radius) {\n                    // + radius softens the circle\n                    fn(this[i][j], i, j, this);\n                }\n            }\n        }\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    isBoundaryXY(x, y) {\n        return (this.hasXY(x, y) &&\n            (x == 0 || x == this.width - 1 || y == 0 || y == this.height - 1));\n    }\n    calcBounds() {\n        const bounds = { left: this.width, top: this.height, right: 0, bottom: 0 };\n        this.forEach((v, i, j) => {\n            if (!v)\n                return;\n            if (bounds.left > i)\n                bounds.left = i;\n            if (bounds.right < i)\n                bounds.right = i;\n            if (bounds.top > j)\n                bounds.top = j;\n            if (bounds.bottom < j)\n                bounds.bottom = j;\n        });\n        return bounds;\n    }\n    update(fn) {\n        let i, j;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                this[i][j] = fn(this[i][j], i, j, this);\n            }\n        }\n    }\n    updateRect(x, y, width, height, fn) {\n        let i, j;\n        for (i = x; i < x + width; i++) {\n            for (j = y; j < y + height; j++) {\n                if (this.hasXY(i, j)) {\n                    this[i][j] = fn(this[i][j], i, j, this);\n                }\n            }\n        }\n    }\n    updateCircle(x, y, radius, fn) {\n        let i, j;\n        for (i = Math.max(0, x - radius - 1); i < Math.min(this.width, x + radius + 1); i++) {\n            for (j = Math.max(0, y - radius - 1); j < Math.min(this.height, y + radius + 1); j++) {\n                if (this.hasXY(i, j) &&\n                    (i - x) * (i - x) + (j - y) * (j - y) < radius * radius + radius) {\n                    // + radius softens the circle\n                    this[i][j] = fn(this[i][j], i, j, this);\n                }\n            }\n        }\n    }\n    /**\n     * Fills the entire grid with the supplied value\n     * @param v - The fill value or a function that returns the fill value.\n     * TSIGNORE\n     */\n    // @ts-ignore\n    fill(v) {\n        const fn = typeof v === \"function\" ? v : () => v;\n        this.update(fn);\n    }\n    fillRect(x, y, w, h, v) {\n        const fn = typeof v === \"function\" ? v : () => v;\n        this.updateRect(x, y, w, h, fn);\n    }\n    fillCircle(x, y, radius, v) {\n        const fn = typeof v === \"function\" ? v : () => v;\n        this.updateCircle(x, y, radius, fn);\n    }\n    replace(findValue, replaceValue) {\n        this.update((v) => (v == findValue ? replaceValue : v));\n    }\n    copy(from) {\n        // TODO - check width, height?\n        this.update((_, i, j) => from[i][j]);\n    }\n    count(match) {\n        const fn = typeof match === \"function\"\n            ? match\n            : (v) => v == match;\n        let count = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this))\n                ++count;\n        });\n        return count;\n    }\n    dump(fmtFn) {\n        this.dumpRect(0, 0, this.width, this.height, fmtFn);\n    }\n    dumpRect(left, top, width, height, fmtFn) {\n        let i, j;\n        fmtFn = fmtFn || _formatGridValue;\n        left = Utils.clamp(left, 0, this.width - 2);\n        top = Utils.clamp(top, 0, this.height - 2);\n        const right = Utils.clamp(left + width, 1, this.width - 1);\n        const bottom = Utils.clamp(top + height, 1, this.height - 1);\n        let output = [];\n        for (j = top; j <= bottom; j++) {\n            let line = (\"\" + j + \"]\").padStart(3, \" \");\n            for (i = left; i <= right; i++) {\n                if (i % 10 == 0) {\n                    line += \" \";\n                }\n                const v = this[i][j];\n                line += fmtFn(v, i, j)[0];\n            }\n            output.push(line);\n        }\n        console.log(output.join(\"\\n\"));\n    }\n    dumpAround(x, y, radius) {\n        this.dumpRect(x - radius, y - radius, 2 * radius, 2 * radius);\n    }\n    closestMatchingLoc(x, y, fn) {\n        let bestLoc = [-1, -1];\n        let bestDistance = this.width + this.height;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                const dist = Utils.distanceBetween(x, y, i, j);\n                if (dist < bestDistance) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                    bestDistance = dist;\n                }\n                else if (dist == bestDistance && random.chance(50)) {\n                    bestLoc[0] = i;\n                    bestLoc[1] = j;\n                }\n            }\n        });\n        return bestLoc;\n    }\n    firstMatchingLoc(v) {\n        const fn = typeof v === \"function\" ? v : (val) => val == v;\n        for (let i = 0; i < this.width; ++i) {\n            for (let j = 0; j < this.height; ++j) {\n                if (fn(this[i][j], i, j, this)) {\n                    return [i, j];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    randomMatchingLoc(v, deterministic = false) {\n        let locationCount = 0;\n        let i, j, index;\n        const fn = typeof v === \"function\" ? v : (val) => val == v;\n        locationCount = 0;\n        this.forEach((v, i, j) => {\n            if (fn(v, i, j, this)) {\n                locationCount++;\n            }\n        });\n        if (locationCount == 0) {\n            return [-1, -1];\n        }\n        else if (deterministic) {\n            index = Math.floor(locationCount / 2);\n        }\n        else {\n            index = random.range(0, locationCount - 1);\n        }\n        for (i = 0; i < this.width && index >= 0; i++) {\n            for (j = 0; j < this.height && index >= 0; j++) {\n                if (fn(this[i][j], i, j, this)) {\n                    if (index == 0) {\n                        return [i, j];\n                    }\n                    index--;\n                }\n            }\n        }\n        return [-1, -1];\n    }\n    matchingLocNear(x, y, v, deterministic = false) {\n        let loc = [-1, -1];\n        let i, j, k, candidateLocs, randIndex;\n        const fn = typeof v === \"function\" ? v : (val) => val == v;\n        candidateLocs = 0;\n        // count up the number of candidate locations\n        for (k = 0; k < Math.max(this.width, this.height) && !candidateLocs; k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if (this.hasXY(i, j) &&\n                        (i == x - k || i == x + k || j == y - k || j == y + k) &&\n                        fn(this[i][j], i, j, this)) {\n                        candidateLocs++;\n                    }\n                }\n            }\n        }\n        if (candidateLocs == 0) {\n            return [-1, -1];\n        }\n        // and pick one\n        if (deterministic) {\n            randIndex = 1 + Math.floor(candidateLocs / 2);\n        }\n        else {\n            randIndex = 1 + random.number(candidateLocs);\n        }\n        for (k = 0; k < Math.max(this.width, this.height); k++) {\n            for (i = x - k; i <= x + k; i++) {\n                for (j = y - k; j <= y + k; j++) {\n                    if (this.hasXY(i, j) &&\n                        (i == x - k || i == x + k || j == y - k || j == y + k) &&\n                        fn(this[i][j], i, j, this)) {\n                        if (--randIndex == 0) {\n                            loc[0] = i;\n                            loc[1] = j;\n                            return loc;\n                        }\n                    }\n                }\n            }\n        }\n        // brogueAssert(false);\n        return [-1, -1]; // should never reach this point\n    }\n    // Rotates around the cell, counting up the number of distinct strings of neighbors with the same test result in a single revolution.\n    //\t\tZero means there are no impassable tiles adjacent.\n    //\t\tOne means it is adjacent to a wall.\n    //\t\tTwo means it is in a hallway or something similar.\n    //\t\tThree means it is the center of a T-intersection or something similar.\n    //\t\tFour means it is in the intersection of two hallways.\n    //\t\tFive or more means there is a bug.\n    arcCount(x, y, testFn) {\n        let arcCount, dir, oldX, oldY, newX, newY;\n        // brogueAssert(grid.hasXY(x, y));\n        testFn = testFn || Utils.IDENTITY;\n        arcCount = 0;\n        for (dir = 0; dir < CDIRS.length; dir++) {\n            oldX = x + CDIRS[(dir + 7) % 8][0];\n            oldY = y + CDIRS[(dir + 7) % 8][1];\n            newX = x + CDIRS[dir][0];\n            newY = y + CDIRS[dir][1];\n            // Counts every transition from passable to impassable or vice-versa on the way around the cell:\n            if ((this.hasXY(newX, newY) &&\n                testFn(this[newX][newY], newX, newY, this)) !=\n                (this.hasXY(oldX, oldY) && testFn(this[oldX][oldY], oldX, oldY, this))) {\n                arcCount++;\n            }\n        }\n        return Math.floor(arcCount / 2); // Since we added one when we entered a wall and another when we left.\n    }\n}\nconst GRID_CACHE = [];\n// @ts-ignore\nlet GRID_ACTIVE_COUNT = 0;\n// @ts-ignore\nlet GRID_ALLOC_COUNT = 0;\n// @ts-ignore\nlet GRID_CREATE_COUNT = 0;\n// @ts-ignore\nlet GRID_FREE_COUNT = 0;\nexport class NumGrid extends Grid {\n    constructor(w, h, v = 0) {\n        super(w, h, v);\n    }\n    static alloc(w, h, v = 0) {\n        if (!w || !h)\n            throw new Error(\"Grid alloc requires width and height parameters.\");\n        ++GRID_ACTIVE_COUNT;\n        ++GRID_ALLOC_COUNT;\n        let grid = GRID_CACHE.pop();\n        if (!grid) {\n            ++GRID_CREATE_COUNT;\n            return new NumGrid(w, h, v);\n        }\n        grid.resize(w, h, v);\n        return grid;\n    }\n    static free(grid) {\n        if (grid) {\n            if (GRID_CACHE.indexOf(grid) >= 0)\n                return;\n            GRID_CACHE.push(grid);\n            ++GRID_FREE_COUNT;\n            --GRID_ACTIVE_COUNT;\n        }\n    }\n    resize(width, height, v = 0) {\n        const fn = typeof v === \"function\" ? v : () => v;\n        while (this.length < width)\n            this.push([]);\n        this.length = width;\n        let x = 0;\n        let y = 0;\n        for (x = 0; x < width; ++x) {\n            const col = this[x];\n            for (y = 0; y < height; ++y) {\n                col[y] = fn(x, y);\n            }\n            col.length = height;\n        }\n        this._width = width;\n        this._height = height;\n        if (this.x !== undefined) {\n            this.x = undefined;\n            this.y = undefined;\n        }\n    }\n    findReplaceRange(findValueMin, findValueMax, fillValue) {\n        this.update((v) => {\n            if (v >= findValueMin && v <= findValueMax) {\n                return fillValue;\n            }\n            return v;\n        });\n    }\n    // Flood-fills the grid from (x, y) along cells that are within the eligible range.\n    // Returns the total count of filled cells.\n    floodFillRange(x, y, eligibleValueMin = 0, eligibleValueMax = 0, fillValue = 0) {\n        let dir;\n        let newX, newY, fillCount = 1;\n        if (fillValue >= eligibleValueMin && fillValue <= eligibleValueMax) {\n            throw new Error(\"Invalid grid flood fill\");\n        }\n        this[x][y] = fillValue;\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (this.hasXY(newX, newY) &&\n                this[newX][newY] >= eligibleValueMin &&\n                this[newX][newY] <= eligibleValueMax) {\n                fillCount += this.floodFillRange(newX, newY, eligibleValueMin, eligibleValueMax, fillValue);\n            }\n        }\n        return fillCount;\n    }\n    invert() {\n        this.update((v) => (v ? 0 : 1));\n    }\n    closestLocWithValue(x, y, value = 1) {\n        return this.closestMatchingLoc(x, y, (v) => v == value);\n    }\n    // Takes a grid as a mask of valid locations, chooses one randomly and returns it as (x, y).\n    // If there are no valid locations, returns (-1, -1).\n    randomLocWithValue(validValue = 1) {\n        return this.randomMatchingLoc((v) => v == validValue);\n    }\n    getQualifyingLocNear(x, y, deterministic = false) {\n        return this.matchingLocNear(x, y, (v) => !!v, deterministic);\n    }\n    leastPositiveValue() {\n        let least = Number.MAX_SAFE_INTEGER;\n        this.forEach((v) => {\n            if (v > 0 && v < least) {\n                least = v;\n            }\n        });\n        return least;\n    }\n    randomLeastPositiveLoc(deterministic = false) {\n        const targetValue = this.leastPositiveValue();\n        return this.randomMatchingLoc((v) => v == targetValue, deterministic);\n    }\n    // Marks a cell as being a member of blobNumber, then recursively iterates through the rest of the blob\n    floodFill(x, y, matchValue, fillValue) {\n        let dir;\n        let newX, newY, numberOfCells = 1;\n        const matchFn = typeof matchValue == \"function\"\n            ? matchValue\n            : (v) => v == matchValue;\n        const fillFn = typeof fillValue == \"function\" ? fillValue : () => fillValue;\n        this[x][y] = fillFn(this[x][y], x, y, this);\n        // Iterate through the four cardinal neighbors.\n        for (dir = 0; dir < 4; dir++) {\n            newX = x + DIRS[dir][0];\n            newY = y + DIRS[dir][1];\n            if (!this.hasXY(newX, newY)) {\n                continue;\n            }\n            if (matchFn(this[newX][newY], newX, newY, this)) {\n                // If the neighbor is an unmarked region cell,\n                numberOfCells += this.floodFill(newX, newY, matchFn, fillFn); // then recurse.\n            }\n        }\n        return numberOfCells;\n    }\n    _cellularAutomataRound(birthParameters /* char[9] */, survivalParameters /* char[9] */) {\n        let i, j, nbCount, newX, newY;\n        let dir;\n        let buffer2;\n        buffer2 = NumGrid.alloc(this.width, this.height);\n        buffer2.copy(this); // Make a backup of this in buffer2, so that each generation is isolated.\n        let didSomething = false;\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                nbCount = 0;\n                for (dir = 0; dir < DIRS.length; dir++) {\n                    newX = i + DIRS[dir][0];\n                    newY = j + DIRS[dir][1];\n                    if (this.hasXY(newX, newY) && buffer2[newX][newY]) {\n                        nbCount++;\n                    }\n                }\n                if (!buffer2[i][j] && birthParameters[nbCount] == \"t\") {\n                    this[i][j] = 1; // birth\n                    didSomething = true;\n                }\n                else if (buffer2[i][j] && survivalParameters[nbCount] == \"t\") {\n                    // survival\n                }\n                else {\n                    this[i][j] = 0; // death\n                    didSomething = true;\n                }\n            }\n        }\n        NumGrid.free(buffer2);\n        return didSomething;\n    }\n    // Loads up **grid with the results of a cellular automata simulation.\n    fillBlob(roundCount, minBlobWidth, minBlobHeight, maxBlobWidth, maxBlobHeight, percentSeeded, birthParameters, survivalParameters) {\n        let i, j, k;\n        let blobNumber, blobSize, topBlobNumber, topBlobSize;\n        let topBlobMinX, topBlobMinY, topBlobMaxX, topBlobMaxY, blobWidth, blobHeight;\n        let foundACellThisLine;\n        if (minBlobWidth >= maxBlobWidth) {\n            minBlobWidth = Math.round(0.75 * maxBlobWidth);\n            maxBlobWidth = Math.round(1.25 * maxBlobWidth);\n        }\n        if (minBlobHeight >= maxBlobHeight) {\n            minBlobHeight = Math.round(0.75 * maxBlobHeight);\n            maxBlobHeight = Math.round(1.25 * maxBlobHeight);\n        }\n        const left = Math.floor((this.width - maxBlobWidth) / 2);\n        const top = Math.floor((this.height - maxBlobHeight) / 2);\n        // Generate blobs until they satisfy the minBlobWidth and minBlobHeight restraints\n        do {\n            // Clear buffer.\n            this.fill(0);\n            // Fill relevant portion with noise based on the percentSeeded argument.\n            for (i = 0; i < maxBlobWidth; i++) {\n                for (j = 0; j < maxBlobHeight; j++) {\n                    this[i + left][j + top] = random.chance(percentSeeded) ? 1 : 0;\n                }\n            }\n            // Some iterations of cellular automata\n            for (k = 0; k < roundCount; k++) {\n                if (!this._cellularAutomataRound(birthParameters, survivalParameters)) {\n                    k = roundCount; // cellularAutomataRound did not make any changes\n                }\n            }\n            // Now to measure the result. These are best-of variables; start them out at worst-case values.\n            topBlobSize = 0;\n            topBlobNumber = 0;\n            topBlobMinX = this.width;\n            topBlobMaxX = 0;\n            topBlobMinY = this.height;\n            topBlobMaxY = 0;\n            // Fill each blob with its own number, starting with 2 (since 1 means floor), and keeping track of the biggest:\n            blobNumber = 2;\n            for (i = 0; i < this.width; i++) {\n                for (j = 0; j < this.height; j++) {\n                    if (this[i][j] == 1) {\n                        // an unmarked blob\n                        // Mark all the cells and returns the total size:\n                        blobSize = this.floodFill(i, j, 1, blobNumber);\n                        if (blobSize > topBlobSize) {\n                            // if this blob is a new record\n                            topBlobSize = blobSize;\n                            topBlobNumber = blobNumber;\n                        }\n                        blobNumber++;\n                    }\n                }\n            }\n            // Figure out the top blob's height and width:\n            // First find the max & min x:\n            for (i = 0; i < this.width; i++) {\n                foundACellThisLine = false;\n                for (j = 0; j < this.height; j++) {\n                    if (this[i][j] == topBlobNumber) {\n                        foundACellThisLine = true;\n                        break;\n                    }\n                }\n                if (foundACellThisLine) {\n                    if (i < topBlobMinX) {\n                        topBlobMinX = i;\n                    }\n                    if (i > topBlobMaxX) {\n                        topBlobMaxX = i;\n                    }\n                }\n            }\n            // Then the max & min y:\n            for (j = 0; j < this.height; j++) {\n                foundACellThisLine = false;\n                for (i = 0; i < this.width; i++) {\n                    if (this[i][j] == topBlobNumber) {\n                        foundACellThisLine = true;\n                        break;\n                    }\n                }\n                if (foundACellThisLine) {\n                    if (j < topBlobMinY) {\n                        topBlobMinY = j;\n                    }\n                    if (j > topBlobMaxY) {\n                        topBlobMaxY = j;\n                    }\n                }\n            }\n            blobWidth = topBlobMaxX - topBlobMinX + 1;\n            blobHeight = topBlobMaxY - topBlobMinY + 1;\n        } while (blobWidth < minBlobWidth ||\n            blobHeight < minBlobHeight ||\n            topBlobNumber == 0);\n        // Replace the winning blob with 1's, and everything else with 0's:\n        for (i = 0; i < this.width; i++) {\n            for (j = 0; j < this.height; j++) {\n                if (this[i][j] == topBlobNumber) {\n                    this[i][j] = 1;\n                }\n                else {\n                    this[i][j] = 0;\n                }\n            }\n        }\n        // Populate the returned variables.\n        return {\n            x: topBlobMinX,\n            y: topBlobMinY,\n            width: blobWidth,\n            height: blobHeight,\n        };\n    }\n}\n// Grid.fillBlob = fillBlob;\nexport const alloc = NumGrid.alloc.bind(NumGrid);\nexport const free = NumGrid.free.bind(NumGrid);\nexport function make(w, h, v) {\n    if (v === undefined)\n        return new NumGrid(w, h, 0);\n    if (typeof v === \"number\")\n        return new NumGrid(w, h, v);\n    return new Grid(w, h, v);\n}\nMake.grid = make;\nexport function offsetZip(destGrid, srcGrid, srcToDestX, srcToDestY, value) {\n    const fn = typeof value === \"function\"\n        ? value\n        : (_, s, dx, dy) => (destGrid[dx][dy] = value || s);\n    srcGrid.forEach((c, i, j) => {\n        const destX = i + srcToDestX;\n        const destY = j + srcToDestY;\n        if (!destGrid.hasXY(destX, destY))\n            return;\n        if (!c)\n            return;\n        fn(destGrid[destX][destY], c, destX, destY, i, j, destGrid, srcGrid);\n    });\n}\n// Grid.offsetZip = offsetZip;\n// If the indicated tile is a wall on the room stored in grid, and it could be the site of\n// a door out of that room, then return the outbound direction that the door faces.\n// Otherwise, return def.NO_DIRECTION.\nexport function directionOfDoorSite(grid, x, y, isOpen) {\n    let dir, solutionDir;\n    let newX, newY, oppX, oppY;\n    const fnOpen = typeof isOpen === \"function\"\n        ? isOpen\n        : (v) => v == isOpen;\n    solutionDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < 4; dir++) {\n        newX = x + DIRS[dir][0];\n        newY = y + DIRS[dir][1];\n        oppX = x - DIRS[dir][0];\n        oppY = y - DIRS[dir][1];\n        if (grid.hasXY(oppX, oppY) &&\n            grid.hasXY(newX, newY) &&\n            fnOpen(grid[oppX][oppY], oppX, oppY, grid)) {\n            // This grid cell would be a valid tile on which to place a door that, facing outward, points dir.\n            if (solutionDir != Utils.NO_DIRECTION) {\n                // Already claimed by another direction; no doors here!\n                return Utils.NO_DIRECTION;\n            }\n            solutionDir = dir;\n        }\n    }\n    return solutionDir;\n}\n// Grid.directionOfDoorSite = directionOfDoorSite;\nexport function intersection(onto, a, b) {\n    b = b || onto;\n    onto.update((_, i, j) => a[i][j] && b[i][j]);\n}\n// Grid.intersection = intersection;\nexport function unite(onto, a, b) {\n    b = b || onto;\n    onto.update((_, i, j) => b[i][j] || a[i][j]);\n}\n//# sourceMappingURL=grid.js.map","import * as Utils from \"./utils\";\nexport var commands = {};\nexport function addCommand(id, fn) {\n    commands[id] = fn;\n}\nlet KEYMAP = {};\nconst EVENTS = [];\nconst DEAD_EVENTS = [];\nconst LAST_CLICK = { x: -1, y: -1 };\nexport const KEYPRESS = \"keypress\";\nexport const MOUSEMOVE = \"mousemove\";\nexport const CLICK = \"click\";\nexport const TICK = \"tick\";\nexport const MOUSEUP = \"mouseup\";\nconst CONTROL_CODES = [\n    \"ShiftLeft\",\n    \"ShiftRight\",\n    \"ControlLeft\",\n    \"ControlRight\",\n    \"AltLeft\",\n    \"AltRight\",\n    \"MetaLeft\",\n    \"MetaRight\",\n];\nvar CURRENT_HANDLER = null;\nvar PAUSED = null;\nexport function setKeymap(keymap) {\n    KEYMAP = keymap;\n}\nexport function hasEvents() {\n    return EVENTS.length;\n}\nexport function clearEvents() {\n    while (EVENTS.length) {\n        const ev = EVENTS.shift();\n        DEAD_EVENTS.push(ev);\n    }\n}\nexport function pushEvent(ev) {\n    if (PAUSED) {\n        console.log(\"PAUSED EVENT\", ev.type);\n    }\n    if (EVENTS.length) {\n        const last = EVENTS[EVENTS.length - 1];\n        if (last.type === ev.type) {\n            if (last.type === MOUSEMOVE) {\n                last.x = ev.x;\n                last.y = ev.y;\n                recycleEvent(ev);\n                return;\n            }\n        }\n    }\n    // Keep clicks down to one per cell if holding down mouse button\n    if (ev.type === CLICK) {\n        if (LAST_CLICK.x == ev.x && LAST_CLICK.y == ev.y) {\n            recycleEvent(ev);\n            return;\n        }\n        LAST_CLICK.x = ev.x;\n        LAST_CLICK.y = ev.y;\n    }\n    else if (ev.type == MOUSEUP) {\n        LAST_CLICK.x = -1;\n        LAST_CLICK.y = -1;\n        recycleEvent(ev);\n        return;\n    }\n    if (CURRENT_HANDLER) {\n        CURRENT_HANDLER(ev);\n    }\n    else if (ev.type === TICK) {\n        const first = EVENTS[0];\n        if (first && first.type === TICK) {\n            first.dt += ev.dt;\n            recycleEvent(ev);\n            return;\n        }\n        EVENTS.unshift(ev); // ticks go first\n    }\n    else {\n        EVENTS.push(ev);\n    }\n}\nexport async function dispatchEvent(ev, km) {\n    let result;\n    let command;\n    km = km || KEYMAP;\n    if (typeof km === \"function\") {\n        command = km;\n    }\n    else if (ev.dir) {\n        command = km.dir;\n    }\n    else if (ev.type === KEYPRESS) {\n        // @ts-ignore\n        command = km[ev.key] || km[ev.code] || km.keypress;\n    }\n    else if (km[ev.type]) {\n        command = km[ev.type];\n    }\n    if (command) {\n        if (typeof command === \"function\") {\n            result = await command.call(km, ev);\n        }\n        else if (commands[command]) {\n            result = await commands[command](ev);\n        }\n        else {\n            Utils.WARN(\"No command found: \" + command);\n        }\n    }\n    if (\"next\" in km && km.next === false) {\n        result = false;\n    }\n    recycleEvent(ev);\n    return result;\n}\nfunction recycleEvent(ev) {\n    DEAD_EVENTS.push(ev);\n}\n// TICK\nexport function makeTickEvent(dt) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = false;\n    ev.ctrlKey = false;\n    ev.altKey = false;\n    ev.metaKey = false;\n    ev.type = TICK;\n    ev.key = null;\n    ev.code = null;\n    ev.x = -1;\n    ev.y = -1;\n    ev.dir = null;\n    ev.dt = dt;\n    return ev;\n}\n// KEYBOARD\nexport function makeKeyEvent(e) {\n    let key = e.key;\n    let code = e.code.toLowerCase();\n    if (e.shiftKey) {\n        key = key.toUpperCase();\n        code = code.toUpperCase();\n    }\n    if (e.ctrlKey) {\n        key = \"^\" + key;\n        code = \"^\" + code;\n    }\n    if (e.metaKey) {\n        key = \"#\" + key;\n        code = \"#\" + code;\n    }\n    if (e.altKey) {\n        code = \"/\" + code;\n    }\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = KEYPRESS;\n    ev.key = key;\n    ev.code = code;\n    ev.x = -1;\n    ev.y = -1;\n    ev.clientX = -1;\n    ev.clientY = -1;\n    ev.dir = keyCodeDirection(e.code);\n    ev.dt = 0;\n    return ev;\n}\nexport function keyCodeDirection(key) {\n    const lowerKey = key.toLowerCase();\n    if (lowerKey === \"arrowup\") {\n        return [0, -1];\n    }\n    else if (lowerKey === \"arrowdown\") {\n        return [0, 1];\n    }\n    else if (lowerKey === \"arrowleft\") {\n        return [-1, 0];\n    }\n    else if (lowerKey === \"arrowright\") {\n        return [1, 0];\n    }\n    return null;\n}\nexport function ignoreKeyEvent(e) {\n    return CONTROL_CODES.includes(e.code);\n}\n// MOUSE\nexport var mouse = { x: -1, y: -1 };\nexport function makeMouseEvent(e, x, y) {\n    const ev = DEAD_EVENTS.pop() || {};\n    ev.shiftKey = e.shiftKey;\n    ev.ctrlKey = e.ctrlKey;\n    ev.altKey = e.altKey;\n    ev.metaKey = e.metaKey;\n    ev.type = e.type;\n    if (e.buttons && e.type !== \"mouseup\") {\n        ev.type = CLICK;\n    }\n    ev.key = null;\n    ev.code = null;\n    ev.x = x;\n    ev.y = y;\n    ev.clientX = e.clientX;\n    ev.clientY = e.clientY;\n    ev.dir = null;\n    ev.dt = 0;\n    return ev;\n}\n// IO\nexport function pauseEvents() {\n    if (PAUSED)\n        return;\n    PAUSED = CURRENT_HANDLER;\n    CURRENT_HANDLER = null;\n    // io.debug('events paused');\n}\nexport function resumeEvents() {\n    if (!PAUSED)\n        return;\n    if (CURRENT_HANDLER) {\n        console.warn(\"overwrite CURRENT HANDLER!\");\n    }\n    CURRENT_HANDLER = PAUSED;\n    PAUSED = null;\n    // io.debug('resuming events');\n    if (EVENTS.length && CURRENT_HANDLER) {\n        const e = EVENTS.shift();\n        // io.debug('- processing paused event', e.type);\n        CURRENT_HANDLER(e);\n        // io.recycleEvent(e);\t// DO NOT DO THIS B/C THE HANDLER MAY PUT IT BACK ON THE QUEUE (see tickMs)\n    }\n    // io.debug('events resumed');\n}\nexport function nextEvent(ms, match) {\n    match = match || Utils.TRUE;\n    let elapsed = 0;\n    while (EVENTS.length) {\n        const e = EVENTS.shift();\n        if (e.type === MOUSEMOVE) {\n            mouse.x = e.x;\n            mouse.y = e.y;\n        }\n        if (match(e)) {\n            return Promise.resolve(e);\n        }\n        recycleEvent(e);\n    }\n    let done;\n    if (ms === undefined) {\n        ms = -1; // wait forever\n    }\n    if (ms == 0)\n        return Promise.resolve(null);\n    if (CURRENT_HANDLER) {\n        console.warn(\"OVERWRITE HANDLER - nextEvent\");\n    }\n    else if (EVENTS.length) {\n        console.warn(\"SET HANDLER WITH QUEUED EVENTS - nextEvent\");\n    }\n    CURRENT_HANDLER = (e) => {\n        if (e.type === MOUSEMOVE) {\n            mouse.x = e.x;\n            mouse.y = e.y;\n        }\n        if (e.type === TICK && ms > 0) {\n            elapsed += e.dt;\n            if (elapsed < ms) {\n                return;\n            }\n        }\n        else if (!match(e))\n            return;\n        CURRENT_HANDLER = null;\n        e.dt = elapsed;\n        done(e);\n    };\n    return new Promise((resolve) => (done = resolve));\n}\nexport async function tickMs(ms = 1) {\n    let done;\n    setTimeout(() => done(), ms);\n    return new Promise((resolve) => (done = resolve));\n}\nexport async function nextKeyPress(ms, match) {\n    if (ms === undefined)\n        ms = -1;\n    match = match || Utils.TRUE;\n    function matchingKey(e) {\n        if (e.type !== KEYPRESS)\n            return false;\n        return match(e);\n    }\n    return nextEvent(ms, matchingKey);\n}\nexport async function nextKeyOrClick(ms, matchFn) {\n    if (ms === undefined)\n        ms = -1;\n    matchFn = matchFn || Utils.TRUE;\n    function match(e) {\n        if (e.type !== KEYPRESS && e.type !== CLICK)\n            return false;\n        return matchFn(e);\n    }\n    return nextEvent(ms, match);\n}\nexport async function pause(ms) {\n    const e = await nextKeyOrClick(ms);\n    return e && e.type !== TICK;\n}\nexport function waitForAck() {\n    return pause(5 * 60 * 1000); // 5 min\n}\nexport async function loop(keymap) {\n    let running = true;\n    while (running) {\n        const ev = await nextEvent();\n        if (ev && (await dispatchEvent(ev, keymap))) {\n            running = false;\n        }\n    }\n}\n//# sourceMappingURL=io.js.map","// CREDIT - This is adapted from: http://roguebasin.roguelikedevelopment.org/index.php?title=Improved_Shadowcasting_in_Java\nimport * as Utils from \"./utils\";\nexport class FOV {\n    constructor(strategy) {\n        this._startX = -1;\n        this._startY = -1;\n        this._maxRadius = 100;\n        this._isBlocked = strategy.isBlocked;\n        this._calcRadius = strategy.calcRadius || Utils.calcRadius;\n        this._setVisible = strategy.setVisible;\n        this._hasXY = strategy.hasXY || Utils.TRUE;\n    }\n    calculate(x, y, maxRadius) {\n        this._setVisible(x, y, 1);\n        this._startX = x;\n        this._startY = y;\n        this._maxRadius = maxRadius + 1;\n        // uses the diagonals\n        for (let i = 4; i < 8; ++i) {\n            const d = Utils.DIRS[i];\n            this.castLight(1, 1.0, 0.0, 0, d[0], d[1], 0);\n            this.castLight(1, 1.0, 0.0, d[0], 0, 0, d[1]);\n        }\n    }\n    // NOTE: slope starts a 1 and ends at 0.\n    castLight(row, startSlope, endSlope, xx, xy, yx, yy) {\n        if (row >= this._maxRadius) {\n            // fov.debug('CAST: row=%d, start=%d, end=%d, row >= maxRadius => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        if (startSlope < endSlope) {\n            // fov.debug('CAST: row=%d, start=%d, end=%d, start < end => cancel', row, startSlope.toFixed(2), endSlope.toFixed(2));\n            return;\n        }\n        // fov.debug('CAST: row=%d, start=%d, end=%d, x=%d,%d, y=%d,%d', row, startSlope.toFixed(2), endSlope.toFixed(2), xx, xy, yx, yy);\n        let nextStart = startSlope;\n        let blocked = false;\n        let deltaY = -row;\n        let currentX, currentY, outerSlope, innerSlope, maxSlope, minSlope = 0;\n        for (let deltaX = -row; deltaX <= 0; deltaX++) {\n            currentX = Math.floor(this._startX + deltaX * xx + deltaY * xy);\n            currentY = Math.floor(this._startY + deltaX * yx + deltaY * yy);\n            outerSlope = (deltaX - 0.5) / (deltaY + 0.5);\n            innerSlope = (deltaX + 0.5) / (deltaY - 0.5);\n            maxSlope = deltaX / (deltaY + 0.5);\n            minSlope = (deltaX + 0.5) / deltaY;\n            if (!this._hasXY(currentX, currentY)) {\n                blocked = true;\n                // nextStart = innerSlope;\n                continue;\n            }\n            // fov.debug('- test %d,%d ... start=%d, min=%d, max=%d, end=%d, dx=%d, dy=%d', currentX, currentY, startSlope.toFixed(2), maxSlope.toFixed(2), minSlope.toFixed(2), endSlope.toFixed(2), deltaX, deltaY);\n            if (startSlope < minSlope) {\n                blocked = this._isBlocked(currentX, currentY);\n                continue;\n            }\n            else if (endSlope > maxSlope) {\n                break;\n            }\n            //check if it's within the lightable area and light if needed\n            const radius = this._calcRadius(deltaX, deltaY);\n            if (radius < this._maxRadius) {\n                const bright = 1 - radius / this._maxRadius;\n                this._setVisible(currentX, currentY, bright);\n                // fov.debug('       - visible');\n            }\n            if (blocked) {\n                //previous cell was a blocking one\n                if (this._isBlocked(currentX, currentY)) {\n                    //hit a wall\n                    // fov.debug('       - blocked ... nextStart: %d', innerSlope.toFixed(2));\n                    nextStart = innerSlope;\n                    continue;\n                }\n                else {\n                    blocked = false;\n                }\n            }\n            else {\n                if (this._isBlocked(currentX, currentY) && row < this._maxRadius) {\n                    //hit a wall within sight line\n                    // fov.debug('       - blocked ... start:%d, end:%d, nextStart: %d', nextStart.toFixed(2), outerSlope.toFixed(2), innerSlope.toFixed(2));\n                    blocked = true;\n                    this.castLight(row + 1, nextStart, outerSlope, xx, xy, yx, yy);\n                    nextStart = innerSlope;\n                }\n            }\n        }\n        if (!blocked) {\n            this.castLight(row + 1, nextStart, endSlope, xx, xy, yx, yy);\n        }\n    }\n}\n//# sourceMappingURL=fov.js.map","import * as Grid from \"./grid\";\nimport * as Utils from \"./utils\";\n// var PATH = {};\n// export { PATH as path };\nexport const FORBIDDEN = -1;\nexport const OBSTRUCTION = -2;\nexport const AVOIDED = 10;\nexport const NO_PATH = 30000;\nfunction makeCostLink(i) {\n    return {\n        distance: 0,\n        cost: 0,\n        index: i,\n        left: null,\n        right: null,\n    };\n}\nfunction makeDijkstraMap(w, h) {\n    return {\n        eightWays: false,\n        front: makeCostLink(-1),\n        links: Grid.makeArray(w * h, (i) => makeCostLink(i)),\n        width: w,\n        height: h,\n    };\n}\nfunction getLink(map, x, y) {\n    return map.links[x + map.width * y];\n}\nconst DIRS = Utils.DIRS;\nfunction update(map) {\n    let dir, dirs;\n    let linkIndex;\n    let left = null, right = null, link = null;\n    dirs = map.eightWays ? 8 : 4;\n    let head = map.front.right;\n    map.front.right = null;\n    while (head != null) {\n        for (dir = 0; dir < dirs; dir++) {\n            linkIndex = head.index + (DIRS[dir][0] + map.width * DIRS[dir][1]);\n            if (linkIndex < 0 || linkIndex >= map.width * map.height)\n                continue;\n            link = map.links[linkIndex];\n            // verify passability\n            if (link.cost < 0)\n                continue;\n            let diagCost = 0;\n            if (dir >= 4) {\n                diagCost = 0.4142;\n                let way1, way1index, way2, way2index;\n                way1index = head.index + DIRS[dir][0];\n                if (way1index < 0 || way1index >= map.width * map.height)\n                    continue;\n                way2index = head.index + map.width * DIRS[dir][1];\n                if (way2index < 0 || way2index >= map.width * map.height)\n                    continue;\n                way1 = map.links[way1index];\n                way2 = map.links[way2index];\n                if (way1.cost == OBSTRUCTION || way2.cost == OBSTRUCTION)\n                    continue;\n            }\n            if (head.distance + link.cost + diagCost < link.distance) {\n                link.distance = head.distance + link.cost + diagCost;\n                // reinsert the touched cell; it'll be close to the beginning of the list now, so\n                // this will be very fast.  start by removing it.\n                if (link.right != null)\n                    link.right.left = link.left;\n                if (link.left != null)\n                    link.left.right = link.right;\n                left = head;\n                right = head.right;\n                while (right != null && right.distance < link.distance) {\n                    left = right;\n                    right = right.right;\n                }\n                if (left != null)\n                    left.right = link;\n                link.right = right;\n                link.left = left;\n                if (right != null)\n                    right.left = link;\n            }\n        }\n        right = head.right;\n        head.left = null;\n        head.right = null;\n        head = right;\n    }\n}\nfunction clear(map, maxDistance, eightWays) {\n    let i;\n    map.eightWays = eightWays;\n    map.front.right = null;\n    for (i = 0; i < map.width * map.height; i++) {\n        map.links[i].distance = maxDistance;\n        map.links[i].left = map.links[i].right = null;\n    }\n}\n// function pdsGetDistance(map, x, y) {\n// \tupdate(map);\n// \treturn getLink(map, x, y).distance;\n// }\nfunction setDistance(map, x, y, distance) {\n    let left, right, link;\n    if (x > 0 && y > 0 && x < map.width - 1 && y < map.height - 1) {\n        link = getLink(map, x, y);\n        if (link.distance > distance) {\n            link.distance = distance;\n            if (link.right != null)\n                link.right.left = link.left;\n            if (link.left != null)\n                link.left.right = link.right;\n            left = map.front;\n            right = map.front.right;\n            while (right != null && right.distance < link.distance) {\n                left = right;\n                right = right.right;\n            }\n            link.right = right;\n            link.left = left;\n            left.right = link;\n            if (right != null)\n                right.left = link;\n        }\n    }\n}\n// function pdsSetCosts(map: DijkstraMap, costMap: Grid.NumGrid) {\n// \tlet i, j;\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n// \t\t\tif (i != 0 && j != 0 && i < map.width - 1 && j < map.height - 1) {\n// \t\t\t\tgetLink(map, i, j).cost = costMap[i][j];\n// \t\t\t} else {\n// \t\t\t\tgetLink(map, i, j).cost = FORBIDDEN;\n// \t\t\t}\n// \t\t}\n// \t}\n// }\nfunction isBoundaryXY(data, x, y) {\n    if (x <= 0 || y <= 0)\n        return true;\n    if (x >= data.length - 1 || y >= data[0].length - 1)\n        return true;\n    return false;\n}\n// function pdsBatchInput(\n//   map: DijkstraMap,\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   maxDistance: number,\n//   eightWays: boolean\n// ) {\n//   let i, j;\n//   map.eightWays = eightWays;\n//   let left: CostLink | null = map.front;\n//   let right: CostLink | null = map.front.right;\n//   map.front.right = null;\n//   for (i = 0; i < map.width; i++) {\n//     for (j = 0; j < map.height; j++) {\n//       let link = getLink(map, i, j);\n//       if (distanceMap != null) {\n//         link.distance = distanceMap[i][j];\n//       } else {\n//         if (costMap != null) {\n//           // totally hackish; refactor\n//           link.distance = maxDistance;\n//         }\n//       }\n//       let cost;\n//       if (isBoundaryXY(costMap, i, j)) {\n//         cost = OBSTRUCTION;\n//       } else {\n//         cost = costMap[i][j];\n//       }\n//       link.cost = cost;\n//       if (cost > 0) {\n//         if (link.distance < maxDistance) {\n//           if (right === null || right.distance > link.distance) {\n//             // left and right are used to traverse the list; if many cells have similar values,\n//             // some time can be saved by not clearing them with each insertion.  this time,\n//             // sadly, we have to start from the front.\n//             left = map.front;\n//             right = map.front.right;\n//           }\n//           while (right !== null && right.distance < link.distance) {\n//             left = right;\n//             right = right.right;\n//           }\n//           link.right = right;\n//           link.left = left;\n//           left.right = link;\n//           if (right != null) right.left = link;\n//           left = link;\n//         } else {\n//           link.right = null;\n//           link.left = null;\n//         }\n//       } else {\n//         link.right = null;\n//         link.left = null;\n//       }\n//     }\n//   }\n// }\nfunction batchOutput(map, distanceMap) {\n    let i, j;\n    update(map);\n    // transfer results to the distanceMap\n    for (i = 0; i < map.width; i++) {\n        for (j = 0; j < map.height; j++) {\n            distanceMap[i][j] = getLink(map, i, j).distance;\n        }\n    }\n}\nvar DIJKSTRA_MAP;\n// function dijkstraScan(\n//   distanceMap: Grid.NumGrid,\n//   costMap: Grid.NumGrid,\n//   useDiagonals = false\n// ) {\n//   // static makeDijkstraMap map;\n//   const width = distanceMap.length;\n//   const height = distanceMap[0].length;\n//   if (\n//     !DIJKSTRA_MAP ||\n//     DIJKSTRA_MAP.width < width ||\n//     DIJKSTRA_MAP.height < height\n//   ) {\n//     DIJKSTRA_MAP = makeDijkstraMap(width, height);\n//   }\n//   DIJKSTRA_MAP.width = width;\n//   DIJKSTRA_MAP.height = height;\n//   pdsBatchInput(DIJKSTRA_MAP, distanceMap, costMap, NO_PATH, useDiagonals);\n//   batchOutput(DIJKSTRA_MAP, distanceMap);\n// }\n//\n// function populateGenericCostMap(costMap, map) {\n//   let i, j;\n//\n// \tfor (i=0; i<map.width; i++) {\n// \t\tfor (j=0; j<map.height; j++) {\n//       if (map.hasTileFlag(i, j, def.T_OBSTRUCTS_PASSABILITY)\n//           && (!map.hasTileMechFlag(i, j, def.TM_IS_SECRET) || (map.discoveredTileFlags(i, j) & def.T_OBSTRUCTS_PASSABILITY)))\n// \t\t\t{\n// \t\t\t\tcostMap[i][j] = map.hasTileFlag(i, j, def.T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n//       } else if (map.hasTileFlag(i, j, def.T_PATHING_BLOCKER & ~def.T_OBSTRUCTS_PASSABILITY)) {\n// \t\t\t\tcostMap[i][j] = FORBIDDEN;\n//       } else {\n//         costMap[i][j] = 1;\n//       }\n//     }\n//   }\n// }\n//\n// GW.path.populateGenericCostMap = populateGenericCostMap;\n//\n//\n// function baseCostFunction(blockingTerrainFlags, traveler, canUseSecretDoors, i, j) {\n// \tlet cost = 1;\n// \tmonst = GW.MAP.actorAt(i, j);\n// \tconst monstFlags = (monst ? (monst.info ? monst.info.flags : monst.flags) : 0) || 0;\n// \tif ((monstFlags & (def.MONST_IMMUNE_TO_WEAPONS | def.MONST_INVULNERABLE))\n// \t\t\t&& (monstFlags & (def.MONST_IMMOBILE | def.MONST_GETS_TURN_ON_ACTIVATION)))\n// \t{\n// \t\t\t// Always avoid damage-immune stationary monsters.\n// \t\tcost = FORBIDDEN;\n// \t} else if (canUseSecretDoors\n// \t\t\t&& GW.MAP.hasTileMechFlag(i, j, TM_IS_SECRET)\n// \t\t\t&& GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t&& !(GW.MAP.hasDiscoveredFlag(i, j) & T_OBSTRUCTS_PASSABILITY))\n// \t{\n// \t\tcost = 1;\n// \t} else if (GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_PASSABILITY)\n// \t\t\t\t || (traveler && traveler === GW.PLAYER && !(GW.MAP.hasCellFlag(i, j, (REVEALED | MAGIC_MAPPED)))))\n// \t{\n// \t\tcost = GW.MAP.hasTileFlag(i, j, T_OBSTRUCTS_DIAGONAL_MOVEMENT) ? OBSTRUCTION : FORBIDDEN;\n// \t} else if ((traveler && GW.actor.avoidsCell(traveler, i, j)) || GW.MAP.hasTileFlag(i, j, blockingTerrainFlags)) {\n// \t\tcost = FORBIDDEN;\n// \t}\n//\n// \treturn cost;\n// }\n//\n// GW.path.costFn = baseCostFunction;\n// GW.path.simpleCost = baseCostFunction.bind(undefined, 0, null, false);\n// GW.path.costForActor = ((actor) => baseCostFunction.bind(undefined, GW.actor.forbiddenFlags(actor), actor, actor !== GW.PLAYER));\nexport function calculateDistances(distanceMap, destinationX, destinationY, costMap, eightWays = false) {\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    if (!DIJKSTRA_MAP ||\n        DIJKSTRA_MAP.width < width ||\n        DIJKSTRA_MAP.height < height) {\n        DIJKSTRA_MAP = makeDijkstraMap(width, height);\n    }\n    DIJKSTRA_MAP.width = width;\n    DIJKSTRA_MAP.height = height;\n    let i, j;\n    for (i = 0; i < width; i++) {\n        for (j = 0; j < height; j++) {\n            getLink(DIJKSTRA_MAP, i, j).cost = isBoundaryXY(costMap, i, j)\n                ? OBSTRUCTION\n                : costMap[i][j];\n        }\n    }\n    clear(DIJKSTRA_MAP, NO_PATH, eightWays);\n    setDistance(DIJKSTRA_MAP, destinationX, destinationY, 0);\n    batchOutput(DIJKSTRA_MAP, distanceMap);\n    // TODO - Add this where called!\n    //   distanceMap.x = destinationX;\n    //   distanceMap.y = destinationY;\n}\n// function pathingDistance(x1, y1, x2, y2, blockingTerrainFlags, actor) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tconst costFn = baseCostFunction.bind(undefined, blockingTerrainFlags, actor, true);\n// \tcalculateDistances(distanceMap, x2, y2, costFn, true);\n// \tretval = distanceMap[x1][y1];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.path.distanceFromTo = pathingDistance;\n// function monstTravelDistance(monst, x2, y2, blockingTerrainFlags) {\n// \tlet retval;\n// \tconst distanceMap = GW.grid.alloc(DUNGEON.width, DUNGEON.height, 0);\n// \tcalculateDistances(distanceMap, x2, y2, blockingTerrainFlags, monst, true, true);\n// \tretval = distanceMap[monst.x][monst.y];\n// \tGW.grid.free(distanceMap);\n// \treturn retval;\n// }\n//\n// GW.actor.travelDistance = monstTravelDistance;\n// Returns null if there are no beneficial moves.\n// If preferDiagonals is true, we will prefer diagonal moves.\n// Always rolls downhill on the distance map.\n// If monst is provided, do not return a direction pointing to\n// a cell that the monster avoids.\nexport function nextStep(distanceMap, x, y, isBlocked, useDiagonals = false) {\n    let newX, newY, bestScore;\n    let dir, bestDir;\n    let blocked;\n    // brogueAssert(coordinatesAreInMap(x, y));\n    bestScore = 0;\n    bestDir = Utils.NO_DIRECTION;\n    for (dir = 0; dir < (useDiagonals ? 8 : 4); ++dir) {\n        newX = x + Utils.DIRS[dir][0];\n        newY = y + Utils.DIRS[dir][1];\n        blocked = isBlocked(newX, newY, x, y, distanceMap);\n        if (!blocked && distanceMap[x][y] - distanceMap[newX][newY] > bestScore) {\n            bestDir = dir;\n            bestScore = distanceMap[x][y] - distanceMap[newX][newY];\n        }\n    }\n    return Utils.DIRS[bestDir] || null;\n}\nfunction getClosestValidLocationOnMap(distanceMap, x, y) {\n    let i, j, dist, closestDistance, lowestMapScore;\n    let locX = -1;\n    let locY = -1;\n    const width = distanceMap.length;\n    const height = distanceMap[0].length;\n    closestDistance = 10000;\n    lowestMapScore = 10000;\n    for (i = 1; i < width - 1; i++) {\n        for (j = 1; j < height - 1; j++) {\n            if (distanceMap[i][j] >= 0 && distanceMap[i][j] < NO_PATH) {\n                dist = (i - x) * (i - x) + (j - y) * (j - y);\n                if (dist < closestDistance ||\n                    (dist == closestDistance && distanceMap[i][j] < lowestMapScore)) {\n                    locX = i;\n                    locY = j;\n                    closestDistance = dist;\n                    lowestMapScore = distanceMap[i][j];\n                }\n            }\n        }\n    }\n    if (locX >= 0)\n        return [locX, locY];\n    return null;\n}\n// Populates path[][] with a list of coordinates starting at origin and traversing down the map. Returns the number of steps in the path.\nexport function getPath(distanceMap, originX, originY, isBlocked) {\n    // actor = actor || GW.PLAYER;\n    let x = originX;\n    let y = originY;\n    let steps = 0;\n    if (distanceMap[x][y] < 0 || distanceMap[x][y] >= NO_PATH) {\n        const loc = getClosestValidLocationOnMap(distanceMap, x, y);\n        if (loc) {\n            x = loc[0];\n            y = loc[1];\n        }\n    }\n    const path = [[x, y]];\n    let dir;\n    do {\n        dir = nextStep(distanceMap, x, y, isBlocked, true);\n        if (dir) {\n            x += dir[0];\n            y += dir[1];\n            // path[steps][0] = x;\n            // path[steps][1] = y;\n            path.push([x, y]);\n            steps++;\n            // brogueAssert(coordinatesAreInMap(x, y));\n        }\n    } while (dir);\n    return steps ? path : null;\n}\n//\n// GW.path.from = getMonsterPathOnMap;\n//# sourceMappingURL=path.js.map","import * as Utils from \"./utils\";\n/**\n * Data for an event listener.\n */\nexport class Listener {\n    /**\n     * Creates a Listener.\n     * @param {Function} fn The listener function.\n     * @param {Object} [context=null] The context to invoke the listener with.\n     * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n     */\n    constructor(fn, context, once = false) {\n        this.fn = fn;\n        this.context = context || null;\n        this.once = once || false;\n        this.next = null;\n    }\n    /**\n     * Compares this Listener to the parameters.\n     * @param {Function} fn - The function\n     * @param {Object} [context] - The context Object.\n     * @param {Boolean} [once] - Whether or not it is a one time handler.\n     * @returns Whether or not this Listener matches the parameters.\n     */\n    matches(fn, context, once) {\n        return (this.fn === fn &&\n            (once === undefined || once == this.once) &&\n            (!context || this.context === context));\n    }\n}\nvar EVENTS = {};\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function addListener(event, fn, context, once = false) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"The listener must be a function\");\n    }\n    const listener = new Listener(fn, context || null, once);\n    Utils.addToChain(EVENTS, event, listener);\n    return listener;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {Listener}\n */\nexport function on(event, fn, context, once = false) {\n    return addListener(event, fn, context, once);\n}\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function once(event, fn, context) {\n    return addListener(event, fn, context, true);\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeListener(event, fn, context, once = false) {\n    if (!EVENTS[event])\n        return false;\n    if (!fn)\n        return false;\n    let success = false;\n    Utils.eachChain(EVENTS[event], (obj) => {\n        if (obj.matches(fn, context, once)) {\n            Utils.removeFromChain(EVENTS, event, obj);\n            success = true;\n        }\n    });\n    return success;\n}\n/**\n * Remove the listeners of a given event.\n *\n * @param {String} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function off(event, fn, context, once = false) {\n    return removeListener(event, fn, context, once);\n}\n/**\n * Clear event by name.\n *\n * @param {String} evt The Event name.\n */\nexport function clearEvent(event) {\n    if (EVENTS[event]) {\n        EVENTS[event] = null;\n    }\n}\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nexport function removeAllListeners(event) {\n    if (event) {\n        clearEvent(event);\n    }\n    else {\n        EVENTS = {};\n    }\n}\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String} event The event name.\n * @param {...*} args The additional arguments to the event handlers.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nexport async function emit(...args) {\n    const event = args[0];\n    if (!EVENTS[event])\n        return false; // no events to send\n    let listener = EVENTS[event];\n    while (listener) {\n        let next = listener.next;\n        if (listener.once)\n            Utils.removeFromChain(EVENTS, event, listener);\n        await listener.fn.apply(listener.context, args);\n        listener = next;\n    }\n    return true;\n}\n//# sourceMappingURL=events.js.map","export function make(v) {\n    if (v === undefined)\n        return () => 100;\n    if (v === null)\n        return () => 0;\n    if (typeof v === \"number\")\n        return () => v;\n    if (typeof v === \"function\")\n        return v;\n    let base = {};\n    if (typeof v === \"string\") {\n        const parts = v.split(/[,|]/).map((t) => t.trim());\n        base = {};\n        parts.forEach((p) => {\n            let [level, weight] = p.split(\":\");\n            base[level] = Number.parseInt(weight) || 100;\n        });\n    }\n    else {\n        base = v;\n    }\n    const parts = Object.entries(base);\n    const funcs = parts.map(([levels, frequency]) => {\n        frequency = Number.parseInt(frequency);\n        if (levels.includes(\"-\")) {\n            let [start, end] = levels\n                .split(\"-\")\n                .map((t) => t.trim())\n                .map((v) => Number.parseInt(v));\n            return (level) => level >= start && level <= end ? frequency : 0;\n        }\n        else if (levels.endsWith(\"+\")) {\n            const found = Number.parseInt(levels);\n            return (level) => (level >= found ? frequency : 0);\n        }\n        else {\n            const found = Number.parseInt(levels);\n            return (level) => (level === found ? frequency : 0);\n        }\n    });\n    if (funcs.length == 1)\n        return funcs[0];\n    return (level) => funcs.reduce((out, fn) => out || fn(level), 0);\n}\n//# sourceMappingURL=frequency.js.map","export class Scheduler {\n    constructor() {\n        this.next = null;\n        this.time = 0;\n        this.cache = null;\n    }\n    clear() {\n        while (this.next) {\n            const current = this.next;\n            this.next = current.next;\n            current.next = this.cache;\n            this.cache = current;\n        }\n    }\n    push(fn, delay = 1) {\n        let item;\n        if (this.cache) {\n            item = this.cache;\n            this.cache = item.next;\n            item.next = null;\n        }\n        else {\n            item = { fn: null, time: 0, next: null };\n        }\n        item.fn = fn;\n        item.time = this.time + delay;\n        if (!this.next) {\n            this.next = item;\n        }\n        else {\n            let current = this;\n            let next = current.next;\n            while (next && next.time <= item.time) {\n                current = next;\n                next = current.next;\n            }\n            item.next = current.next;\n            current.next = item;\n        }\n        return item;\n    }\n    pop() {\n        const n = this.next;\n        if (!n)\n            return null;\n        this.next = n.next;\n        n.next = this.cache;\n        this.cache = n;\n        this.time = Math.max(n.time, this.time); // so you can schedule -1 as a time uint\n        return n.fn;\n    }\n    remove(item) {\n        if (!item || !this.next)\n            return;\n        if (this.next === item) {\n            this.next = item.next;\n            return;\n        }\n        let prev = this.next;\n        let current = prev.next;\n        while (current && current !== item) {\n            prev = current;\n            current = current.next;\n        }\n        if (current === item) {\n            prev.next = current.next;\n        }\n    }\n}\n// export const scheduler = new Scheduler();\n//# sourceMappingURL=scheduler.js.map","// Based on: https://github.com/ondras/fastiles/blob/master/ts/shaders.ts (v2.1.0)\nexport const VS = `\n#version 300 es\nin uvec2 position;\nin uvec2 uv;\nin uint style;\nout vec2 fsUv;\nflat out uint fsStyle;\nuniform highp uvec2 tileSize;\nuniform uvec2 viewportSize;\nvoid main() {\n\tivec2 positionPx = ivec2(position * tileSize);\n\tvec2 positionNdc = (vec2(positionPx * 2) / vec2(viewportSize))-1.0;\n\tpositionNdc.y *= -1.0;\n\tgl_Position = vec4(positionNdc, 0.0, 1.0);\n\tfsUv = vec2(uv);\n\tfsStyle = style;\n}`.trim();\nexport const FS = `\n#version 300 es\nprecision highp float;\nin vec2 fsUv;\nflat in uint fsStyle;\nout vec4 fragColor;\nuniform sampler2D font;\nuniform highp uvec2 tileSize;\nvoid main() {\n\tuvec2 fontTiles = uvec2(textureSize(font, 0)) / tileSize;\n\n\tuint glyph = (fsStyle & uint(0xFF000000)) >> 24;\n\tuint glyphX = (glyph & uint(0xF));\n\tuint glyphY = (glyph >> 4);\n\tuvec2 fontPosition = uvec2(glyphX, glyphY);\n\n\tuvec2 fontPx = (tileSize * fontPosition) + uvec2(vec2(tileSize) * fsUv);\n\tvec3 texel = texelFetch(font, ivec2(fontPx), 0).rgb;\n\n\tfloat s = 15.0;\n\tuint fr = (fsStyle & uint(0xF00)) >> 8;\n\tuint fg = (fsStyle & uint(0x0F0)) >> 4;\n\tuint fb = (fsStyle & uint(0x00F)) >> 0;\n\tvec3 fgRgb = vec3(fr, fg, fb) / s;\n  \n\tuint br = (fsStyle & uint(0xF00000)) >> 20;\n\tuint bg = (fsStyle & uint(0x0F0000)) >> 16;\n\tuint bb = (fsStyle & uint(0x00F000)) >> 12;\n\tvec3 bgRgb = vec3(br, bg, bb) / s;\n  \n\tfragColor = vec4(mix(bgRgb, fgRgb, texel), 1.0);\n}`.trim();\n//# sourceMappingURL=shaders.js.map","export class Glyphs {\n    constructor(opts = {}) {\n        this._tileWidth = 12;\n        this._tileHeight = 16;\n        this.needsUpdate = true;\n        this._map = {};\n        opts.font = opts.font || \"monospace\";\n        this._node = document.createElement(\"canvas\");\n        this._ctx = this.node.getContext(\"2d\");\n        this._configure(opts);\n    }\n    static fromImage(src) {\n        if (typeof src === \"string\") {\n            if (src.startsWith(\"data:\"))\n                throw new Error(\"Glyph: You must load a data string into an image element and use that.\");\n            const el = document.getElementById(src);\n            if (!el)\n                throw new Error(\"Glyph: Failed to find image element with id:\" + src);\n            src = el;\n        }\n        const glyph = new this({\n            tileWidth: src.width / 16,\n            tileHeight: src.height / 16,\n        });\n        glyph._ctx.drawImage(src, 0, 0);\n        return glyph;\n    }\n    static fromFont(src) {\n        if (typeof src === \"string\") {\n            src = { font: src };\n        }\n        const glyphs = new this(src);\n        const basicOnly = src.basicOnly || src.basic || false;\n        glyphs._initGlyphs(basicOnly);\n        return glyphs;\n    }\n    get node() {\n        return this._node;\n    }\n    get ctx() {\n        return this._ctx;\n    }\n    get tileWidth() {\n        return this._tileWidth;\n    }\n    get tileHeight() {\n        return this._tileHeight;\n    }\n    get pxWidth() {\n        return this._node.width;\n    }\n    get pxHeight() {\n        return this._node.height;\n    }\n    forChar(ch) {\n        if (ch === null || ch === undefined)\n            return -1;\n        return this._map[ch] || -1;\n    }\n    _configure(opts) {\n        this._tileWidth = opts.tileWidth || this.tileWidth;\n        this._tileHeight = opts.tileHeight || this.tileHeight;\n        this.node.width = 16 * this.tileWidth;\n        this.node.height = 16 * this.tileHeight;\n        this._ctx.fillStyle = \"black\";\n        this._ctx.fillRect(0, 0, this.pxWidth, this.pxHeight);\n        const size = opts.fontSize || opts.size || Math.max(this.tileWidth, this.tileHeight);\n        this._ctx.font = \"\" + size + \"px \" + opts.font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n        this._ctx.fillStyle = \"white\";\n    }\n    draw(n, ch) {\n        if (n > 256)\n            throw new Error(\"Cannot draw more than 256 glyphs.\");\n        const x = (n % 16) * this.tileWidth;\n        const y = Math.floor(n / 16) * this.tileHeight;\n        const cx = x + Math.floor(this.tileWidth / 2);\n        const cy = y + Math.floor(this.tileHeight / 2);\n        this._ctx.save();\n        this._ctx.beginPath();\n        this._ctx.rect(x, y, this.tileWidth, this.tileHeight);\n        this._ctx.clip();\n        if (typeof ch === \"function\") {\n            ch(this._ctx, x, y, this.tileWidth, this.tileHeight);\n        }\n        else {\n            if (this._map[ch] === undefined)\n                this._map[ch] = n;\n            this._ctx.fillText(ch, cx, cy);\n        }\n        this._ctx.restore();\n        this.needsUpdate = true;\n    }\n    _initGlyphs(basicOnly = false) {\n        for (let i = 32; i < 127; ++i) {\n            this.draw(i, String.fromCharCode(i));\n        }\n        if (!basicOnly) {\n            [\n                \" \",\n                \"\\u263a\",\n                \"\\u263b\",\n                \"\\u2665\",\n                \"\\u2666\",\n                \"\\u2663\",\n                \"\\u2660\",\n                \"\\u263c\",\n                \"\\u2600\",\n                \"\\u2605\",\n                \"\\u2606\",\n                \"\\u2642\",\n                \"\\u2640\",\n                \"\\u266a\",\n                \"\\u266b\",\n                \"\\u2638\",\n                \"\\u25b6\",\n                \"\\u25c0\",\n                \"\\u2195\",\n                \"\\u203c\",\n                \"\\u204b\",\n                \"\\u262f\",\n                \"\\u2318\",\n                \"\\u2616\",\n                \"\\u2191\",\n                \"\\u2193\",\n                \"\\u2192\",\n                \"\\u2190\",\n                \"\\u2126\",\n                \"\\u2194\",\n                \"\\u25b2\",\n                \"\\u25bc\",\n            ].forEach((ch, i) => {\n                this.draw(i, ch);\n            });\n            // [\n            // '\\u2302',\n            // '\\u2b09', '\\u272a', '\\u2718', '\\u2610', '\\u2611', '\\u25ef', '\\u25ce', '\\u2690',\n            // '\\u2691', '\\u2598', '\\u2596', '\\u259d', '\\u2597', '\\u2744', '\\u272d', '\\u2727',\n            // '\\u25e3', '\\u25e4', '\\u25e2', '\\u25e5', '\\u25a8', '\\u25a7', '\\u259a', '\\u265f',\n            // '\\u265c', '\\u265e', '\\u265d', '\\u265b', '\\u265a', '\\u301c', '\\u2694', '\\u2692',\n            // '\\u25b6', '\\u25bc', '\\u25c0', '\\u25b2', '\\u25a4', '\\u25a5', '\\u25a6', '\\u257a',\n            // '\\u257b', '\\u2578', '\\u2579', '\\u2581', '\\u2594', '\\u258f', '\\u2595', '\\u272d',\n            // '\\u2591', '\\u2592', '\\u2593', '\\u2503', '\\u252b', '\\u2561', '\\u2562', '\\u2556',\n            // '\\u2555', '\\u2563', '\\u2551', '\\u2557', '\\u255d', '\\u255c', '\\u255b', '\\u2513',\n            // '\\u2517', '\\u253b', '\\u2533', '\\u2523', '\\u2501', '\\u254b', '\\u255e', '\\u255f',\n            // '\\u255a', '\\u2554', '\\u2569', '\\u2566', '\\u2560', '\\u2550', '\\u256c', '\\u2567',\n            // '\\u2568', '\\u2564', '\\u2565', '\\u2559', '\\u2558', '\\u2552', '\\u2553', '\\u256b',\n            // '\\u256a', '\\u251b', '\\u250f', '\\u2588', '\\u2585', '\\u258c', '\\u2590', '\\u2580',\n            // '\\u03b1', '\\u03b2', '\\u0393', '\\u03c0', '\\u03a3', '\\u03c3', '\\u03bc', '\\u03c4',\n            // '\\u03a6', '\\u03b8', '\\u03a9', '\\u03b4', '\\u221e', '\\u03b8', '\\u03b5', '\\u03b7',\n            // '\\u039e', '\\u00b1', '\\u2265', '\\u2264', '\\u2234', '\\u2237', '\\u00f7', '\\u2248',\n            // '\\u22c4', '\\u22c5', '\\u2217', '\\u27b5', '\\u2620', '\\u2625', '\\u25fc', '\\u25fb'\n            // ].forEach( (ch, i) => {\n            //   this.draw(i + 127, ch);\n            // });\n            [\n                \"\\u2302\",\n                \"\\u00C7\",\n                \"\\u00FC\",\n                \"\\u00E9\",\n                \"\\u00E2\",\n                \"\\u00E4\",\n                \"\\u00E0\",\n                \"\\u00E5\",\n                \"\\u00E7\",\n                \"\\u00EA\",\n                \"\\u00EB\",\n                \"\\u00E8\",\n                \"\\u00EF\",\n                \"\\u00EE\",\n                \"\\u00EC\",\n                \"\\u00C4\",\n                \"\\u00C5\",\n                \"\\u00C9\",\n                \"\\u00E6\",\n                \"\\u00C6\",\n                \"\\u00F4\",\n                \"\\u00F6\",\n                \"\\u00F2\",\n                \"\\u00FB\",\n                \"\\u00F9\",\n                \"\\u00FF\",\n                \"\\u00D6\",\n                \"\\u00DC\",\n                \"\\u00A2\",\n                \"\\u00A3\",\n                \"\\u00A5\",\n                \"\\u20A7\",\n                \"\\u0192\",\n                \"\\u00E1\",\n                \"\\u00ED\",\n                \"\\u00F3\",\n                \"\\u00FA\",\n                \"\\u00F1\",\n                \"\\u00D1\",\n                \"\\u00AA\",\n                \"\\u00BA\",\n                \"\\u00BF\",\n                \"\\u2310\",\n                \"\\u00AC\",\n                \"\\u00BD\",\n                \"\\u00BC\",\n                \"\\u00A1\",\n                \"\\u00AB\",\n                \"\\u00BB\",\n                \"\\u2591\",\n                \"\\u2592\",\n                \"\\u2593\",\n                \"\\u2502\",\n                \"\\u2524\",\n                \"\\u2561\",\n                \"\\u2562\",\n                \"\\u2556\",\n                \"\\u2555\",\n                \"\\u2563\",\n                \"\\u2551\",\n                \"\\u2557\",\n                \"\\u255D\",\n                \"\\u255C\",\n                \"\\u255B\",\n                \"\\u2510\",\n                \"\\u2514\",\n                \"\\u2534\",\n                \"\\u252C\",\n                \"\\u251C\",\n                \"\\u2500\",\n                \"\\u253C\",\n                \"\\u255E\",\n                \"\\u255F\",\n                \"\\u255A\",\n                \"\\u2554\",\n                \"\\u2569\",\n                \"\\u2566\",\n                \"\\u2560\",\n                \"\\u2550\",\n                \"\\u256C\",\n                \"\\u2567\",\n                \"\\u2568\",\n                \"\\u2564\",\n                \"\\u2565\",\n                \"\\u2559\",\n                \"\\u2558\",\n                \"\\u2552\",\n                \"\\u2553\",\n                \"\\u256B\",\n                \"\\u256A\",\n                \"\\u2518\",\n                \"\\u250C\",\n                \"\\u2588\",\n                \"\\u2584\",\n                \"\\u258C\",\n                \"\\u2590\",\n                \"\\u2580\",\n                \"\\u03B1\",\n                \"\\u00DF\",\n                \"\\u0393\",\n                \"\\u03C0\",\n                \"\\u03A3\",\n                \"\\u03C3\",\n                \"\\u00B5\",\n                \"\\u03C4\",\n                \"\\u03A6\",\n                \"\\u0398\",\n                \"\\u03A9\",\n                \"\\u03B4\",\n                \"\\u221E\",\n                \"\\u03C6\",\n                \"\\u03B5\",\n                \"\\u2229\",\n                \"\\u2261\",\n                \"\\u00B1\",\n                \"\\u2265\",\n                \"\\u2264\",\n                \"\\u2320\",\n                \"\\u2321\",\n                \"\\u00F7\",\n                \"\\u2248\",\n                \"\\u00B0\",\n                \"\\u2219\",\n                \"\\u00B7\",\n                \"\\u221A\",\n                \"\\u207F\",\n                \"\\u00B2\",\n                \"\\u25A0\",\n                \"\\u00A0\",\n            ].forEach((ch, i) => {\n                this.draw(i + 127, ch);\n            });\n        }\n    }\n}\n//# sourceMappingURL=glyphs.js.map","import * as shaders from \"./shaders\";\nimport { Glyphs } from \"./glyphs\";\nconst VERTICES_PER_TILE = 6;\nexport class NotSupportedError extends Error {\n    constructor(...params) {\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\n        super(...params);\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        // @ts-ignore\n        if (Error.captureStackTrace) {\n            // @ts-ignore\n            Error.captureStackTrace(this, NotSupportedError);\n        }\n        this.name = \"NotSupportedError\";\n    }\n}\nexport class BaseCanvas {\n    constructor(options) {\n        this._renderRequested = false;\n        this._autoRender = true;\n        this._width = 50;\n        this._height = 25;\n        if (!options.glyphs)\n            throw new Error(\"You must supply glyphs for the canvas.\");\n        this._node = this._createNode();\n        this._createContext();\n        this._configure(options);\n    }\n    get node() {\n        return this._node;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get tileWidth() {\n        return this._glyphs.tileWidth;\n    }\n    get tileHeight() {\n        return this._glyphs.tileHeight;\n    }\n    get pxWidth() {\n        return this.node.clientWidth;\n    }\n    get pxHeight() {\n        return this.node.clientHeight;\n    }\n    get glyphs() {\n        return this._glyphs;\n    }\n    set glyphs(glyphs) {\n        this._setGlyphs(glyphs);\n    }\n    toGlyph(ch) {\n        return this._glyphs.forChar(ch);\n    }\n    _createNode() {\n        return document.createElement(\"canvas\");\n    }\n    _configure(options) {\n        this._width = options.width || this._width;\n        this._height = options.height || this._height;\n        this._autoRender = options.render !== false;\n        this._setGlyphs(options.glyphs);\n        if (options.div) {\n            let el;\n            if (typeof options.div === \"string\") {\n                el = document.getElementById(options.div);\n                if (!el) {\n                    console.warn(\"Failed to find parent element by ID: \" + options.div);\n                }\n            }\n            else {\n                el = options.div;\n            }\n            if (el && el.appendChild) {\n                el.appendChild(this.node);\n            }\n        }\n    }\n    _setGlyphs(glyphs) {\n        if (glyphs === this._glyphs)\n            return false;\n        this._glyphs = glyphs;\n        this.resize(this._width, this._height);\n        return true;\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        const node = this.node;\n        node.width = this._width * this.tileWidth;\n        node.height = this._height * this.tileHeight;\n    }\n    draw(x, y, glyph, fg, bg) {\n        glyph = glyph & 0xff;\n        bg = bg & 0xfff;\n        fg = fg & 0xfff;\n        const style = glyph * (1 << 24) + bg * (1 << 12) + fg;\n        this._set(x, y, style);\n    }\n    _requestRender() {\n        if (this._renderRequested)\n            return;\n        this._renderRequested = true;\n        if (!this._autoRender)\n            return;\n        requestAnimationFrame(() => this.render());\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        const current = this._data[index];\n        if (current !== style) {\n            this._data[index] = style;\n            this._requestRender();\n            return true;\n        }\n        return false;\n    }\n    copy(data) {\n        this._data.set(data);\n        this._requestRender();\n    }\n    copyTo(data) {\n        data.set(this._data);\n    }\n    hasXY(x, y) {\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\n    }\n    toX(x) {\n        return Math.floor((this.width * x) / this.node.clientWidth);\n    }\n    toY(y) {\n        return Math.floor((this.height * y) / this.node.clientHeight);\n    }\n}\n// Based on: https://github.com/ondras/fastiles/blob/master/ts/scene.ts (v2.1.0)\nexport class Canvas extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        let gl = this.node.getContext(\"webgl2\");\n        if (!gl) {\n            throw new NotSupportedError(\"WebGL 2 not supported\");\n        }\n        this._gl = gl;\n        this._buffers = {};\n        this._attribs = {};\n        this._uniforms = {};\n        const p = createProgram(gl, shaders.VS, shaders.FS);\n        gl.useProgram(p);\n        const attributeCount = gl.getProgramParameter(p, gl.ACTIVE_ATTRIBUTES);\n        for (let i = 0; i < attributeCount; i++) {\n            gl.enableVertexAttribArray(i);\n            let info = gl.getActiveAttrib(p, i);\n            this._attribs[info.name] = i;\n        }\n        const uniformCount = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < uniformCount; i++) {\n            let info = gl.getActiveUniform(p, i);\n            this._uniforms[info.name] = gl.getUniformLocation(p, info.name);\n        }\n        gl.uniform1i(this._uniforms[\"font\"], 0);\n        this._texture = createTexture(gl);\n    }\n    _createGeometry() {\n        const gl = this._gl;\n        this._buffers.position && gl.deleteBuffer(this._buffers.position);\n        this._buffers.uv && gl.deleteBuffer(this._buffers.uv);\n        let buffers = createGeometry(gl, this._attribs, this.width, this.height);\n        Object.assign(this._buffers, buffers);\n    }\n    _createData() {\n        const gl = this._gl;\n        const attribs = this._attribs;\n        const tileCount = this.width * this.height;\n        this._buffers.style && gl.deleteBuffer(this._buffers.style);\n        this._data = new Uint32Array(tileCount * VERTICES_PER_TILE);\n        const style = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, style);\n        gl.vertexAttribIPointer(attribs[\"style\"], 1, gl.UNSIGNED_INT, 0, 0);\n        Object.assign(this._buffers, { style });\n    }\n    _setGlyphs(glyphs) {\n        if (!super._setGlyphs(glyphs))\n            return false;\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.uniform2uiv(uniforms[\"tileSize\"], [this.tileWidth, this.tileHeight]);\n        this._uploadGlyphs();\n        return true;\n    }\n    _uploadGlyphs() {\n        if (!this._glyphs.needsUpdate)\n            return;\n        const gl = this._gl;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._glyphs.node);\n        this._requestRender();\n        this._glyphs.needsUpdate = false;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        const gl = this._gl;\n        const uniforms = this._uniforms;\n        gl.viewport(0, 0, this.node.width, this.node.height);\n        gl.uniform2ui(uniforms[\"viewportSize\"], this.node.width, this.node.height);\n        this._createGeometry();\n        this._createData();\n    }\n    _set(x, y, style) {\n        let index = y * this.width + x;\n        index *= VERTICES_PER_TILE;\n        const current = this._data[index + 2];\n        if (current !== style) {\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n            this._requestRender();\n            return true;\n        }\n        return false;\n    }\n    copy(data) {\n        data.forEach((style, i) => {\n            const index = i * VERTICES_PER_TILE;\n            this._data[index + 2] = style;\n            this._data[index + 5] = style;\n        });\n        this._requestRender();\n    }\n    copyTo(data) {\n        const n = this.width * this.height;\n        for (let i = 0; i < n; ++i) {\n            const index = i * VERTICES_PER_TILE;\n            data[i] = this._data[index + 2];\n        }\n    }\n    render() {\n        const gl = this._gl;\n        if (this._glyphs.needsUpdate) {\n            // auto keep glyphs up to date\n            this._uploadGlyphs();\n        }\n        else if (!this._renderRequested) {\n            return;\n        }\n        this._renderRequested = false;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._buffers.style);\n        gl.bufferData(gl.ARRAY_BUFFER, this._data, gl.DYNAMIC_DRAW);\n        gl.drawArrays(gl.TRIANGLES, 0, this._width * this._height * VERTICES_PER_TILE);\n    }\n}\nexport class Canvas2D extends BaseCanvas {\n    constructor(options) {\n        super(options);\n    }\n    _createContext() {\n        const ctx = this.node.getContext(\"2d\");\n        if (!ctx) {\n            throw new NotSupportedError(\"2d context not supported!\");\n        }\n        this._ctx = ctx;\n    }\n    _set(x, y, style) {\n        const result = super._set(x, y, style);\n        if (result) {\n            this._changed[y * this.width + x] = 1;\n        }\n        return result;\n    }\n    resize(width, height) {\n        super.resize(width, height);\n        this._data = new Uint32Array(width * height);\n        this._changed = new Int8Array(width * height);\n    }\n    copy(data) {\n        for (let i = 0; i < this._data.length; ++i) {\n            if (this._data[i] !== data[i]) {\n                this._data[i] = data[i];\n                this._changed[i] = 1;\n            }\n        }\n        this._requestRender();\n    }\n    render() {\n        this._renderRequested = false;\n        for (let i = 0; i < this._changed.length; ++i) {\n            if (this._changed[i])\n                this._renderCell(i);\n            this._changed[i] = 0;\n        }\n    }\n    _renderCell(index) {\n        const x = index % this.width;\n        const y = Math.floor(index / this.width);\n        const style = this._data[index];\n        const glyph = (style / (1 << 24)) >> 0;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        const px = x * this.tileWidth;\n        const py = y * this.tileHeight;\n        const gx = (glyph % 16) * this.tileWidth;\n        const gy = Math.floor(glyph / 16) * this.tileHeight;\n        const d = this.glyphs.ctx.getImageData(gx, gy, this.tileWidth, this.tileHeight);\n        for (let di = 0; di < d.width * d.height; ++di) {\n            const pct = d.data[di * 4] / 255;\n            const inv = 1.0 - pct;\n            d.data[di * 4 + 0] =\n                pct * (((fg & 0xf00) >> 8) * 17) + inv * (((bg & 0xf00) >> 8) * 17);\n            d.data[di * 4 + 1] =\n                pct * (((fg & 0xf0) >> 4) * 17) + inv * (((bg & 0xf0) >> 4) * 17);\n            d.data[di * 4 + 2] = pct * ((fg & 0xf) * 17) + inv * ((bg & 0xf) * 17);\n            d.data[di * 4 + 3] = 255; // not transparent anymore\n        }\n        this._ctx.putImageData(d, px, py);\n    }\n}\nexport function withImage(image) {\n    let opts = {};\n    if (typeof image === \"string\") {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else if (image instanceof HTMLImageElement) {\n        opts.glyphs = Glyphs.fromImage(image);\n    }\n    else {\n        if (!image.image)\n            throw new Error(\"You must supply the image.\");\n        Object.assign(opts, image);\n        opts.glyphs = Glyphs.fromImage(image.image);\n    }\n    let canvas;\n    try {\n        canvas = new Canvas(opts);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(opts);\n    }\n    return canvas;\n}\nexport function withFont(src) {\n    if (typeof src === \"string\") {\n        src = { font: src };\n    }\n    src.glyphs = Glyphs.fromFont(src);\n    let canvas;\n    try {\n        canvas = new Canvas(src);\n    }\n    catch (e) {\n        if (!(e instanceof NotSupportedError))\n            throw e;\n    }\n    if (!canvas) {\n        canvas = new Canvas2D(src);\n    }\n    return canvas;\n}\n// Copy of: https://github.com/ondras/fastiles/blob/master/ts/utils.ts (v2.1.0)\nconst QUAD = [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1];\nfunction createProgram(gl, ...sources) {\n    const p = gl.createProgram();\n    [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER].forEach((type, index) => {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sources[index]);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(shader));\n        }\n        gl.attachShader(p, shader);\n    });\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p));\n    }\n    return p;\n}\nfunction createTexture(gl) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    return t;\n}\nfunction createGeometry(gl, attribs, width, height) {\n    let tileCount = width * height;\n    let positionData = new Uint16Array(tileCount * QUAD.length);\n    let uvData = new Uint8Array(tileCount * QUAD.length);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            QUAD.forEach((value) => {\n                positionData[i] = (i % 2 ? y : x) + value;\n                uvData[i] = value;\n                i++;\n            });\n        }\n    }\n    const position = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, position);\n    gl.vertexAttribIPointer(attribs[\"position\"], 2, gl.UNSIGNED_SHORT, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, positionData, gl.STATIC_DRAW);\n    const uv = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uv);\n    gl.vertexAttribIPointer(attribs[\"uv\"], 2, gl.UNSIGNED_BYTE, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, uvData, gl.STATIC_DRAW);\n    return { position, uv };\n}\n//# sourceMappingURL=canvas.js.map","import { cosmetic } from \"./random\";\nimport { make as Make } from \"./gw\";\nfunction toColorInt(r, g, b, base256) {\n    if (base256) {\n        r = Math.max(0, Math.min(255, Math.round(r * 2.550001)));\n        g = Math.max(0, Math.min(255, Math.round(g * 2.550001)));\n        b = Math.max(0, Math.min(255, Math.round(b * 2.550001)));\n        return (r << 16) + (g << 8) + b;\n    }\n    r = Math.max(0, Math.min(15, Math.round((r / 100) * 15)));\n    g = Math.max(0, Math.min(15, Math.round((g / 100) * 15)));\n    b = Math.max(0, Math.min(15, Math.round((b / 100) * 15)));\n    return (r << 8) + (g << 4) + b;\n}\nexport const colors = {};\nexport class Color extends Int16Array {\n    constructor(r = -1, g = 0, b = 0, rand = 0, redRand = 0, greenRand = 0, blueRand = 0, dances = false) {\n        super(7);\n        this.dances = false;\n        this.set([r, g, b, rand, redRand, greenRand, blueRand]);\n        this.dances = dances;\n    }\n    get r() {\n        return Math.round(this[0] * 2.550001);\n    }\n    get _r() {\n        return this[0];\n    }\n    set _r(v) {\n        this[0] = v;\n    }\n    get g() {\n        return Math.round(this[1] * 2.550001);\n    }\n    get _g() {\n        return this[1];\n    }\n    set _g(v) {\n        this[1] = v;\n    }\n    get b() {\n        return Math.round(this[2] * 2.550001);\n    }\n    get _b() {\n        return this[2];\n    }\n    set _b(v) {\n        this[2] = v;\n    }\n    get _rand() {\n        return this[3];\n    }\n    get _redRand() {\n        return this[4];\n    }\n    get _greenRand() {\n        return this[5];\n    }\n    get _blueRand() {\n        return this[6];\n    }\n    // luminosity (0-100)\n    get l() {\n        return Math.round(0.5 *\n            (Math.min(this._r, this._g, this._b) +\n                Math.max(this._r, this._g, this._b)));\n    }\n    // saturation (0-100)\n    get s() {\n        if (this.l >= 100)\n            return 0;\n        return Math.round(((Math.max(this._r, this._g, this._b) -\n            Math.min(this._r, this._g, this._b)) *\n            (100 - Math.abs(this.l * 2 - 100))) /\n            100);\n    }\n    // hue (0-360)\n    get h() {\n        let H = 0;\n        let R = this.r;\n        let G = this.g;\n        let B = this.b;\n        if (R >= G && G >= B) {\n            H = 60 * ((G - B) / (R - B));\n        }\n        else if (G > R && R >= B) {\n            H = 60 * (2 - (R - B) / (G - B));\n        }\n        else if (G >= B && B > R) {\n            H = 60 * (2 + (B - R) / (G - R));\n        }\n        else if (B > G && G > R) {\n            H = 60 * (4 - (G - R) / (B - R));\n        }\n        else if (B > R && R >= G) {\n            H = 60 * (4 + (R - G) / (B - G));\n        }\n        else {\n            H = 60 * (6 - (B - G) / (R - G));\n        }\n        return Math.round(H);\n    }\n    isNull() {\n        return this._r < 0;\n    }\n    equals(other) {\n        if (typeof other === \"string\") {\n            if (!other.startsWith(\"#\"))\n                return this.name == other;\n            return this.css(other.length > 4) == other;\n        }\n        else if (typeof other === \"number\") {\n            return this.toInt() == other || this.toInt(true) == other;\n        }\n        const O = from(other);\n        if (this.isNull())\n            return O.isNull();\n        return this.every((v, i) => {\n            return v == O[i];\n        });\n    }\n    copy(other) {\n        if (Array.isArray(other)) {\n            if (other.length === 8) {\n                this.dances = other[7];\n            }\n        }\n        else {\n            other = from(other);\n            this.dances = other.dances;\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = other[i] || 0;\n        }\n        if (other instanceof Color) {\n            this.name = other.name;\n        }\n        else {\n            this._changed();\n        }\n        return this;\n    }\n    _changed() {\n        this.name = undefined;\n        return this;\n    }\n    clone() {\n        // @ts-ignore\n        const other = new this.constructor();\n        other.copy(this);\n        return other;\n    }\n    assign(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = arguments[i] || 0;\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    assignRGB(_r = -1, _g = 0, _b = 0, _rand = 0, _redRand = 0, _greenRand = 0, _blueRand = 0, dances) {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((arguments[i] || 0) / 2.55);\n        }\n        if (dances !== undefined) {\n            this.dances = dances;\n        }\n        return this._changed();\n    }\n    nullify() {\n        this[0] = -1;\n        this.dances = false;\n        return this._changed();\n    }\n    blackOut() {\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = 0;\n        }\n        this.dances = false;\n        return this._changed();\n    }\n    toInt(base256 = false) {\n        if (this.isNull())\n            return -1;\n        return toColorInt(this._r, this._g, this._b, base256);\n    }\n    clamp() {\n        if (this.isNull())\n            return this;\n        this._r = Math.min(100, Math.max(0, this._r));\n        this._g = Math.min(100, Math.max(0, this._g));\n        this._b = Math.min(100, Math.max(0, this._b));\n        return this._changed();\n    }\n    mix(other, percent) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        percent = Math.min(100, Math.max(0, percent));\n        const keepPct = 100 - percent;\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * keepPct + O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    lighten(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 100 * percent) / 100);\n        }\n        return this._changed();\n    }\n    // Only adjusts r,g,b\n    darken(percent) {\n        if (this.isNull())\n            return this;\n        percent = Math.min(100, Math.max(0, percent));\n        if (percent <= 0)\n            return;\n        const keepPct = 100 - percent;\n        for (let i = 0; i < 3; ++i) {\n            this[i] = Math.round((this[i] * keepPct + 0 * percent) / 100);\n        }\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        if (this.isNull())\n            return this;\n        if (this.dances && !clearDancing)\n            return;\n        this.dances = false;\n        const d = this;\n        if (d[3] + d[4] + d[5] + d[6]) {\n            const rand = cosmetic.number(this._rand);\n            const redRand = cosmetic.number(this._redRand);\n            const greenRand = cosmetic.number(this._greenRand);\n            const blueRand = cosmetic.number(this._blueRand);\n            this._r += rand + redRand;\n            this._g += rand + greenRand;\n            this._b += rand + blueRand;\n            for (let i = 3; i < this.length; ++i) {\n                this[i] = 0;\n            }\n            return this._changed();\n        }\n        return this;\n    }\n    // Adds a color to this one\n    add(other, percent = 100) {\n        const O = from(other);\n        if (O.isNull())\n            return this;\n        if (this.isNull()) {\n            this.blackOut();\n        }\n        for (let i = 0; i < this.length; ++i) {\n            this[i] += Math.round((O[i] * percent) / 100);\n        }\n        this.dances = this.dances || O.dances;\n        return this._changed();\n    }\n    scale(percent) {\n        if (this.isNull() || percent == 100)\n            return this;\n        percent = Math.max(0, percent);\n        for (let i = 0; i < this.length; ++i) {\n            this[i] = Math.round((this[i] * percent) / 100);\n        }\n        return this._changed();\n    }\n    multiply(other) {\n        if (this.isNull())\n            return this;\n        let data = other;\n        if (!Array.isArray(other)) {\n            if (other.isNull())\n                return this;\n            data = other;\n        }\n        const len = Math.max(3, Math.min(this.length, data.length));\n        for (let i = 0; i < len; ++i) {\n            this[i] = Math.round((this[i] * (data[i] || 0)) / 100);\n        }\n        return this._changed();\n    }\n    // scales rgb down to a max of 100\n    normalize() {\n        if (this.isNull())\n            return this;\n        const max = Math.max(this._r, this._g, this._b);\n        if (max <= 100)\n            return this;\n        this._r = Math.round((100 * this._r) / max);\n        this._g = Math.round((100 * this._g) / max);\n        this._b = Math.round((100 * this._b) / max);\n        return this._changed();\n    }\n    /**\n     * Returns the css code for the current RGB values of the color.\n     * @param base256 - Show in base 256 (#abcdef) instead of base 16 (#abc)\n     */\n    css(base256 = false) {\n        const v = this.toInt(base256);\n        return \"#\" + v.toString(16).padStart(base256 ? 6 : 3, \"0\");\n    }\n    toString(base256 = false) {\n        if (this.name)\n            return this.name;\n        if (this.isNull())\n            return \"null color\";\n        return this.css(base256);\n    }\n}\nexport function fromArray(vals, base256 = false) {\n    while (vals.length < 3)\n        vals.push(0);\n    if (base256) {\n        for (let i = 0; i < 7; ++i) {\n            vals[i] = Math.round(((vals[i] || 0) * 100) / 255);\n        }\n    }\n    return new Color(...vals);\n}\nexport function fromCss(css) {\n    if (!css.startsWith(\"#\")) {\n        throw new Error('Color CSS strings must be of form \"#abc\" or \"#abcdef\" - received: [' +\n            css +\n            \"]\");\n    }\n    const c = Number.parseInt(css.substring(1), 16);\n    let r, g, b;\n    if (css.length == 4) {\n        r = Math.round(((c >> 8) / 15) * 100);\n        g = Math.round((((c & 0xf0) >> 4) / 15) * 100);\n        b = Math.round(((c & 0xf) / 15) * 100);\n    }\n    else {\n        r = Math.round(((c >> 16) / 255) * 100);\n        g = Math.round((((c & 0xff00) >> 8) / 255) * 100);\n        b = Math.round(((c & 0xff) / 255) * 100);\n    }\n    return new Color(r, g, b);\n}\nexport function fromName(name) {\n    const c = colors[name];\n    if (!c) {\n        throw new Error(\"Unknown color name: \" + name);\n    }\n    return c;\n}\nexport function fromNumber(val, base256 = false) {\n    const c = new Color();\n    for (let i = 0; i < c.length; ++i) {\n        c[i] = 0;\n    }\n    if (val < 0) {\n        c.assign(-1);\n    }\n    else if (base256 || val > 0xfff) {\n        c.assign(Math.round((((val & 0xff0000) >> 16) * 100) / 255), Math.round((((val & 0xff00) >> 8) * 100) / 255), Math.round(((val & 0xff) * 100) / 255));\n    }\n    else {\n        c.assign(Math.round((((val & 0xf00) >> 8) * 100) / 15), Math.round((((val & 0xf0) >> 4) * 100) / 15), Math.round(((val & 0xf) * 100) / 15));\n    }\n    return c;\n}\nexport function make(...args) {\n    let arg = args[0];\n    let base256 = args[1];\n    if (args.length == 0)\n        return new Color();\n    if (args.length > 2) {\n        arg = args;\n        base256 = false; // TODO - Change this!!!\n    }\n    if (arg === undefined || arg === null)\n        return new Color(-1);\n    if (arg instanceof Color) {\n        return arg.clone();\n    }\n    if (typeof arg === \"string\") {\n        if (arg.startsWith(\"#\")) {\n            return fromCss(arg);\n        }\n        return fromName(arg).clone();\n    }\n    else if (Array.isArray(arg)) {\n        return fromArray(arg, base256);\n    }\n    else if (typeof arg === \"number\") {\n        return fromNumber(arg, base256);\n    }\n    throw new Error(\"Failed to make color - unknown argument: \" + JSON.stringify(arg));\n}\nMake.color = make;\nexport function from(...args) {\n    const arg = args[0];\n    if (arg instanceof Color)\n        return arg;\n    if (arg === undefined)\n        return new Color(-1);\n    if (typeof arg === \"string\") {\n        if (!arg.startsWith(\"#\")) {\n            return fromName(arg);\n        }\n    }\n    return make(arg, args[1]);\n}\n// adjusts the luminosity of 2 colors to ensure there is enough separation between them\nexport function separate(a, b) {\n    if (a.isNull() || b.isNull())\n        return;\n    const A = a.clone().clamp();\n    const B = b.clone().clamp();\n    // console.log('separate');\n    // console.log('- a=%s, h=%d, s=%d, l=%d', A.toString(), A.h, A.s, A.l);\n    // console.log('- b=%s, h=%d, s=%d, l=%d', B.toString(), B.h, B.s, B.l);\n    let hDiff = Math.abs(A.h - B.h);\n    if (hDiff > 180) {\n        hDiff = 360 - hDiff;\n    }\n    if (hDiff > 45)\n        return; // colors are far enough apart in hue to be distinct\n    const dist = 40;\n    if (Math.abs(A.l - B.l) >= dist)\n        return;\n    // Get them sorted by saturation ( we will darken the more saturated color and lighten the other)\n    const [lo, hi] = [A, B].sort((a, b) => a.s - b.s);\n    // console.log('- lo=%s, hi=%s', lo.toString(), hi.toString());\n    while (hi.l - lo.l < dist) {\n        hi.mix(WHITE, 5);\n        lo.mix(BLACK, 5);\n    }\n    a.copy(A);\n    b.copy(B);\n    // console.log('=>', a.toString(), b.toString());\n}\nexport function swap(a, b) {\n    const temp = a.clone();\n    a.copy(b);\n    b.copy(temp);\n}\nexport function relativeLuminance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.2126 +\n            (a.g - b.g) * (a.g - b.g) * 0.7152 +\n            (a.b - b.b) * (a.b - b.b) * 0.0722)) /\n        65025);\n}\nexport function distance(a, b) {\n    return Math.round((100 *\n        ((a.r - b.r) * (a.r - b.r) * 0.3333 +\n            (a.g - b.g) * (a.g - b.g) * 0.3333 +\n            (a.b - b.b) * (a.b - b.b) * 0.3333)) /\n        65025);\n}\nexport function install(name, ...args) {\n    let info = args;\n    if (args.length == 1) {\n        info = args[0];\n    }\n    const c = info instanceof Color ? info : make(info);\n    colors[name] = c;\n    c.name = name;\n    return c;\n}\nexport function installSpread(name, ...args) {\n    let c;\n    if (args.length == 1) {\n        c = install(name, args[0]);\n    }\n    else {\n        c = install(name, ...args);\n    }\n    install(\"light_\" + name, c.clone().lighten(25));\n    install(\"lighter_\" + name, c.clone().lighten(50));\n    install(\"lightest_\" + name, c.clone().lighten(75));\n    install(\"dark_\" + name, c.clone().darken(25));\n    install(\"darker_\" + name, c.clone().darken(50));\n    install(\"darkest_\" + name, c.clone().darken(75));\n    return c;\n}\nconst BLACK = install(\"black\", 0x000);\nconst WHITE = install(\"white\", 0xfff);\ninstallSpread(\"teal\", [30, 100, 100]);\ninstallSpread(\"brown\", [60, 40, 0]);\ninstallSpread(\"tan\", [80, 70, 55]); // 80, 67,\t\t15);\ninstallSpread(\"pink\", [100, 60, 66]);\ninstallSpread(\"gray\", [50, 50, 50]);\ninstallSpread(\"yellow\", [100, 100, 0]);\ninstallSpread(\"purple\", [100, 0, 100]);\ninstallSpread(\"green\", [0, 100, 0]);\ninstallSpread(\"orange\", [100, 50, 0]);\ninstallSpread(\"blue\", [0, 0, 100]);\ninstallSpread(\"red\", [100, 0, 0]);\ninstallSpread(\"amber\", [100, 75, 0]);\ninstallSpread(\"flame\", [100, 25, 0]);\ninstallSpread(\"fuchsia\", [100, 0, 100]);\ninstallSpread(\"magenta\", [100, 0, 75]);\ninstallSpread(\"crimson\", [100, 0, 25]);\ninstallSpread(\"lime\", [75, 100, 0]);\ninstallSpread(\"chartreuse\", [50, 100, 0]);\ninstallSpread(\"sepia\", [50, 40, 25]);\ninstallSpread(\"violet\", [50, 0, 100]);\ninstallSpread(\"han\", [25, 0, 100]);\ninstallSpread(\"cyan\", [0, 100, 100]);\ninstallSpread(\"turquoise\", [0, 100, 75]);\ninstallSpread(\"sea\", [0, 100, 50]);\ninstallSpread(\"sky\", [0, 75, 100]);\ninstallSpread(\"azure\", [0, 50, 100]);\ninstallSpread(\"silver\", [75, 75, 75]);\ninstallSpread(\"gold\", [100, 85, 0]);\n//# sourceMappingURL=color.js.map","import * as Color from \"../color\";\nimport { make } from \"../gw\";\nexport class Sprite {\n    constructor(ch, fg, bg, opacity) {\n        if (!ch && ch !== 0)\n            ch = -1;\n        if (typeof fg !== \"number\")\n            fg = Color.from(fg);\n        if (typeof bg !== \"number\")\n            bg = Color.from(bg);\n        this.ch = ch;\n        this.fg = fg;\n        this.bg = bg;\n        this.opacity = opacity;\n    }\n}\nexport const sprites = {};\nexport function makeSprite(...args) {\n    let ch = null, fg = -1, bg = -1, opacity;\n    if (args.length == 0) {\n        return new Sprite(null, -1, -1);\n    }\n    else if (args.length == 1 && Array.isArray(args[0])) {\n        args = args[0];\n    }\n    if (args.length > 3) {\n        opacity = args[3];\n        args.pop();\n    }\n    else if (args.length == 2 &&\n        typeof args[1] == \"number\" &&\n        args[0].length > 1) {\n        opacity = args.pop();\n    }\n    if (args.length > 1) {\n        ch = args[0] || -1;\n        fg = args[1];\n        bg = args[2];\n    }\n    else {\n        if (typeof args[0] === \"string\" || typeof args[0] === \"number\") {\n            bg = args[0];\n        }\n        else if (args[0] instanceof Color.Color) {\n            bg = args[0];\n        }\n        else {\n            const sprite = args[0];\n            ch = sprite.ch || -1;\n            fg = sprite.fg || -1;\n            bg = sprite.bg || -1;\n            opacity = sprite.opacity;\n        }\n    }\n    if (typeof fg === \"string\")\n        fg = Color.from(fg);\n    else if (Array.isArray(fg))\n        fg = Color.make(fg);\n    else if (fg === undefined || fg === null)\n        fg = -1;\n    if (typeof bg === \"string\")\n        bg = Color.from(bg);\n    else if (Array.isArray(bg))\n        bg = Color.make(bg);\n    else if (bg === undefined || bg === null)\n        bg = -1;\n    return new Sprite(ch, fg, bg, opacity);\n}\nmake.sprite = makeSprite;\nexport function installSprite(name, ...args) {\n    let sprite;\n    // @ts-ignore\n    sprite = this.makeSprite(...args);\n    sprite.name = name;\n    sprites[name] = sprite;\n    return sprite;\n}\n//# sourceMappingURL=sprite.js.map","import * as Color from \"../color\";\nimport { make } from \"../gw\";\nexport class Mixer {\n    constructor() {\n        this.ch = -1;\n        this.fg = new Color.Color();\n        this.bg = new Color.Color();\n    }\n    _changed() {\n        return this;\n    }\n    copy(other) {\n        this.ch = other.ch;\n        this.fg.copy(other.fg);\n        this.bg.copy(other.bg);\n        return this._changed();\n    }\n    clone() {\n        const other = new Mixer();\n        other.copy(this);\n        return other;\n    }\n    equals(other) {\n        return (this.ch == other.ch &&\n            this.fg.equals(other.fg) &&\n            this.bg.equals(other.bg));\n    }\n    nullify() {\n        this.ch = -1;\n        this.fg.nullify();\n        this.bg.nullify();\n        return this._changed();\n    }\n    blackOut() {\n        this.ch = 0;\n        this.fg.blackOut();\n        this.bg.blackOut();\n        return this._changed();\n    }\n    draw(ch = -1, fg = -1, bg = -1) {\n        if (ch && ch !== -1) {\n            this.ch = ch;\n        }\n        if (fg !== -1 && fg !== null) {\n            fg = Color.from(fg);\n            this.fg.copy(fg);\n        }\n        if (bg !== -1 && bg !== null) {\n            bg = Color.from(bg);\n            this.bg.copy(bg);\n        }\n        return this._changed();\n    }\n    drawSprite(info, opacity) {\n        if (opacity === undefined)\n            opacity = info.opacity;\n        if (opacity === undefined)\n            opacity = 100;\n        if (opacity <= 0)\n            return;\n        if (info.ch !== -1 && (info.ch || info.ch === 0))\n            this.ch = info.ch;\n        if (info.fg && info.fg !== -1)\n            this.fg.mix(info.fg, opacity);\n        if (info.bg && info.bg !== -1)\n            this.bg.mix(info.bg, opacity);\n        return this._changed();\n    }\n    invert() {\n        [this.bg, this.fg] = [this.fg, this.bg];\n        return this._changed();\n    }\n    multiply(color, fg = true, bg = true) {\n        color = Color.from(color);\n        if (fg) {\n            this.fg.multiply(color);\n        }\n        if (bg) {\n            this.bg.multiply(color);\n        }\n        return this._changed();\n    }\n    mix(color, fg = 50, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.mix(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.mix(color, bg);\n        }\n        return this._changed();\n    }\n    add(color, fg = 100, bg = fg) {\n        color = Color.from(color);\n        if (fg > 0) {\n            this.fg.add(color, fg);\n        }\n        if (bg > 0) {\n            this.bg.add(color, bg);\n        }\n        return this._changed();\n    }\n    separate() {\n        Color.separate(this.fg, this.bg);\n        return this._changed();\n    }\n    bake(clearDancing = false) {\n        this.fg.bake(clearDancing);\n        this.bg.bake(clearDancing);\n        this._changed();\n        return {\n            ch: this.ch,\n            fg: this.fg.toInt(),\n            bg: this.bg.toInt(),\n        };\n    }\n}\nmake.mixer = function () {\n    return new Mixer();\n};\n//# sourceMappingURL=mixer.js.map","export var options = {\n    colorStart: 'Ω',\n    colorEnd: '∆',\n    field: '§',\n    defaultFg: null,\n    defaultBg: null,\n};\n// const RE_RGB = /^[a-fA-F0-9]*$/;\n// \n// export function parseColor(color:string) {\n//   if (color.startsWith('#')) {\n//     color = color.substring(1);\n//   }\n//   else if (color.startsWith('0x')) {\n//     color = color.substring(2);\n//   }\n//   if (color.length == 3) {\n//     if (RE_RGB.test(color)) {\n//       return Number.parseInt(color, 16);\n//     }\n//   }\n//   if (color.length == 6) {\n//     if (RE_RGB.test(color)) {\n//       const v = Number.parseInt(color, 16);\n//       const r = Math.round( ((v & 0xFF0000) >> 16) / 17);\n//       const g = Math.round( ((v & 0xFF00) >> 8) / 17);\n//       const b = Math.round((v & 0xFF) / 17);\n//       return (r << 8) + (g << 4) + b;\n//     }\n//   }\n//   return 0xFFF;\n// }\nexport var helpers = {\n    eachColor: (() => { }),\n    default: ((name, _, value) => {\n        if (value !== undefined)\n            return `${value}.!!${name}!!`;\n        return `!!${name}!!`;\n    }),\n};\nexport function addHelper(name, fn) {\n    helpers[name] = fn;\n}\n//# sourceMappingURL=config.js.map","import * as Config from \"./config\";\nexport function compile(template) {\n    const F = Config.options.field;\n    const parts = template.split(F);\n    const sections = parts.map((part, i) => {\n        if (i % 2 == 0)\n            return textSegment(part);\n        if (part.length == 0)\n            return textSegment(F);\n        return makeVariable(part);\n    });\n    return function (args = {}) {\n        return sections.map((f) => f(args)).join(\"\");\n    };\n}\nexport function apply(template, args = {}) {\n    const fn = compile(template);\n    const result = fn(args);\n    return result;\n}\nexport function textSegment(value) {\n    return () => value;\n}\nexport function baseValue(name) {\n    return function (args) {\n        const h = Config.helpers[name];\n        if (h)\n            return h(name, args);\n        const v = args[name];\n        if (v !== undefined)\n            return v;\n        return Config.helpers.default(name, args);\n    };\n}\nexport function fieldValue(name, source) {\n    return function (args) {\n        const obj = source(args);\n        if (!obj)\n            return Config.helpers.default(name, args, obj);\n        const value = obj[name];\n        if (value === undefined)\n            return Config.helpers.default(name, args, obj);\n        return value;\n    };\n}\nexport function helperValue(name, source) {\n    const helper = Config.helpers[name] || Config.helpers.default;\n    return function (args) {\n        const base = source(args);\n        return helper(name, args, base);\n    };\n}\nexport function stringFormat(format, source) {\n    const data = /%(-?\\d*)s/.exec(format) || [];\n    const length = Number.parseInt(data[1] || \"0\");\n    return function (args) {\n        let text = \"\" + source(args);\n        if (length < 0) {\n            text = text.padEnd(-length);\n        }\n        else if (length) {\n            text = text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function intFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)d/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    return function (args) {\n        const value = Number.parseInt(source(args) || 0);\n        let text = \"\" + value;\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function floatFormat(format, source) {\n    const data = /%([\\+-]*)(\\d*)(\\.(\\d+))?f/.exec(format) || [\"\", \"\", \"0\"];\n    let length = Number.parseInt(data[2] || \"0\");\n    const wantSign = data[1].includes(\"+\");\n    const left = data[1].includes(\"-\");\n    const fixed = Number.parseInt(data[4]) || 0;\n    return function (args) {\n        const value = Number.parseFloat(source(args) || 0);\n        let text;\n        if (fixed) {\n            text = value.toFixed(fixed);\n        }\n        else {\n            text = \"\" + value;\n        }\n        if (value > 0 && wantSign) {\n            text = \"+\" + text;\n        }\n        if (length && left) {\n            return text.padEnd(length);\n        }\n        else if (length) {\n            return text.padStart(length);\n        }\n        return text;\n    };\n}\nexport function makeVariable(pattern) {\n    const data = /((\\w+) )?(\\w+)(\\.(\\w+))?(%[\\+\\.\\-\\d]*[dsf])?/.exec(pattern) || [];\n    const helper = data[2];\n    const base = data[3];\n    const field = data[5];\n    const format = data[6];\n    let result = baseValue(base);\n    if (field && field.length) {\n        result = fieldValue(field, result);\n    }\n    if (helper && helper.length) {\n        result = helperValue(helper, result);\n    }\n    if (format && format.length) {\n        if (format.endsWith(\"s\")) {\n            result = stringFormat(format, result);\n        }\n        else if (format.endsWith(\"d\")) {\n            result = intFormat(format, result);\n        }\n        else {\n            result = floatFormat(format, result);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=compile.js.map","import * as Config from \"./config\";\nexport function eachChar(text, fn, fg, bg) {\n    if (text === null || text === undefined)\n        return;\n    if (!fn)\n        return;\n    text = \"\" + text; // force string\n    if (!text.length)\n        return;\n    const colors = [];\n    const colorFn = Config.helpers.eachColor;\n    if (fg === undefined)\n        fg = Config.options.defaultFg;\n    if (bg === undefined)\n        bg = Config.options.defaultBg;\n    const ctx = {\n        fg,\n        bg,\n    };\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    colorFn(ctx);\n    let n = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            let j = i + 1;\n            while (j < text.length && text[j] != CS) {\n                ++j;\n            }\n            if (j == text.length) {\n                console.warn(`Reached end of string while seeking end of color start section.\\n- text: ${text}\\n- start @: ${i}`);\n                return; // reached end - done (error though)\n            }\n            if (j == i + 1) {\n                // next char\n                ++i; // fall through\n            }\n            else {\n                colors.push([ctx.fg, ctx.bg]);\n                const color = text.substring(i + 1, j);\n                const newColors = color.split(\"|\");\n                ctx.fg = newColors[0] || ctx.fg;\n                ctx.bg = newColors[1] || ctx.bg;\n                colorFn(ctx);\n                i = j;\n                continue;\n            }\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n            }\n            else {\n                const c = colors.pop(); // if you pop too many times colors still revert to what you passed in\n                [ctx.fg, ctx.bg] = c || [fg, bg];\n                // colorFn(ctx);\n                continue;\n            }\n        }\n        fn(ch, ctx.fg, ctx.bg, n, i);\n        ++n;\n    }\n}\n//# sourceMappingURL=each.js.map","import * as Config from './config';\nexport function length(text) {\n    if (!text || text.length == 0)\n        return 0;\n    let len = 0;\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    for (let i = 0; i < text.length; ++i) {\n        const ch = text[i];\n        if (ch == CS) {\n            const end = text.indexOf(CS, i + 1);\n            i = end;\n        }\n        else if (ch == CE) {\n            // skip\n        }\n        else {\n            ++len;\n        }\n    }\n    return len;\n}\nexport function advanceChars(text, start, count) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    while (count > 0) {\n        const ch = text[i];\n        if (ch === CS) {\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE) {\n                --count;\n                ++i;\n            }\n            ++i;\n        }\n        else {\n            --count;\n            ++i;\n        }\n    }\n    return i;\n}\nexport function firstChar(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch === CS) {\n            if (text[i + 1] === CS)\n                return CS;\n            ++i;\n            while (text[i] !== CS)\n                ++i;\n            ++i;\n        }\n        else if (ch === CE) {\n            if (text[i + 1] === CE)\n                return CE;\n            ++i;\n        }\n        else {\n            return ch;\n        }\n    }\n    return null;\n}\nexport function padStart(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padStart(width + colorLen, pad);\n}\nexport function padEnd(text, width, pad = ' ') {\n    const colorLen = text.length - length(text);\n    return text.padEnd(width + colorLen, pad);\n}\nexport function center(text, width, pad = ' ') {\n    const rawLen = text.length;\n    const len = length(text);\n    const padLen = width - len;\n    if (padLen <= 0)\n        return text;\n    const left = Math.floor(padLen / 2);\n    return text.padStart(rawLen + left, pad).padEnd(rawLen + padLen, pad);\n}\nexport function capitalize(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = 0;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == CS) {\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            ++i;\n        }\n        else if (ch == CE) {\n            ++i;\n            while (text[i] == CS && i < text.length) {\n                ++i;\n            }\n        }\n        else {\n            return text.substring(0, i) + ch.toUpperCase() + text.substring(i + 1);\n        }\n    }\n    return text;\n}\nexport function removeColors(text) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let out = '';\n    let start = 0;\n    for (let i = 0; i < text.length; ++i) {\n        const k = text[i];\n        if (k === CS) {\n            if (text[i + 1] == CS) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            ++i;\n            while (text[i] != CS && i < text.length) {\n                ++i;\n            }\n            start = i + 1;\n        }\n        else if (k === CE) {\n            if (text[i + 1] == CE) {\n                ++i;\n                continue;\n            }\n            out += text.substring(start, i);\n            start = i + 1;\n        }\n    }\n    if (start == 0)\n        return text;\n    out += text.substring(start);\n    return out;\n}\n//# sourceMappingURL=utils.js.map","import * as Config from \"./config\";\nimport * as Utils from \"./utils\";\nimport { eachChar } from \"./each\";\nexport function nextBreak(text, start) {\n    const CS = Config.options.colorStart;\n    const CE = Config.options.colorEnd;\n    let i = start;\n    let l = 0;\n    let count = true;\n    while (i < text.length) {\n        const ch = text[i];\n        if (ch == \" \") {\n            while (text[i + 1] == \" \") {\n                ++i;\n                ++l; // need to count the extra spaces as part of the word\n            }\n            return [i, l];\n        }\n        if (ch == \"-\") {\n            return [i, l];\n        }\n        if (ch == \"\\n\") {\n            return [i, l];\n        }\n        if (ch == CS) {\n            if (text[i + 1] == CS && count) {\n                l += 1;\n                i += 2;\n                continue;\n            }\n            count = !count;\n            ++i;\n            continue;\n        }\n        else if (ch == CE) {\n            if (text[i + 1] == CE) {\n                l += 1;\n                ++i;\n            }\n            i++;\n            continue;\n        }\n        l += count ? 1 : 0;\n        ++i;\n    }\n    return [i, l];\n}\nexport function splice(text, start, len, add = \"\") {\n    return text.substring(0, start) + add + text.substring(start + len);\n}\nexport function hyphenate(text, width, start, end, wordWidth, spaceLeftOnLine) {\n    if (wordWidth + 1 > width * 2) {\n        throw new Error(\"Cannot hyphenate - word length > 2 * width\");\n    }\n    if (spaceLeftOnLine < 4 || spaceLeftOnLine + width < wordWidth) {\n        text = splice(text, start - 1, 1, \"\\n\");\n        spaceLeftOnLine = width;\n    }\n    if (spaceLeftOnLine + width > wordWidth) {\n        // one hyphen...\n        const hyphenAt = Math.min(Math.floor(wordWidth / 2), spaceLeftOnLine - 1);\n        const w = Utils.advanceChars(text, start, hyphenAt);\n        text = splice(text, w, 0, \"-\\n\");\n        return [text, end + 2];\n    }\n    if (width >= wordWidth) {\n        return [text, end];\n    }\n    const hyphenAt = Math.min(wordWidth, width - 1);\n    const w = Utils.advanceChars(text, start, hyphenAt);\n    text = splice(text, w, 0, \"-\\n\");\n    return [text, end + 2];\n}\nexport function wordWrap(text, width, indent = 0) {\n    if (!width)\n        throw new Error(\"Need string and width\");\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    if (text.indexOf(\"\\n\") == -1) {\n        return wrapLine(text, width, indent);\n    }\n    const lines = text.split(\"\\n\");\n    const split = lines.map((line, i) => wrapLine(line, width, i ? indent : 0));\n    return split.join(\"\\n\");\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nfunction wrapLine(text, width, indent = 0) {\n    if (text.length < width)\n        return text;\n    if (Utils.length(text) < width)\n        return text;\n    let spaceLeftOnLine = width;\n    width = width - indent;\n    let printString = text;\n    // Now go through and replace spaces with newlines as needed.\n    // console.log('wordWrap - ', text, width, indent);\n    let removeSpace = true;\n    let i = -1;\n    while (i < printString.length) {\n        // wordWidth counts the word width of the next word without color escapes.\n        // w indicates the position of the space or newline or null terminator that terminates the word.\n        let [w, wordWidth] = nextBreak(printString, i + (removeSpace ? 1 : 0));\n        let hyphen = false;\n        if (printString[w] == \"-\") {\n            w++;\n            wordWidth++;\n            hyphen = true;\n        }\n        // console.log('- w=%d, width=%d, space=%d, word=%s', w, wordWidth, spaceLeftOnLine, printString.substring(i, w));\n        if (wordWidth > width) {\n            [printString, w] = hyphenate(printString, width, i + 1, w, wordWidth, spaceLeftOnLine);\n        }\n        else if (wordWidth == spaceLeftOnLine) {\n            const nl = w < printString.length ? \"\\n\" : \"\";\n            const remove = hyphen ? 0 : 1;\n            printString = splice(printString, w, remove, nl); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            spaceLeftOnLine = width;\n        }\n        else if (wordWidth > spaceLeftOnLine) {\n            const remove = removeSpace ? 1 : 0;\n            printString = splice(printString, i, remove, \"\\n\"); // [i] = '\\n';\n            w += 1 - remove; // if we change the length we need to advance our pointer\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine = width - wordWidth - extra; // line width minus the width of the word we just wrapped and the space\n            //printf(\"\\n\\n%s\", printString);\n        }\n        else {\n            const extra = hyphen ? 0 : 1;\n            spaceLeftOnLine -= wordWidth + extra;\n        }\n        removeSpace = !hyphen;\n        i = w; // Advance to the terminator that follows the word.\n    }\n    return printString;\n}\n// Returns the number of lines, including the newlines already in the text.\n// Puts the output in \"to\" only if we receive a \"to\" -- can make it null and just get a line count.\nexport function splitIntoLines(source, width, indent = 0) {\n    const CS = Config.options.colorStart;\n    const output = [];\n    let text = wordWrap(source, width, indent);\n    let start = 0;\n    let fg0 = null;\n    let bg0 = null;\n    eachChar(text, (ch, fg, bg, _, n) => {\n        if (ch == \"\\n\") {\n            let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n            output.push(color + text.substring(start, n));\n            start = n + 1;\n            fg0 = fg;\n            bg0 = bg;\n        }\n    });\n    let color = fg0 || bg0 ? `${CS}${fg0 ? fg0 : \"\"}${bg0 ? \"|\" + bg0 : \"\"}${CS}` : \"\";\n    output.push(color + text.substring(start));\n    return output;\n}\n//# sourceMappingURL=lines.js.map","import { compile, apply } from \"./compile\";\nimport { eachChar } from \"./each\";\nimport { length, padStart, padEnd, center, capitalize, removeColors, firstChar, } from \"./utils\";\nimport { wordWrap, splitIntoLines } from \"./lines\";\nimport { addHelper, options } from \"./config\";\nfunction configure(opts = {}) {\n    if (opts.fg !== undefined) {\n        options.defaultFg = opts.fg;\n    }\n    if (opts.bg !== undefined) {\n        options.defaultBg = opts.bg;\n    }\n    if (opts.colorStart) {\n        options.colorStart = opts.colorStart;\n    }\n    if (opts.colorEnd) {\n        options.colorEnd = opts.colorEnd;\n    }\n    if (opts.field) {\n        options.field = opts.field;\n    }\n}\nexport { compile, apply, eachChar, length, padStart, padEnd, center, firstChar, capitalize, removeColors, wordWrap, splitIntoLines, configure, addHelper, options, };\n//# sourceMappingURL=index.js.map","import { Mixer } from \"./canvas/mixer\";\nimport * as Color from \"./color\";\nimport * as Text from \"./text/index\";\nexport class DataBuffer {\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n        this._data = new Uint32Array(width * height);\n    }\n    get data() {\n        return this._data;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get(x, y) {\n        let index = y * this.width + x;\n        const style = this._data[index] || 0;\n        const ch = style >> 24;\n        const bg = (style >> 12) & 0xfff;\n        const fg = style & 0xfff;\n        return { ch, fg, bg };\n    }\n    _toGlyph(ch) {\n        if (!ch)\n            return -1; // 0 handled elsewhere\n        return ch.charCodeAt(0);\n    }\n    draw(x, y, glyph = -1, fg = -1, // TODO - White?\n    bg = -1 // TODO - Black?\n    ) {\n        let index = y * this.width + x;\n        const current = this._data[index] || 0;\n        if (typeof glyph !== \"number\") {\n            glyph = this._toGlyph(glyph);\n        }\n        if (typeof fg !== \"number\") {\n            fg = Color.from(fg).toInt();\n        }\n        if (typeof bg !== \"number\") {\n            bg = Color.from(bg).toInt();\n        }\n        glyph = glyph >= 0 ? glyph & 0xff : current >> 24;\n        bg = bg >= 0 ? bg & 0xfff : (current >> 12) & 0xfff;\n        fg = fg >= 0 ? fg & 0xfff : current & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data[index] = style;\n        return this;\n    }\n    // This is without opacity - opacity must be done in Mixer\n    drawSprite(x, y, sprite) {\n        const ch = sprite.ch === null ? -1 : sprite.ch;\n        const fg = sprite.fg === null ? -1 : sprite.fg;\n        const bg = sprite.bg === null ? -1 : sprite.bg;\n        return this.draw(x, y, ch, fg, bg);\n    }\n    blackOut(...args) {\n        if (args.length == 0) {\n            return this.fill(0, 0, 0);\n        }\n        return this.draw(args[0], args[1], 0, 0, 0);\n    }\n    fill(glyph = 0, fg = 0xfff, bg = 0) {\n        if (typeof glyph == \"string\") {\n            glyph = this._toGlyph(glyph);\n        }\n        glyph = glyph & 0xff;\n        fg = fg & 0xfff;\n        bg = bg & 0xfff;\n        const style = (glyph << 24) + (bg << 12) + fg;\n        this._data.fill(style);\n        return this;\n    }\n    copy(other) {\n        this._data.set(other._data);\n        return this;\n    }\n    drawText(x, y, text, fg = 0xfff, bg = -1) {\n        if (typeof fg !== \"number\")\n            fg = Color.from(fg);\n        if (typeof bg !== \"number\")\n            bg = Color.from(bg);\n        Text.eachChar(text, (ch, fg0, bg0, i) => {\n            if (x + i >= this.width)\n                return;\n            this.draw(i + x, y, ch, fg0, bg0);\n        }, fg, bg);\n        return ++y;\n    }\n    wrapText(x, y, width, text, fg = 0xfff, bg = -1, indent = 0) {\n        if (typeof fg !== \"number\")\n            fg = Color.from(fg);\n        if (typeof bg !== \"number\")\n            bg = Color.from(bg);\n        width = Math.min(width, this.width - x);\n        text = Text.wordWrap(text, width, indent);\n        let xi = x;\n        Text.eachChar(text, (ch, fg0, bg0) => {\n            if (ch == \"\\n\") {\n                while (xi < x + width) {\n                    this.draw(xi++, y, 0, 0x000, bg0);\n                }\n                ++y;\n                xi = x + indent;\n                return;\n            }\n            this.draw(xi++, y, ch, fg0, bg0);\n        }, fg, bg);\n        while (xi < x + width) {\n            this.draw(xi++, y, 0, 0x000, bg);\n        }\n        return ++y;\n    }\n    fillRect(x, y, w, h, ch = -1, fg = -1, bg = -1) {\n        if (ch === null)\n            ch = -1;\n        if (typeof ch !== \"number\")\n            ch = this._toGlyph(ch);\n        if (typeof fg !== \"number\")\n            fg = Color.from(fg).toInt();\n        if (typeof bg !== \"number\")\n            bg = Color.from(bg).toInt();\n        for (let i = x; i < x + w; ++i) {\n            for (let j = y; j < y + h; ++j) {\n                this.draw(i, j, ch, fg, bg);\n            }\n        }\n        return this;\n    }\n    blackOutRect(x, y, w, h, bg = 0) {\n        if (typeof bg !== \"number\")\n            bg = Color.from(bg);\n        return this.fillRect(x, y, w, h, 0, 0, bg);\n    }\n    highlight(x, y, color, strength) {\n        if (typeof color !== \"number\") {\n            color = Color.from(color);\n        }\n        const mixer = new Mixer();\n        const data = this.get(x, y);\n        mixer.drawSprite(data);\n        mixer.fg.add(color, strength);\n        mixer.bg.add(color, strength);\n        this.drawSprite(x, y, mixer);\n        return this;\n    }\n    mix(color, percent) {\n        if (typeof color !== \"number\")\n            color = Color.from(color);\n        const mixer = new Mixer();\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const data = this.get(x, y);\n                mixer.drawSprite(data);\n                mixer.fg.mix(color, percent);\n                mixer.bg.mix(color, percent);\n                this.drawSprite(x, y, mixer);\n            }\n        }\n        return this;\n    }\n    dump() {\n        const data = [];\n        let header = \"    \";\n        for (let x = 0; x < this.width; ++x) {\n            if (x % 10 == 0)\n                header += \" \";\n            header += x % 10;\n        }\n        data.push(header);\n        data.push(\"\");\n        for (let y = 0; y < this.height; ++y) {\n            let line = `${(\"\" + y).padStart(2)}] `;\n            for (let x = 0; x < this.width; ++x) {\n                if (x % 10 == 0)\n                    line += \" \";\n                const data = this.get(x, y);\n                const glyph = data.ch;\n                line += String.fromCharCode(glyph || 32);\n            }\n            data.push(line);\n        }\n        console.log(data.join(\"\\n\"));\n    }\n}\nexport class Buffer extends DataBuffer {\n    constructor(canvas) {\n        super(canvas.width, canvas.height);\n        this._target = canvas;\n        canvas.copyTo(this.data);\n    }\n    // get canvas() { return this._target; }\n    _toGlyph(ch) {\n        return this._target.toGlyph(ch);\n    }\n    render() {\n        this._target.copy(this.data);\n        return this;\n    }\n    load() {\n        this._target.copyTo(this.data);\n        return this;\n    }\n}\n//# sourceMappingURL=buffer.js.map","export class Bounds {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.width = w;\n        this.height = h;\n    }\n    contains(...args) {\n        let x = args[0];\n        let y = args[1];\n        if (Array.isArray(x)) {\n            y = x[1];\n            x = x[0];\n        }\n        return (this.x <= x &&\n            this.y <= y &&\n            this.x + this.width > x &&\n            this.y + this.height > y);\n    }\n}\n//# sourceMappingURL=types.js.map","import * as Text from \"./text/index\";\nexport const templates = {};\nexport function install(id, msg) {\n    const template = Text.compile(msg);\n    templates[id] = template;\n}\nexport function installAll(config) {\n    Object.entries(config).forEach(([id, msg]) => install(id, msg));\n}\n// messages\nconst ARCHIVE = [];\nconst CONFIRMED = [];\nvar ARCHIVE_LINES = 30;\nvar MSG_WIDTH = 80;\nvar CURRENT_ARCHIVE_POS = 0;\nvar NEEDS_UPDATE = false;\nlet COMBAT_MESSAGE = null;\nexport function needsUpdate(needs) {\n    if (needs) {\n        NEEDS_UPDATE = true;\n    }\n    return NEEDS_UPDATE;\n}\nexport function configure(opts) {\n    if (!opts)\n        opts = {};\n    ARCHIVE_LINES = opts.length || 30;\n    MSG_WIDTH = opts.width || 80;\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        ARCHIVE[i] = null;\n        CONFIRMED[i] = false;\n    }\n}\n////////////////////////////////////\n// Messages\nexport function add(msg, args) {\n    const template = templates[msg];\n    if (template) {\n        msg = template(args);\n    }\n    else if (args) {\n        msg = Text.apply(msg, args);\n    }\n    commitCombatMessage();\n    addMessage(msg);\n}\nexport function fromActor(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        add(msg, args);\n    }\n}\nexport function addCombat(actor, msg, args) {\n    if (actor.isPlayer() || actor.isVisible()) {\n        const template = templates[msg];\n        if (template) {\n            msg = template(args);\n        }\n        else if (args) {\n            msg = Text.apply(msg, args);\n        }\n        addCombatMessage(msg);\n    }\n}\n// function messageWithoutCaps(msg, requireAcknowledgment) {\nfunction addMessageLine(msg) {\n    if (!Text.length(msg)) {\n        return;\n    }\n    // Add the message to the archive.\n    ARCHIVE[CURRENT_ARCHIVE_POS] = msg;\n    CONFIRMED[CURRENT_ARCHIVE_POS] = false;\n    CURRENT_ARCHIVE_POS = (CURRENT_ARCHIVE_POS + 1) % ARCHIVE_LINES;\n}\nfunction addMessage(msg) {\n    msg = Text.capitalize(msg);\n    // // Implement the American quotation mark/period/comma ordering rule.\n    // for (i=0; text.text[i] && text.text[i+1]; i++) {\n    //     if (text.charCodeAt(i) === COLOR_ESCAPE) {\n    //         i += 4;\n    //     } else if (text.text[i] === '\"'\n    //                && (text.text[i+1] === '.' || text.text[i+1] === ','))\n    // \t\t{\n    // \t\t\tconst replace = text.text[i+1] + '\"';\n    // \t\t\ttext.spliceRaw(i, 2, replace);\n    //     }\n    // }\n    const lines = Text.splitIntoLines(msg, MSG_WIDTH);\n    lines.forEach((l) => addMessageLine(l));\n    // display the message:\n    NEEDS_UPDATE = true;\n    // if (GAME.playbackMode) {\n    // \tGAME.playbackDelayThisTurn += GAME.playbackDelayPerTurn * 5;\n    // }\n}\nfunction addCombatMessage(msg) {\n    if (!COMBAT_MESSAGE) {\n        COMBAT_MESSAGE = msg;\n    }\n    else {\n        COMBAT_MESSAGE += \", \" + Text.capitalize(msg);\n    }\n    NEEDS_UPDATE = true;\n}\nfunction commitCombatMessage() {\n    if (!COMBAT_MESSAGE)\n        return false;\n    addMessage(COMBAT_MESSAGE + \".\");\n    COMBAT_MESSAGE = null;\n    return true;\n}\nexport function confirmAll() {\n    for (let i = 0; i < CONFIRMED.length; i++) {\n        CONFIRMED[i] = true;\n    }\n    NEEDS_UPDATE = true;\n}\nexport function forEach(fn) {\n    for (let i = 0; i < ARCHIVE_LINES; ++i) {\n        const n = (i + CURRENT_ARCHIVE_POS) % ARCHIVE_LINES;\n        const msg = ARCHIVE[n];\n        if (!msg)\n            return;\n        if (!fn(msg, CONFIRMED[n], i))\n            return;\n    }\n}\n//# sourceMappingURL=message.js.map"],"names":["DIRS","CLOCK_DIRS","TRUE","IDENTITY","x","clamp","v","min","max","src","y","distanceBetween","x1","y1","x2","y2","Math","abs","calcRadius","dirBetween","toX","toY","diffX","diffY","absX","absY","sign","assignField","dest","key","current","updated","copy","clear","nullify","clone","Array","isArray","slice","length","setDefaults","obj","def","custom","Object","keys","forEach","origKey","defValue","parts","split","shift","undefined","ERROR","message","Error","WARN","args","console","warn","eachChain","item","fn","index","next","addToChain","name","entry","removeFromChain","root","prev","FP_FACTOR","forLine","fromX","fromY","stepFn","largerTargetComponent","i","targetVector","error","currentVector","previousVector","quadrantTransform","currentLoc","previousLoc","originLoc","targetLoc","floor","a","b","pct","dx","dy","dir","x0","y0","findIndex","result","push","diff","steps","c","last","step","currentXValue","maxXValue","sin","PI","omit","map","t","trim","includes","field","val","search","concat","fields","data","f","member","_default","arg","some","av","arr","reduce","count","chain","line","width","height","RANDOM_CONFIG","make","random","bind","lotteryDrawArray","rand","frequencies","maxFreq","randIndex","range","Random","[object Object]","this","_fn","opts","seed","cosmetic","value","Number","MAX_SAFE_INTEGER","number","lo","hi","sides","addend","total","mult","weights","entries","_","weight","lotteryDrawObject","list","values","fromIndex","toIndex","r","buf","arguments","n","shuffle","percent","outOf","clumps","numSides","Range","lower","upper","rng","_rng","clumped","other","config","JSON","stringify","RE","results","exec","parseInt","base","std","parseFloat","flags","N","flagObj","inverse","out","fl","join","u","startsWith","substring","flagName","flag","Utils.DIRS","CDIRS","Utils.CLOCK_DIRS","makeArray","l","fill","_formatGridValue","String","fromCharCode","charCodeAt","Grid","w","h","super","_width","_height","j","only4dirs","maxIndex","d","hasXY","constructor","update","radius","bounds","left","top","right","bottom","updateRect","updateCircle","findValue","replaceValue","from","match","fmtFn","dumpRect","Utils.clamp","output","padStart","log","bestLoc","bestDistance","dist","Utils.distanceBetween","chance","deterministic","locationCount","k","candidateLocs","loc","testFn","arcCount","oldX","oldY","newX","newY","Utils.IDENTITY","GRID_CACHE","NumGrid","grid","pop","resize","indexOf","col","findValueMin","findValueMax","fillValue","eligibleValueMin","eligibleValueMax","fillCount","floodFillRange","closestMatchingLoc","validValue","randomMatchingLoc","matchingLocNear","least","targetValue","leastPositiveValue","matchValue","numberOfCells","matchFn","fillFn","floodFill","birthParameters","survivalParameters","nbCount","buffer2","alloc","didSomething","free","roundCount","minBlobWidth","minBlobHeight","maxBlobWidth","maxBlobHeight","percentSeeded","blobNumber","blobSize","topBlobNumber","topBlobSize","topBlobMinX","topBlobMinY","topBlobMaxX","topBlobMaxY","blobWidth","blobHeight","foundACellThisLine","round","_cellularAutomataRound","destGrid","srcGrid","srcToDestX","srcToDestY","s","destX","destY","isOpen","solutionDir","oppX","oppY","fnOpen","onto","commands","KEYMAP","EVENTS","DEAD_EVENTS","LAST_CLICK","KEYPRESS","MOUSEMOVE","CLICK","TICK","MOUSEUP","CONTROL_CODES","CURRENT_HANDLER","PAUSED","async","dispatchEvent","ev","km","command","type","code","keypress","call","Utils.WARN","recycleEvent","keyCodeDirection","lowerKey","toLowerCase","mouse","nextEvent","ms","Utils.TRUE","done","elapsed","e","Promise","resolve","dt","nextKeyOrClick","pause","id","keymap","first","unshift","shiftKey","ctrlKey","altKey","metaKey","toUpperCase","clientX","clientY","buttons","setTimeout","running","strategy","_startX","_startY","_maxRadius","_isBlocked","isBlocked","_calcRadius","Utils.calcRadius","_setVisible","setVisible","_hasXY","maxRadius","castLight","row","startSlope","endSlope","xx","xy","yx","yy","currentX","currentY","outerSlope","innerSlope","maxSlope","nextStart","blocked","deltaY","minSlope","deltaX","bright","NO_PATH","makeCostLink","distance","cost","getLink","links","isBoundaryXY","batchOutput","distanceMap","dirs","linkIndex","link","eightWays","head","front","diagCost","way1","way1index","way2","way2index","DIJKSTRA_MAP","nextStep","useDiagonals","bestScore","bestDir","destinationX","destinationY","costMap","Grid.makeArray","maxDistance","setDistance","originX","originY","closestDistance","lowestMapScore","locX","locY","getClosestValidLocationOnMap","path","Listener","context","once","addListener","event","TypeError","listener","Utils.addToChain","removeListener","success","Utils.eachChain","matches","Utils.removeFromChain","clearEvent","apply","p","level","funcs","levels","frequency","start","end","endsWith","found","time","cache","delay","VS","FS","Glyphs","_tileWidth","_tileHeight","needsUpdate","_map","font","_node","document","createElement","_ctx","node","getContext","_configure","el","getElementById","glyph","tileWidth","tileHeight","drawImage","glyphs","basicOnly","basic","_initGlyphs","ctx","pxWidth","pxHeight","ch","fillStyle","fillRect","size","fontSize","textAlign","textBaseline","cx","cy","save","beginPath","rect","clip","fillText","restore","draw","NotSupportedError","params","captureStackTrace","BaseCanvas","options","_renderRequested","_autoRender","_createNode","_createContext","_glyphs","clientWidth","clientHeight","_setGlyphs","forChar","render","div","appendChild","fg","bg","style","_set","requestAnimationFrame","_data","_requestRender","set","Canvas","gl","_gl","_buffers","_attribs","_uniforms","sources","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaders.VS","shaders.FS","useProgram","attributeCount","ACTIVE_ATTRIBUTES","enableVertexAttribArray","info","getActiveAttrib","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","uniform1i","_texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","position","deleteBuffer","uv","buffers","attribs","tileCount","positionData","Uint16Array","QUAD","uvData","Uint8Array","createBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribIPointer","UNSIGNED_SHORT","bufferData","STATIC_DRAW","UNSIGNED_BYTE","createGeometry","assign","Uint32Array","UNSIGNED_INT","uniforms","uniform2uiv","_uploadGlyphs","activeTexture","TEXTURE0","texImage2D","RGBA","viewport","uniform2ui","_createGeometry","_createData","DYNAMIC_DRAW","drawArrays","TRIANGLES","Canvas2D","_changed","Int8Array","_renderCell","px","py","gx","gy","getImageData","di","inv","putImageData","colors","Color","Int16Array","g","redRand","greenRand","blueRand","dances","_r","_g","_b","_rand","_redRand","_greenRand","_blueRand","H","R","G","B","css","toInt","O","isNull","every","base256","toColorInt","blackOut","keepPct","clearDancing","len","toString","fromArray","vals","fromCss","fromName","fromNumber","separate","A","hDiff","sort","mix","WHITE","BLACK","install","installSpread","lighten","darken","color","temp","Sprite","opacity","Color.from","sprites","makeSprite","Color.Color","sprite","Color.make","Mixer","equals","multiply","add","Color.separate","bake","mixer","image","canvas","fromImage","HTMLImageElement","fromFont","colorStart","colorEnd","defaultFg","defaultBg","helpers","eachColor","default","compile","template","F","Config.options","sections","part","textSegment","pattern","helper","format","Config.helpers","source","fieldValue","helperValue","text","padEnd","stringFormat","wantSign","intFormat","fixed","toFixed","floatFormat","makeVariable","eachChar","colorFn","CS","CE","newColors","advanceChars","capitalize","nextBreak","splice","hyphenate","wordWidth","spaceLeftOnLine","Utils.advanceChars","wordWrap","indent","Utils.length","wrapLine","printString","removeSpace","hyphen","remove","splitIntoLines","fg0","bg0","pad","colorLen","rawLen","padLen","DataBuffer","_toGlyph","Text.eachChar","Text.wordWrap","xi","strength","get","drawSprite","header","_target","copyTo","toGlyph","templates","msg","Text.compile","ARCHIVE","CONFIRMED","ARCHIVE_LINES","MSG_WIDTH","CURRENT_ARCHIVE_POS","NEEDS_UPDATE","COMBAT_MESSAGE","Text.apply","addMessage","Text.splitIntoLines","Text.capitalize","Text.length","addMessageLine","needs","actor","isPlayer","isVisible","addCombatMessage"],"mappings":"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"}